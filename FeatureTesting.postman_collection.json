{
	"info": {
		"_postman_id": "f53272da-f2af-4eb8-b653-8bbc23c3b982",
		"name": "FeatureTesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "23448352",
		"_collection_link": "https://warped-station-774911.postman.co/workspace/Team-Workspace~33ad36c2-bfbd-43bd-8b54-26ef134cc999/collection/23448352-f53272da-f2af-4eb8-b653-8bbc23c3b982?action=share&source=collection_link&creator=23448352"
	},
	"item": [
		{
			"name": "FeatureTesting",
			"item": [
				{
					"name": "SignUp",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.environment.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign up User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n    \\\"name\\\": \\\"Automation\\\",\\r\\n    \\\"email\\\": \\\"pisig17758@mugadget.com\\\",\\r\\n    \\\"password\\\": \\\"123456789\\\",\\r\\n    \\\"companyName\\\": \\\"O3 interfaces\\\",\\r\\n    \\\"companySize\\\": \\\"100\\\",\\r\\n    \\\"companyDomain\\\": \\\"o3interfaces.com\\\"\\r\\n}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-up",
								"description": "## Details:\n\n- Shall be called within 5 minutes after client-handshake API call.\n- Upon http status code 503, call client-handshake API again and use the token (received in response of client-handshake) in this API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `name (string) (mandatory)` | Full name of the User |\n| `email (string) (mandatory)` | email of the user |\n| `password (string) (mandatory)` | password of the user |\n| `companyName (string) (optional)` | company name (if any) |\n| `companyDomain (string) (optional)` | company domain (if any) |\n| `companySize (INT) (optional)` | company size (if any) |\n\n> IMPORTANT: This API requires token in Authorization header. Token is received in client-handshake API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n    \\\"name\\\": \\\"Sheheryar Afzal\\\",\\r\\n    \\\"email\\\": \\\"sheheryar003@gmail.com\\\",\\r\\n    \\\"password\\\": \\\"123456789\\\",\\r\\n    \\\"companyName\\\": \\\"O3 interfaces\\\",\\r\\n    \\\"companySize\\\": \\\"100\\\",\\r\\n    \\\"companyDomain\\\": \\\"o3interfaces.com\\\"\\r\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/fiv2/sign-up"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 10 Nov 2022 13:16:31 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "15"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"f-NQVRlQfKHCoInEbhALgECMonhCE\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJtdDJLWWNZSXlIcDgzS2Q3S1ZZdkxkTUNxSVpycHkweiIsImlhdCI6MTY2ODc1NDI3OCwiZXhwIjoxNjcxMzQ2Mjc4fQ.Q2LqWnERmkPecEE9Xy9vl3NwxQUrxCUmnUgxirU2tYs",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n    \\\"name\\\": \\\"Sheheryar Afzal\\\",\\r\\n    \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n    \\\"password\\\": \\\"123456789\\\",\\r\\n    \\\"companyName\\\": \\\"O3 interfaces\\\",\\r\\n    \\\"companySize\\\": \\\"100\\\",\\r\\n    \\\"companyDomain\\\": \\\"o3interfaces.com\\\"\\r\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-up"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:57:17 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Email Otp Verification",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"pisig17758@mugadget.com\\\",\\r\\n        \\\"otp\\\": \\\"244264\\\"\\r\\n    }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/email-otp-verification",
								"description": "## Details:\n\n- This API is used to verify the email (entered in signup API) with a 6 digit OTP\n- After verifying the OTP, the user is signed in, hence you will call the list workspaces API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `email of the user that was entered in sign up API` |\n| `otp (string) (mandatory)` | OTP code that is received in the mail. |\n\n> IMPORTANT: This API does not require any token. But on a successful OTP verification, it issues a token which is used in further APIs (i.e. APIs called after sign in)"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"fewad83170@teknowa.com\\\",\\r\\n        \\\"otp\\\": \\\"907281\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/email-otp-verification"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 22 Nov 2022 13:21:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "360"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"168-y6Mvq+ZkoM2u2Y3qNe1YN9Ua3AY\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"cta_label\": \"\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ0QVI0amNKWDdmNUJLRjAxQjNXNGFHMENwQTRRVERXeCIsImlhdCI6MTY2OTEyMzI3MiwiZXhwIjoxNjcxNzE1MjcyfQ.aYPKf45OnkB0D64SnXcMjuA8ACUCF7ZOmppf0EGq4mA\",\n    \"user\": {\n        \"full name\": \"Fawad Nazir\",\n        \"email\": \"fewad83170@teknowa.com\",\n        \"kuid\": \"iljcryvjd4JnQYmgVdB0lcpLngno0PMF\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "SignIn",
					"item": [
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Upload User Profile Pic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profilePicture",
											"type": "file",
											"src": "/Users/home/Downloads/loin.jpg"
										},
										{
											"key": "payload",
											"value": "{\"workspace_kuid\": \"\", \"project_kuid\": \"\"}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{base_url_appli_web}}/user/upload-profile-picture",
								"description": "## Details:\n\n- This API is used to upload profile picture of the current user\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `file (png, jpg ...etc) (mandatory)` | `profile picture of the user` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Change user FullName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n   \\\"full_name\\\": \\\"Muhammad Azhar\\\"\\n }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/change-user-name",
								"description": "## Details:\n\n- This API is used change the User Full Name.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `full_nake (string) (mandatory)` | `Full Name of the user to be chnaged` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Change user FullName",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n       \\\"full_name\\\": \\\"Muhammad Azhar\\\"\\n }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/change-user-name"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Jan 2023 07:11:44 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "51"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"33-Viu3m5ZPK9y/Uzhms0oiN5QzpeE\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"scessfully Changed\"\n}"
								}
							]
						},
						{
							"name": "Sign Out",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", null);\r",
											"    pm.collectionVariables.set(\"passportToken\", null);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 0);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 0);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 0);\r",
											"\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"url": "{{base_url_identity_management}}/sign-out",
								"description": "## Details:\n\n- This API is used to log a user out\n    \n\n> IMPORTANT: This API requires token in Authorization header without Bearer keyword. This token is received in client handshake API"
							},
							"response": [
								{
									"name": "Success (200) plain text",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJuUlMzNzg5cUxlSjIxN3JqYzkwNXFRUFJxVTlvNnFRYiIsImlhdCI6MTY3MzUxNzgxMiwiZXhwIjoxNjc2MTA5ODEyfQ.FHHOquMmQSp4ResOxPAsNe-6PiPSCPJcL2C4ASkfIpM",
												"type": "text"
											}
										],
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-out"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 12 Jan 2023 11:30:35 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "35"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"23-VpggjTd+1TjuNBcPpRAlWgtDbPk\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": \"success\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "WorkSpace",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"demo.user@o3interfaces.com\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "list workspaces",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    console.log(\"Collection Variable is_listWorkspaces_called is set to 1\");\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"}\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"ownworkspace_kuid\", responseData.owned_workspaces[0].ws_kuid);\r",
											"}\r",
											"\r",
											"// if(pm.response.to.have.status(200)) {\r",
											"//     const responseData = pm.response.json()\r",
											"//     pm.collectionVariables.set(\"sharedworkspace_kuid\", responseData.shared_workspaces[0].ws_kuid);\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"url": "{{base_url_appli_web}}/user-workspaces",
								"description": "## Details:\n\n- Doesn't require request body.\n- Shall be called right after user successfully logs into the mobile/web app.\n- This API fetches user workspaces (if any).\n- If received empty array, then show a \"create workspace\" button on the front-end.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n    \n\n> IMPORTANT: Requires token (in Authorization header) received in the response on sign-in API or Email OTP verification API"
							},
							"response": [
								{
									"name": "Session Expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJINTkxSnVZa0xrdUNFUXBBTDF4dWNpa3hoNm1SOXgxZiIsImlhdCI6MTY2ODc2NjQ2NywiZXhwIjoxNjcxMzU4NDY3fQ.PuqleSVeJ8VTVCS2AL9wqhoZIK73rYCXDoAyvO-SIYk",
												"type": "text"
											}
										],
										"url": "http://application-webservices.transroadservices.com/api/v1/user-workspaces"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:39 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"url": "http://application-webservices.transroadservices.com/api/v1/user-workspaces"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Feb 2023 06:00:13 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "10485"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"28f5-dIzsw7iKi3mp00V4XvcShw9kYSA\""
										}
									],
									"cookie": [],
									"body": "{\n    \"owned_workspaces\": [\n        {\n            \"ws_kuid\": \"9eEUCrD6MyVw40NAUt0Er8bsj7PQxOFf\",\n            \"ws_title\": \"Workspace 5 new \",\n            \"ws_avatar\": \"temp Url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 2\n        },\n        {\n            \"ws_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n            \"ws_title\": \"KMBL\",\n            \"ws_avatar\": \"avatar url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 4\n        },\n        {\n            \"ws_kuid\": \"FHrXPPNdYz1eG4i3jHuzHKDoePzfwBcp\",\n            \"ws_title\": \"Haris Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ilqdsRsX3t1boJhbOAb2w1vyeFzuLxPM\",\n            \"ws_title\": \"Haris Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"WDy7SyRBgtkSzV88U30PBbHC5hOnsB1P\",\n            \"ws_title\": \"Haris\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"exs5TpEcvkF8OlkFbrMRETVHvFlcopgE\",\n            \"ws_title\": \"Haris\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"EQpvfeh6E6A6WOITzi0ZAYMdW6ZDSpIT\",\n            \"ws_title\": \"Haris\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"WUKRwlSSnlWL3ad9MZQkysLXMeHeBeMw\",\n            \"ws_title\": \"Haris New Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ER5OzK41i3qZRMr5WAenlaN8BWnqRg5X\",\n            \"ws_title\": \"Haris New Workspace 1\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"r8KCXQLqHLL1OjUEi44agABIlNJua9Qx\",\n            \"ws_title\": \"New o3 workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"fXfiIUOgC1AYYhGYPSITCEP8UJlfXhJV\",\n            \"ws_title\": \"New Project\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"7vD7I9JcQINoMH8qt6cKwvhl7tDyG4Ms\",\n            \"ws_title\": \"       \",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"H8exUayWko6ygkLmaeYn6f4ECkWtvcYj\",\n            \"ws_title\": \"UBL QATAR\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ud5W6DZqGPtqRPqUtGuxUDOXxFIveCoc\",\n            \"ws_title\": \"Qatar 2\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"uCQfoIGjk0X9KTGjsOLt20PnYEZDBMcb\",\n            \"ws_title\": \"Qatar 3\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"TUiLltkGKyiLn7scxiJC1oWKOmbAvzWT\",\n            \"ws_title\": \"Qatar 4\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"klREfqV93SquRKlm0m9B2IQSs3CC7ALO\",\n            \"ws_title\": \"Qatar 5\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"TnPxlO19C5KYozcxAkdNl2S6wJoVbAnM\",\n            \"ws_title\": \"Qatar 6\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"W26NB54E3ShKVVJ9sfGkYYNki5a4IpDY\",\n            \"ws_title\": \"te123\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"pcQv6d18SbIUTovrUsSwpMrCJGYprBua\",\n            \"ws_title\": \"test\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"lJbtW2BypT37Zy5Fu2ygPDLPlDKJeFx3\",\n            \"ws_title\": \"Zeesha\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"MfK3HmGZgbOdPn1qGNsnjMfRKPMNQRel\",\n            \"ws_title\": \"Zeesha\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"8EXPxL1PQ8h8MeO3Jfbowha5oz6kIfNx\",\n            \"ws_title\": \"Zeesnhh\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"bUGxzjGuv7mUuTHLnbbY1SeOGZtFFGEk\",\n            \"ws_title\": \"Hello\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"waJu4GHdGfz0aQzHJXM8naVXrQgpflcc\",\n            \"ws_title\": \"Zeeshan Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"3D4GEFUFmw7RpCjgjmulpZvyJakkgtfz\",\n            \"ws_title\": \"Ggccccccc\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"As0YEk5X85047XoQPvo3wrCTo3XCqEfh\",\n            \"ws_title\": \"Fggffg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"l8pMPYVCFVg82VViAYsGCm8MN9DTDxZL\",\n            \"ws_title\": \"Cgggygg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"4EsiRD80xOWfeBeykJ4I5EPypmmpEC8l\",\n            \"ws_title\": \"Hgggggg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"wTCV45peCcl5DTTTIeU1QJB71pdBtrCD\",\n            \"ws_title\": \"Zeeshan Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"YcB865q6Id7kJ9sWYWEHgz7e7VmbAdTD\",\n            \"ws_title\": \"Shani\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"3TcQ90TUGEepselmOS5t9kZlCyEG4FJT\",\n            \"ws_title\": \"Bbhhhgvvc\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"FbP93rykwwoHRimSOHkvhBs0vkHBS1Qz\",\n            \"ws_title\": \"Zeeshan\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"h1q07bs3kSI0XojFbDdBRBbL2UG9fBaW\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"Wp2X0jpevnbcbQzQROCadE3qsEC2GLK2\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"8P2aln9TJBPyab46QhumZ0IwPO1FwNBv\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"HvmgwIvSLGdktcWRRCteiC4JQyHM1R9r\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"uLiBNo65jOkhZ8TBecmuPEMCpnxCfVyK\",\n            \"ws_title\": \"Trffff\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"OkbqUC28uWXuwN0lDqEjRM5M6RQmbrm0\",\n            \"ws_title\": \"Bhggg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"zpXZhPKLsNvSaSqEeGjU2Qc3BUJO8EEO\",\n            \"ws_title\": \"Qwerty\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ElRrTmAoEwdDz4S0mWFIayDMxALUMIDL\",\n            \"ws_title\": \"Asdfg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"VkYlMY4zo0Rj4psnJKxBasjWORKmIB52\",\n            \"ws_title\": \"Zxcvb\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"9oWeaLeJlEaOhw87a2H0lO9cKd1iM8gv\",\n            \"ws_title\": \"Zaqwe\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"lmvJpjwvEZDOD0O5LMosDxuIxXlEhNx2\",\n            \"ws_title\": \"Backend testing\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"DLkVXC5AbFuboBY5CzxSnviGZ55w9OWm\",\n            \"ws_title\": \"Backend Testing\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"33bzFpZcbgekJWywzmdAOvYD0SugOzEn\",\n            \"ws_title\": \"New workspace crash\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"yiAbsJAVDPKGNWU7syRhWUVD7SaF1nke\",\n            \"ws_title\": \"Crash new\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"nqZ3hAaZwYKWCsesaBuNoXRpjooYCLv6\",\n            \"ws_title\": \"Donâ\\u0080\\u0099t Delete WorkSpace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"WycBR3pHKJMfihlTzLnVoAtCHOl7zjJd\",\n            \"ws_title\": \"KMBL\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"PQNLlfHT3mBhkp4gCu8d4aWNV1j0XoBv\",\n            \"ws_title\": \"Donot Delete This Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"29a6bef5b32c4298b92072f95d07ab8b\",\n            \"ws_title\": \"Test workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"fbf352148dd44f229f97c022d415c735\",\n            \"ws_title\": \"Test workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"5fd124c53050437693057c619cf33888\",\n            \"ws_title\": \"Test workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"4bd132c3b47c4df490b392b7a6feb9b7\",\n            \"ws_title\": \"Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"111fbc50e91242a7a7267ae932f7ca08\",\n            \"ws_title\": \"Abcdf\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"b5bb18f1c5384eeea6fcd27c4363d43d\",\n            \"ws_title\": \"Abcdsa\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ef291905c26e4f609567716c425d3486\",\n            \"ws_title\": \"123456\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"9263365e30fd412cba1f981c947598c9\",\n            \"ws_title\": \"123466\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"9de1e57f702a49c497e8ef5592ae8ced\",\n            \"ws_title\": \"KMBL121\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        }\n    ],\n    \"shared_workspaces\": [\n        {\n            \"ws_kuid\": \"9eEUCrD6MyVw40NAUt0Er8bsj7PQxOFf\",\n            \"ws_title\": \"Workspace 5 new \",\n            \"ws_avatar\": \"temp Url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"workspace-member\",\n            \"member_role_kuid\": \"a34f182e793e47769c97c\",\n            \"ws_members\": 2\n        },\n        {\n            \"ws_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n            \"ws_title\": \"KMBL\",\n            \"ws_avatar\": \"avatar url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"project-member\",\n            \"member_role_kuid\": \"a20b0fabc39bed7c0fa9\",\n            \"ws_members\": 4\n        }\n    ],\n    \"lastVisited_workspace\": {\n        \"ws_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n        \"ws_type\": \"owned\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create Workspace",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"try {\r",
											"    pm.expect(pm.response.status).to.equal(200);\r",
											"    const responseData = pm.response.json();\r",
											"    if (responseData.workspace_projects && responseData.workspace_projects.length > 0) {\r",
											"        // Check if the property exists in the first element of the array\r",
											"        if (responseData.workspace_projects[0].p_kuid) {\r",
											"            pm.collectionVariables.set(\"project_kuid\", responseData.workspace_projects[0].p_kuid);\r",
											"        } else {\r",
											"            console.log(\"The property 'p_kuid' does not exist in the first element of 'workspace_projects' array.\");\r",
											"        }\r",
											"    } else {\r",
											"        console.log(\"The 'workspace_projects' array is either empty or does not exist.\");\r",
											"    }\r",
											"} catch (error) {\r",
											"    console.error(`Warning: Response status is ${pm.response.status}. Expected status code 200.`);\r",
											"}\r",
											"\r",
											"\r",
											"// if(pm.response.to.have.status(200)) {\r",
											"//     const responseData = pm.response.json()\r",
											"//     pm.collectionVariables.set(\"ownWorkspace_kuid\", responseData.owned_workspaces[0].ws_kuid);\r",
											"// }\r",
											"// if(pm.response.to.have.status(403)) {\r",
											"//     const responseData = pm.response.json()\r",
											"//     pm.collectionVariables.set(\"sharedWorkspace_kuid\", responseData.shared_workspaces[0].ws_kuid);\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_title\\\": \\\"KMBL\\\",\\r\\n        \\\"business_type\\\": \\\"abc\\\",\\r\\n        \\\"company_size\\\": \\\"xyz\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/workspace/create",
								"description": "## Details:\n\n- This API creates workspace for the current logged in user.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_title (string) (mandatory)` | Title for the workspace being created |\n| `business_type (string) (optional)` | if any |\n| `company_size (string) (optional)` | if any |\n|  |  |\n\n> IMPORTANT: Requires token (in authorization header) that is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Sucess (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_title\\\": \\\"NADRA\\\",\\r\\n        \\\"business_type\\\": \\\"abc\\\",\\r\\n        \\\"company_size\\\": \\\"xyz\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/workspace/create"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 20:01:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "953"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"3b9-dJT77E3m1N0BrDR4t2mlNkc0Eeo\""
										}
									],
									"cookie": [],
									"body": "{\n    \"owned_workspaces\": [\n        {\n            \"ws_kuid\": \"l8dwRZ1OWsJjHFtOtZ7JI5IjCZJzAST6\",\n            \"ws_title\": \"Fusion\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 0\n        },\n        {\n            \"ws_kuid\": \"lrv4KO9kzqRxMrpDv8t7n0bMQZKw3wgo\",\n            \"ws_title\": \"Fusion Inspect\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1\n        },\n        {\n            \"ws_kuid\": \"4oDeXQon9FJhCvswbzh6ZOFS4QlizUxG\",\n            \"ws_title\": \"Fusion Inspect\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1\n        },\n        {\n            \"ws_kuid\": \"3TYWBD1r5myzwKqEtnJLzO120zNnefAO\",\n            \"ws_title\": \"Transroads\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1\n        },\n        {\n            \"ws_kuid\": \"qasJ4UyzsqrvS7Hds49KuT5xIsWK1sGS\",\n            \"ws_title\": \"KMBL\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1\n        },\n        {\n            \"ws_kuid\": \"1Z6Qzyqk8nENPomzKxGW1n84qYLGLxh6\",\n            \"ws_title\": \"NADRA\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1\n        }\n    ],\n    \"shared_workspaces\": [],\n    \"lastVisited_workspace\": {\n        \"ws_kuid\": \"1Z6Qzyqk8nENPomzKxGW1n84qYLGLxh6\",\n        \"ws_type\": \"owned\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\"\n}"
								},
								{
									"name": "Session Expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJINTkxSnVZa0xrdUNFUXBBTDF4dWNpa3hoNm1SOXgxZiIsImlhdCI6MTY2ODc2NjQ2NywiZXhwIjoxNjcxMzU4NDY3fQ.PuqleSVeJ8VTVCS2AL9wqhoZIK73rYCXDoAyvO-SIYk",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_title\\\": \\\"KMBL\\\",\\r\\n        \\\"business_type\\\": \\\"abc\\\",\\r\\n        \\\"company_size\\\": \\\"xyz\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/workspace/create"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 20:00:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Workspace Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"workspace_title\\\": \\\"UBL\\\",\\n  \\\"avatar_url\\\": \\\"avatar url\\\"\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-workspace-details",
								"description": "## Details:\n\n- This API is used to update workspace Title and Avatar\n- Upon http status code 400 Records not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `workspace_title (string) (mandatory)` | `title of the workspace` |\n| `Avatar_url (string) (optional)` | `Avatar url of the workspace` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n  \\\"workspace_title\\\": \\\"KMBL\\\",\\n  \\\"avatar_url\\\": \\\"avatar url\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/update-workspace-details"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sat, 28 Jan 2023 07:41:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "53"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"35-yVXOyNlslvs8NaeF32LOz2AfqjM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"successfully updated\"\n}"
								}
							]
						},
						{
							"name": "Fetch Members",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"memberKuid\", responseData.fetchMemberInfo[0].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-members",
								"description": "## Details:\n\n- This API is used to fetch shared members\n- It will show empty member array if members not found in the workspace/project\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which you are finding members` |\n| `project_kuid (string) (optional)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Workspace (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:50:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1347"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"543-7qbh7PUol/kOvPo998DgFZdHavM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"sheheryar003@gmail.com\",\n            \"memberKuid\": \"93f8baf2fcfb44bdbdd7eca05bacdad3\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"workspace-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Test\",\n            \"email\": \"TEst@gmail.com\",\n            \"memberKuid\": \"a96b6b2d3a2746409591513b99a5e85c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"bradatservice@gmail.com\",\n            \"memberKuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"Apple@367labs.com\",\n            \"memberKuid\": \"9ec98f0e988748fba3798305e609177c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        }\n    ]\n}"
								},
								{
									"name": "Project (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:55:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "318"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"13e-J55BvE0OE2rUHAbRUYts6NSti/Q\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Muhammad Usman\",\n            \"email\": \"usman@gmail.com\",\n            \"memberKuid\": \"8c574227e40d4e32bb586267cb28438c\",\n            \"role\": \"project-admin\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Assignees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"assignee_kuid\", responseData.fetchMemberInfo[0].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/user-workspaces\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/owned/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/shared/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"\\\"\\n  }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-assignees",
								"description": "## Details:\n\n- This API is used tosearch bugs.\n- Upon http status code 403, show a relevant message i.e. user does not have permission to create project in a specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n- NOTE: Make sure, among parameters: search_query, tags, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `title of the project` |\n| `search_query (string) (mandatory)` | `the text to be searched in bugs' title or description   (can be sent empty)` |\n| `tags (array) (mandatory)` | `array of tags ids   (can be sent empty array)` |\n| `assignees (array) (mandatory)` | `array of assignees' ids   (can be sent empty array)` |\n| `status (string) (mandatory)` | `resolution status of the bug i.e to_do, in-progress, done` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Assignees",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"fcvajsafwl4ifqisobn3wnqlciul3dnb\\\",\\n  \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-assignees"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Jan 2023 05:07:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "444"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1bc-82M9QYOoApZ565tdrxqM9VUU4Lw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"fcvajsafwl4ifqisobn3wnqlciul3dnb\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA\",\n    \"Assignees\": [\n        {\n            \"name\": \"Haris Nazir\",\n            \"kuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"avatar\": \"https://avatar.com\",\n            \"groupName\": \"iOS Engineering\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Workspace Title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n    \\\"title\\\": \\\"ubl\\\"\\n }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-workspace-title",
								"description": "## Details:\n\n- This API is used to update the workspace title.\n- Upon http status code 400, show a relevant message i.e. Records not Found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is updating workspace Title` |\n| `title (string) (mandatory)` | `title of the workspace` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "List User Privileges By Workspace",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"ws_role_kuid\", responseData.PriviligedInvitationRoles[0].kuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n     \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\"\\n         }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/get-user-role-workspace",
								"description": "## Details:\n\n- This API is used to get access roles for invitee in workspace\n- workspace Owner have full access to invite someone and workspace admin can only invite as a workspace-admin and member\n- It will show empty member array if members not found in the workspace\n- Upon http status code 400, show a relevant message i.e. something went wrong.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which you are Inviting member` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n     \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\"\\n         }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/get-user-role-workspace"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Feb 2023 12:01:55 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "153"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"99-i3Lr5QGY4PpRyeCTBE1kKlL/D0s\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"PriviligedInvitationRoles\": [\n        {\n            \"Role\": \"Workspace Admin\",\n            \"kuid\": \"a3423182e793e47769c97c\"\n        },\n        {\n            \"Role\": \"Member\",\n            \"kuid\": \"a34f182e793e47769c97c\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Workspace Member Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"member_kuid\\\": \\\"{{memberKuid}}\\\",\\n    \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n        \\\"access_role_kuid\\\": \\\"a34f182e793e47769c97c\\\"\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-workspace-member-role",
								"description": "## Details:\n\n- This API is used to update the Membership Access.\n- Upon http status code 400, show a relevant message i.e. Records not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the user is loggedIn` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `member_kuid (string) (mandatory)` | `Kuid of the memnber` |\n| `scope (sting) (mandatory)` | `scope of the member` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Workspace Invite",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"email\\\": \\\"sshahroz.ahmadd@gmail.com\\\",\\n      \\\"role_kuid\\\": \\\"{{ws_role_kuid}}\\\"\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/workspace-invite",
								"description": "## Details:\n\n- This API is used to invite user in a workspace\n- Sign In is mandatory before this API\n- A User can only invite to someone if A Current user is workspace's Owner or Current user role is shared workspace-admin\n- upone http status code (200). A link will send to invitee on the given email\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_kuid` `(string) (mandatory)` | `kuid of the workspace in which you want to invite` |\n| `email (string) (mandatory)` | email of the Invitee |\n| `role_kuid (string) (mandatory)` | `kuid of Access Role` |\n\n> IMPORTANT: This API requires token in Authorization header. Token is received in client-handshake API.\n\nRequest HeadersAuthorization"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"azhar@gmail.com\\\",\\n      \\\"role_kuid\\\": \\\"a34f182e793e47769c97c\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/workspace-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:12:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"6e-oRwFqXYbhOKPujuwcWTHhm29Ghc\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Success\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Successfully invited\",\n        \"description\": \"Successfully invited\"\n    }\n}"
								},
								{
									"name": "already member",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\n      \\\"role_kuid\\\": \\\"a34f182e793e47769c97c\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/workspace-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:26:59 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "45"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2d-imb+2+R+H0xXpWAoHMrGsSzzhlQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": \"Already a member.\"\n}"
								}
							]
						},
						{
							"name": "Upload Workspace Avatar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "workspaceAvatar",
											"type": "file",
											"src": "/Users/home/Downloads/DP.jpeg"
										},
										{
											"key": "payload",
											"value": "{\"workspace_kuid\": \"{{ownworkspace_kuid}}\"}",
											"type": "text"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{base_url_appli_web}}/user/upload-workspace-avatar",
								"description": "## Details:\n\n- This API is used to update workspace Avatar\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Delete Workspace",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\"\\n  }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-workspace",
								"description": "## Details:\n\n- This API is used to delete the workspace\n- Upon http status code 400, show a relevant message i.e. workspace not founde.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						}
					]
				},
				{
					"name": "Project",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create Project",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"project_kuid\", responseData.kuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_title\\\": \\\"Just for testing1\\\",\\r\\n        \\\"app_id_identifier\\\": \\\"com.o3Interfaces.HostFIApp\\\",\\r\\n        \\\"platformType\\\": \\\"ios\\\",\\r\\n        \\\"environment\\\": \\\"sandbox\\\"\\r\\n    }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/workspace/project/create",
								"description": "## Details:\n\n- This API is used to create a project in a workspace owned by logged in user.\n- Upon http status code 403, show a relevant message i.e. user does not have permission to create project in a specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_title (string) (mandatory)` | `title of the project` |\n| `app_id_identifier (string) (optional)` | `app package id of the project being created` |\n| `platformType (string) (string) (mandatory)` | `enum => android/ios/web/tickets` |\n| `environment (string) (optional)` | `enum => sandbox/staging/production` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJKeWtwblltalMwRGNsSFhEbnNoZkI4WFlhbUMyUThZNSIsImlhdCI6MTY2OTEwMzAyMywiZXhwIjoxNjcxNjk1MDIzfQ.EK5av5xPKoWUrZlD4G1qlhTi-Ldxstx7s6V9tri7buk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"1Z6Qzyqk8nENPomzKxGW1n84qYLGLxh6\\\",\\r\\n        \\\"project_title\\\": \\\"UBL Omni Digital Account\\\",\\r\\n        \\\"app_id_identifier\\\": \\\"abc\\\",\\r\\n        \\\"platformType\\\": \\\"web\\\",\\r\\n        \\\"environment\\\": \\\"sandbox\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/workspace/project/create"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 22 Nov 2022 08:00:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "159"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"9f-5SQi1XbwZA9MWjPk3HWw5PR4CfM\""
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"p_title\": \"UBL Omni Digital Account\",\n        \"p_kuid\": \"Ksdn1EbKzwhP6mnlukbtWkUYNSYuCAhq\",\n        \"p_platformType\": \"web\",\n        \"p_appIdIdentifier\": \"abc\",\n        \"p_environment\": \"sandbox\"\n    }\n]"
								}
							]
						},
						{
							"name": "Projects Listing (For Owned Workspace)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"        console.log(\"Calling Sign-in API\");\r",
											"        const email = pm.collectionVariables.get(\"email\");\r",
											"        const password = pm.collectionVariables.get(\"password\")\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': `${pm.collectionVariables.get(\"clientHandshakeToken\") }`},\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"email\\\": \\\"${email}\\\",\\r\\n        \\\"password\\\": \\\"${password}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    console.log(\"Collection Variable is_listWorkspaces_called is set to 1\");\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"}\r",
											"\r",
											"// if(pm.response.to.have.status(200)) {\r",
											"//     const responseData = pm.response.json()\r",
											"//         pm.expect(responseData.workspace_projects[0].p_kuid).to.exist;\r",
											"//     pm.collectionVariables.set(\"project_kuid\", responseData.workspace_projects[0].p_kuid);\r",
											"// }\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    if (responseData.workspace_projects && responseData.workspace_projects.length > 0) {\r",
											"        // Check if the property exists in the first element of the array\r",
											"        if (responseData.workspace_projects[0].p_kuid) {\r",
											"            pm.collectionVariables.set(\"project_kuid\", responseData.workspace_projects[0].p_kuid);\r",
											"        } else {\r",
											"            console.log(\"The property 'p_kuid' does not exist in the first element of 'workspace_projects' array.\");\r",
											"        }\r",
											"    } else {\r",
											"        console.log(\"The 'workspace_projects' array is either empty or does not exist.\");\r",
											"    }\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/workspace/owned/project-list",
								"description": "## Details:\n\n- This API fetches user owned workspace projects' list.\n- If received empty array, it means user doesn't have any projects in the specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace whose projects are being listed. (kuid is received in user-workspaces API's response)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"qasJ4UyzsqrvS7Hds49KuT5xIsWK1sGS\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/workspace/owned/project-list"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sat, 19 Nov 2022 17:33:59 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "227"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"e3-aaTbICCpFQB1lSngfVq3FfHh7D8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_projects\": [],\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s\"\n}"
								},
								{
									"name": "Session expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"qasJ4UyzsqrvS7Hds49KuT5xIsWK1sGS\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/workspace/owned/project-list"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 20:02:08 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Project Detail View",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/summary"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/summary"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Feb 2023 12:20:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "323"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"143-qNnCkyt2IsdfBI2cmKn+hhXh+Ac\""
										}
									],
									"cookie": [],
									"body": "{\n    \"bug_stat\": {\n        \"todo\": 88,\n        \"in_progress\": 5,\n        \"done\": 3,\n        \"count\": 96\n    },\n    \"crash_stat\": {\n        \"todo\": 88,\n        \"in_progress\": 5,\n        \"done\": 3,\n        \"count\": 96\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiI0S0NnenNxOUJlcmZFa08wVmlBazBoTHlYWEt2cjBuMiIsImlhdCI6MTY3NTkyMTc4MywiZXhwIjoxNjc4NTEzNzgzfQ.oSJupE8meTd_h-CfrWTt5ne5n7yemW-8nPzAI_roCBo\"\n}"
								}
							]
						},
						{
							"name": "Project Dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/dashboard"
							},
							"response": [
								{
									"name": "Project Dashboard",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/dashboard"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sat, 18 Mar 2023 08:51:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "368"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"170-EPMSwhLJIZqALrrI7rdbeJhkqf0\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"bugsCount\": {\n        \"bugs\": 0\n    },\n    \"crashesCount\": {\n        \"crash\": 0\n    },\n    \"avgRating\": {\n        \"avgRating\": null\n    },\n    \"activeReleases\": {\n        \"activeReleases\": 0\n    },\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Muhammad ALI\",\n            \"email\": \"xipixew453@etondy.com\",\n            \"memberKuid\": \"WPl43IRYVEVCpLZ5sqOZ1i5Sy0yF30Wo\",\n            \"role\": \"Project Admin\",\n            \"roleKuid\": \"a79a42037578bb3a\",\n            \"createdOn\": \"2023-03-16T13:19:42.000Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Project Dashboard Graph",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n      }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/dashboard"
							},
							"response": []
						},
						{
							"name": "Fetch Project Members",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"memberKuid\", responseData.fetchMemberInfo[1].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-members",
								"description": "## Details:\n\n- This API is used to fetch shared members\n- It will show empty member array if members not found in the workspace/project\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which you are finding members` |\n| `project_kuid (string) (optional)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Workspace (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:50:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1347"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"543-7qbh7PUol/kOvPo998DgFZdHavM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"sheheryar003@gmail.com\",\n            \"memberKuid\": \"93f8baf2fcfb44bdbdd7eca05bacdad3\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"workspace-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Test\",\n            \"email\": \"TEst@gmail.com\",\n            \"memberKuid\": \"a96b6b2d3a2746409591513b99a5e85c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"bradatservice@gmail.com\",\n            \"memberKuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"Apple@367labs.com\",\n            \"memberKuid\": \"9ec98f0e988748fba3798305e609177c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        }\n    ]\n}"
								},
								{
									"name": "Project (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:55:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "318"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"13e-J55BvE0OE2rUHAbRUYts6NSti/Q\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Muhammad Usman\",\n            \"email\": \"usman@gmail.com\",\n            \"memberKuid\": \"8c574227e40d4e32bb586267cb28438c\",\n            \"role\": \"project-admin\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Project Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n   \\\"title\\\": \\\"KMBL\\\",\\n     \\\"avatar\\\": \\\"url\\\"\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-project-details",
								"description": "## Details:\n\n- This API is used to update the project title and avatar.\n- Upon http status code 400, show a relevant message i.e. Records not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is updating project` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `title (string) (mandatory)` | `title of the project` |\n| `avatar (sting) (optional)` | `avatar url of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "User Role By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"previliged_kuid\", responseData.PriviligedInvitationRoles[0].kuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n     \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n    \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n     }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/get-user-role-project",
								"description": "## Details:\n\n- This API is used to get access roles for invitee in project\n- project Owner have full access to invite someone and project admin can only invite as a project-admin and member\n- It will show empty member array if members not found in the workspace and project\n- Upon http status code 400, show a relevant message i.e. something went wrong.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which you are Inviting member` |\n| `project_kuid (string) (mandatory)` | `project kuid in which you are Inviting member` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "User Role By Project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n     \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n    \\\"project_kuid\\\": \\\"FiQLpTaC9VWNwaXAesqw6wcg6JzyK7Dx\\\"\\n     }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/get-user-role-project"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 06:27:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "144"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"90-F/rdSGN88n+dc97vlDp7unpqhro\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"PriviligedInvitationRoles\": [\n        {\n            \"Role\": \"Project Admin\",\n            \"kuid\": \"a79a42037578bb3a\"\n        },\n        {\n            \"Role\": \"Member\",\n            \"kuid\": \"a20b0fabc39bed7c0fa9\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Project Invite",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"email\\\": \\\"sheikxamna@gmail.com\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n    \\\"role_kuid\\\": \\\"{{pr_role_kuid}}\\\"\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/project-invite",
								"description": "## Details:\n\n- This API is used to invite user in a Project\n- Sign In is mandatory before this API\n- A User can only invite to someone if A current user is workspace Owner or current user role is shared workspace-admin or shared project-admin\n- upone http status code (200). A link will send to invitee on the given email\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_kuid` `(string) (mandatory)` | `kuid of the workspace in which you want to invite` |\n| `email (string) (mandatory)` | email of the Invitee |\n| `project_kuid(string) (mandatory)` | `kuid of the project in which you want to invite` |\n| `role_kuid (string) (mandatory)` | `kuid of Access Role` |\n\n> IMPORTANT: This API requires token in Authorization header. Token is received in client-handshake API.\n\nRequest HeadersAuthorization\n\nEndFragment"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"azhar@gmail.com\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n    \\\"role_kuid\\\": \\\"a20b0fabc39bed7c0fa9\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/project-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:11:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"6e-oRwFqXYbhOKPujuwcWTHhm29Ghc\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Success\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Successfully invited\",\n        \"description\": \"Successfully invited\"\n    }\n}"
								},
								{
									"name": "Already Member",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n    \\\"role_kuid\\\": \\\"a20b0fabc39bed7c0fa9\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/project-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:23:46 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "97"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"61-WG5jK0RoW+yJdfevV7t1kh7wRA4\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Already a member\",\n        \"description\": \"Already a member\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Project Member Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"member_kuid\\\": \\\"{{assignee_kuid}}\\\",\\n    \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n    \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n      \\\"access_role_kuid\\\": \\\"{{previliged_kuid}}\\\"\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-project-member-role",
								"description": "## Details:\n\n- This API is used to update the Membership Access.\n- Upon http status code 400, show a relevant message i.e. Records not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the user is loggedIn` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `member_kuid (string) (mandatory)` | `Kuid of the memnber` |\n| `scope (sting) (mandatory)` | `scope of the member` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Upload Project Avatar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "projectAvatar",
											"type": "file",
											"src": "/Users/home/Downloads/DP.jpeg"
										},
										{
											"key": "payload",
											"value": "{\"workspace_kuid\": \"{{ownworkspace_kuid}}\", \"project_kuid\": \"{{project_kuid}}\"}",
											"type": "text"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{base_url_appli_web}}/user/upload-project-avatar",
								"description": "## Details:\n\n- This API is used to update project avatar\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						}
					]
				},
				{
					"name": "InviteMember",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "list workspaces",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    console.log(\"Collection Variable is_listWorkspaces_called is set to 1\");\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"}\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"ownworkspace_kuid\", responseData.owned_workspaces[0].ws_kuid);\r",
											"}\r",
											"\r",
											"// if(pm.response.to.have.status(200)) {\r",
											"//     const responseData = pm.response.json()\r",
											"//     pm.collectionVariables.set(\"sharedworkspace_kuid\", responseData.shared_workspaces[0].ws_kuid);\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"url": "{{base_url_appli_web}}/user-workspaces",
								"description": "## Details:\n\n- Doesn't require request body.\n- Shall be called right after user successfully logs into the mobile/web app.\n- This API fetches user workspaces (if any).\n- If received empty array, then show a \"create workspace\" button on the front-end.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n    \n\n> IMPORTANT: Requires token (in Authorization header) received in the response on sign-in API or Email OTP verification API"
							},
							"response": [
								{
									"name": "Session Expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJINTkxSnVZa0xrdUNFUXBBTDF4dWNpa3hoNm1SOXgxZiIsImlhdCI6MTY2ODc2NjQ2NywiZXhwIjoxNjcxMzU4NDY3fQ.PuqleSVeJ8VTVCS2AL9wqhoZIK73rYCXDoAyvO-SIYk",
												"type": "text"
											}
										],
										"url": "http://application-webservices.transroadservices.com/api/v1/user-workspaces"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:39 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"url": "http://application-webservices.transroadservices.com/api/v1/user-workspaces"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Feb 2023 06:00:13 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "10485"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"28f5-dIzsw7iKi3mp00V4XvcShw9kYSA\""
										}
									],
									"cookie": [],
									"body": "{\n    \"owned_workspaces\": [\n        {\n            \"ws_kuid\": \"9eEUCrD6MyVw40NAUt0Er8bsj7PQxOFf\",\n            \"ws_title\": \"Workspace 5 new \",\n            \"ws_avatar\": \"temp Url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 2\n        },\n        {\n            \"ws_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n            \"ws_title\": \"KMBL\",\n            \"ws_avatar\": \"avatar url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 4\n        },\n        {\n            \"ws_kuid\": \"FHrXPPNdYz1eG4i3jHuzHKDoePzfwBcp\",\n            \"ws_title\": \"Haris Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ilqdsRsX3t1boJhbOAb2w1vyeFzuLxPM\",\n            \"ws_title\": \"Haris Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"WDy7SyRBgtkSzV88U30PBbHC5hOnsB1P\",\n            \"ws_title\": \"Haris\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"exs5TpEcvkF8OlkFbrMRETVHvFlcopgE\",\n            \"ws_title\": \"Haris\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"EQpvfeh6E6A6WOITzi0ZAYMdW6ZDSpIT\",\n            \"ws_title\": \"Haris\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"WUKRwlSSnlWL3ad9MZQkysLXMeHeBeMw\",\n            \"ws_title\": \"Haris New Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ER5OzK41i3qZRMr5WAenlaN8BWnqRg5X\",\n            \"ws_title\": \"Haris New Workspace 1\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"r8KCXQLqHLL1OjUEi44agABIlNJua9Qx\",\n            \"ws_title\": \"New o3 workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"fXfiIUOgC1AYYhGYPSITCEP8UJlfXhJV\",\n            \"ws_title\": \"New Project\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"7vD7I9JcQINoMH8qt6cKwvhl7tDyG4Ms\",\n            \"ws_title\": \"       \",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"H8exUayWko6ygkLmaeYn6f4ECkWtvcYj\",\n            \"ws_title\": \"UBL QATAR\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ud5W6DZqGPtqRPqUtGuxUDOXxFIveCoc\",\n            \"ws_title\": \"Qatar 2\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"uCQfoIGjk0X9KTGjsOLt20PnYEZDBMcb\",\n            \"ws_title\": \"Qatar 3\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"TUiLltkGKyiLn7scxiJC1oWKOmbAvzWT\",\n            \"ws_title\": \"Qatar 4\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"klREfqV93SquRKlm0m9B2IQSs3CC7ALO\",\n            \"ws_title\": \"Qatar 5\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"TnPxlO19C5KYozcxAkdNl2S6wJoVbAnM\",\n            \"ws_title\": \"Qatar 6\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"W26NB54E3ShKVVJ9sfGkYYNki5a4IpDY\",\n            \"ws_title\": \"te123\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"pcQv6d18SbIUTovrUsSwpMrCJGYprBua\",\n            \"ws_title\": \"test\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"lJbtW2BypT37Zy5Fu2ygPDLPlDKJeFx3\",\n            \"ws_title\": \"Zeesha\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"MfK3HmGZgbOdPn1qGNsnjMfRKPMNQRel\",\n            \"ws_title\": \"Zeesha\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"8EXPxL1PQ8h8MeO3Jfbowha5oz6kIfNx\",\n            \"ws_title\": \"Zeesnhh\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"bUGxzjGuv7mUuTHLnbbY1SeOGZtFFGEk\",\n            \"ws_title\": \"Hello\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"waJu4GHdGfz0aQzHJXM8naVXrQgpflcc\",\n            \"ws_title\": \"Zeeshan Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"3D4GEFUFmw7RpCjgjmulpZvyJakkgtfz\",\n            \"ws_title\": \"Ggccccccc\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"As0YEk5X85047XoQPvo3wrCTo3XCqEfh\",\n            \"ws_title\": \"Fggffg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"l8pMPYVCFVg82VViAYsGCm8MN9DTDxZL\",\n            \"ws_title\": \"Cgggygg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"4EsiRD80xOWfeBeykJ4I5EPypmmpEC8l\",\n            \"ws_title\": \"Hgggggg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"wTCV45peCcl5DTTTIeU1QJB71pdBtrCD\",\n            \"ws_title\": \"Zeeshan Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"YcB865q6Id7kJ9sWYWEHgz7e7VmbAdTD\",\n            \"ws_title\": \"Shani\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"3TcQ90TUGEepselmOS5t9kZlCyEG4FJT\",\n            \"ws_title\": \"Bbhhhgvvc\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"FbP93rykwwoHRimSOHkvhBs0vkHBS1Qz\",\n            \"ws_title\": \"Zeeshan\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"h1q07bs3kSI0XojFbDdBRBbL2UG9fBaW\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"Wp2X0jpevnbcbQzQROCadE3qsEC2GLK2\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"8P2aln9TJBPyab46QhumZ0IwPO1FwNBv\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"HvmgwIvSLGdktcWRRCteiC4JQyHM1R9r\",\n            \"ws_title\": \"Sheheryar Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"uLiBNo65jOkhZ8TBecmuPEMCpnxCfVyK\",\n            \"ws_title\": \"Trffff\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"OkbqUC28uWXuwN0lDqEjRM5M6RQmbrm0\",\n            \"ws_title\": \"Bhggg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"zpXZhPKLsNvSaSqEeGjU2Qc3BUJO8EEO\",\n            \"ws_title\": \"Qwerty\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ElRrTmAoEwdDz4S0mWFIayDMxALUMIDL\",\n            \"ws_title\": \"Asdfg\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"VkYlMY4zo0Rj4psnJKxBasjWORKmIB52\",\n            \"ws_title\": \"Zxcvb\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"9oWeaLeJlEaOhw87a2H0lO9cKd1iM8gv\",\n            \"ws_title\": \"Zaqwe\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"lmvJpjwvEZDOD0O5LMosDxuIxXlEhNx2\",\n            \"ws_title\": \"Backend testing\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"DLkVXC5AbFuboBY5CzxSnviGZ55w9OWm\",\n            \"ws_title\": \"Backend Testing\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"33bzFpZcbgekJWywzmdAOvYD0SugOzEn\",\n            \"ws_title\": \"New workspace crash\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"yiAbsJAVDPKGNWU7syRhWUVD7SaF1nke\",\n            \"ws_title\": \"Crash new\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"nqZ3hAaZwYKWCsesaBuNoXRpjooYCLv6\",\n            \"ws_title\": \"Donâ\\u0080\\u0099t Delete WorkSpace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"WycBR3pHKJMfihlTzLnVoAtCHOl7zjJd\",\n            \"ws_title\": \"KMBL\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"PQNLlfHT3mBhkp4gCu8d4aWNV1j0XoBv\",\n            \"ws_title\": \"Donot Delete This Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"29a6bef5b32c4298b92072f95d07ab8b\",\n            \"ws_title\": \"Test workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"fbf352148dd44f229f97c022d415c735\",\n            \"ws_title\": \"Test workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"5fd124c53050437693057c619cf33888\",\n            \"ws_title\": \"Test workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"4bd132c3b47c4df490b392b7a6feb9b7\",\n            \"ws_title\": \"Workspace\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"111fbc50e91242a7a7267ae932f7ca08\",\n            \"ws_title\": \"Abcdf\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"b5bb18f1c5384eeea6fcd27c4363d43d\",\n            \"ws_title\": \"Abcdsa\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"ef291905c26e4f609567716c425d3486\",\n            \"ws_title\": \"123456\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"9263365e30fd412cba1f981c947598c9\",\n            \"ws_title\": \"123466\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        },\n        {\n            \"ws_kuid\": \"9de1e57f702a49c497e8ef5592ae8ced\",\n            \"ws_title\": \"KMBL121\",\n            \"ws_avatar\": null,\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"owner\",\n            \"member_role_kuid\": \"\",\n            \"ws_members\": 1\n        }\n    ],\n    \"shared_workspaces\": [\n        {\n            \"ws_kuid\": \"9eEUCrD6MyVw40NAUt0Er8bsj7PQxOFf\",\n            \"ws_title\": \"Workspace 5 new \",\n            \"ws_avatar\": \"temp Url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"workspace-member\",\n            \"member_role_kuid\": \"a34f182e793e47769c97c\",\n            \"ws_members\": 2\n        },\n        {\n            \"ws_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n            \"ws_title\": \"KMBL\",\n            \"ws_avatar\": \"avatar url\",\n            \"ws_isActive\": 1,\n            \"member_role_type\": \"project-member\",\n            \"member_role_kuid\": \"a20b0fabc39bed7c0fa9\",\n            \"ws_members\": 4\n        }\n    ],\n    \"lastVisited_workspace\": {\n        \"ws_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n        \"ws_type\": \"owned\"\n    }\n}"
								}
							]
						},
						{
							"name": "List User Privileges By Workspace",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"ws_role_kuid\", responseData.PriviligedInvitationRoles[0].kuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n     \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\"\\n         }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/get-user-role-workspace",
								"description": "## Details:\n\n- This API is used to get access roles for invitee in workspace\n- workspace Owner have full access to invite someone and workspace admin can only invite as a workspace-admin and member\n- It will show empty member array if members not found in the workspace\n- Upon http status code 400, show a relevant message i.e. something went wrong.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which you are Inviting member` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n     \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\"\\n         }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/get-user-role-workspace"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Feb 2023 12:01:55 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "153"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"99-i3Lr5QGY4PpRyeCTBE1kKlL/D0s\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"PriviligedInvitationRoles\": [\n        {\n            \"Role\": \"Workspace Admin\",\n            \"kuid\": \"a3423182e793e47769c97c\"\n        },\n        {\n            \"Role\": \"Member\",\n            \"kuid\": \"a34f182e793e47769c97c\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Members",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"memberKuid\", responseData.fetchMemberInfo[0].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-members",
								"description": "## Details:\n\n- This API is used to fetch shared members\n- It will show empty member array if members not found in the workspace/project\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which you are finding members` |\n| `project_kuid (string) (optional)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Workspace (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:50:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1347"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"543-7qbh7PUol/kOvPo998DgFZdHavM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"sheheryar003@gmail.com\",\n            \"memberKuid\": \"93f8baf2fcfb44bdbdd7eca05bacdad3\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"workspace-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Test\",\n            \"email\": \"TEst@gmail.com\",\n            \"memberKuid\": \"a96b6b2d3a2746409591513b99a5e85c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"bradatservice@gmail.com\",\n            \"memberKuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"Apple@367labs.com\",\n            \"memberKuid\": \"9ec98f0e988748fba3798305e609177c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        }\n    ]\n}"
								},
								{
									"name": "Project (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:55:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "318"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"13e-J55BvE0OE2rUHAbRUYts6NSti/Q\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Muhammad Usman\",\n            \"email\": \"usman@gmail.com\",\n            \"memberKuid\": \"8c574227e40d4e32bb586267cb28438c\",\n            \"role\": \"project-admin\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Projects Listing (For Owned Workspace) Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"        console.log(\"Calling Sign-in API\");\r",
											"        const email = pm.collectionVariables.get(\"email\");\r",
											"        const password = pm.collectionVariables.get(\"password\")\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': `${pm.collectionVariables.get(\"clientHandshakeToken\") }`},\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"email\\\": \\\"${email}\\\",\\r\\n        \\\"password\\\": \\\"${password}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    console.log(\"Collection Variable is_listWorkspaces_called is set to 1\");\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"}\r",
											"\r",
											"// if(pm.response.to.have.status(200)) {\r",
											"//     const responseData = pm.response.json()\r",
											"//         pm.expect(responseData.workspace_projects[0].p_kuid).to.exist;\r",
											"//     pm.collectionVariables.set(\"project_kuid\", responseData.workspace_projects[0].p_kuid);\r",
											"// }\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    if (responseData.workspace_projects && responseData.workspace_projects.length > 0) {\r",
											"        // Check if the property exists in the first element of the array\r",
											"        if (responseData.workspace_projects[0].p_kuid) {\r",
											"            pm.collectionVariables.set(\"project_kuid\", responseData.workspace_projects[0].p_kuid);\r",
											"        } else {\r",
											"            console.log(\"The property 'p_kuid' does not exist in the first element of 'workspace_projects' array.\");\r",
											"        }\r",
											"    } else {\r",
											"        console.log(\"The 'workspace_projects' array is either empty or does not exist.\");\r",
											"    }\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/workspace/owned/project-list",
								"description": "## Details:\n\n- This API fetches user owned workspace projects' list.\n- If received empty array, it means user doesn't have any projects in the specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace whose projects are being listed. (kuid is received in user-workspaces API's response)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"qasJ4UyzsqrvS7Hds49KuT5xIsWK1sGS\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/workspace/owned/project-list"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sat, 19 Nov 2022 17:33:59 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "227"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"e3-aaTbICCpFQB1lSngfVq3FfHh7D8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_projects\": [],\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s\"\n}"
								},
								{
									"name": "Session expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"qasJ4UyzsqrvS7Hds49KuT5xIsWK1sGS\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/workspace/owned/project-list"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 20:02:08 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Pending Invite",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"invitee\", responseData.PendingMember[0].invitee);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n  }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/pending-member",
								"description": "## Details:\n\n- This API is used to show peonding Members.\n- If received an empty array, means user doesn't have any pending members.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the the user is logged` |\n| `project_kuid (string) (optional)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n      \\\"project_kuid\\\": \\\"\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/pending-member"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 07 Feb 2023 07:00:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"5d-TGPvlg/O5u1DZKcHv1yNCQsgJ8I\""
										}
									],
									"cookie": [],
									"body": "{\n    \"PendingMember\": [\n        {\n            \"invitee\": \"azhakjrjdh@gmail.com\",\n            \"invitedOn\": \"2023-02-07T07:00:25.000Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Pending Invite",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n      \\\"project_kuid\\\": \\\"\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/pending-member"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 07 Feb 2023 07:37:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"150-/Vtz4U4b4mnidXWCK1yZLWjUWSY\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"pendingMembers\": [\n        {\n            \"invitee\": \"azhakjrjdh@gmail.com\",\n            \"invitedOn\": \"2023-02-07T07:00:25.000Z\"\n        },\n        {\n            \"invitee\": \"sheikxamna123@gmail.com\",\n            \"invitedOn\": \"2023-02-07T07:29:54.000Z\"\n        },\n        {\n            \"invitee\": \"sheikxamna123@gmail.com\",\n            \"invitedOn\": \"2023-02-07T07:30:02.000Z\"\n        },\n        {\n            \"invitee\": \"azhakjrjdh@gmail.com\",\n            \"invitedOn\": \"2023-02-07T07:36:54.000Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Workspace Invite",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"email\\\": \\\"{{invitedEmail}}\\\",\\n      \\\"role_kuid\\\": \\\"{{ws_role_kuid}}\\\"\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/workspace-invite",
								"description": "## Details:\n\n- This API is used to invite user in a workspace\n- Sign In is mandatory before this API\n- A User can only invite to someone if A Current user is workspace's Owner or Current user role is shared workspace-admin\n- upone http status code (200). A link will send to invitee on the given email\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_kuid` `(string) (mandatory)` | `kuid of the workspace in which you want to invite` |\n| `email (string) (mandatory)` | email of the Invitee |\n| `role_kuid (string) (mandatory)` | `kuid of Access Role` |\n\n> IMPORTANT: This API requires token in Authorization header. Token is received in client-handshake API.\n\nRequest HeadersAuthorization"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"azhar@gmail.com\\\",\\n      \\\"role_kuid\\\": \\\"a34f182e793e47769c97c\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/workspace-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:12:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"6e-oRwFqXYbhOKPujuwcWTHhm29Ghc\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Success\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Successfully invited\",\n        \"description\": \"Successfully invited\"\n    }\n}"
								},
								{
									"name": "already member",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\n      \\\"role_kuid\\\": \\\"a34f182e793e47769c97c\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/workspace-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:26:59 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "45"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2d-imb+2+R+H0xXpWAoHMrGsSzzhlQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": \"Already a member.\"\n}"
								}
							]
						},
						{
							"name": "Project Invite",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"email\\\": \\\"{{invitedEmail}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n    \\\"role_kuid\\\": \\\"{{pr_role_kuid}}\\\"\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/project-invite",
								"description": "## Details:\n\n- This API is used to invite user in a Project\n- Sign In is mandatory before this API\n- A User can only invite to someone if A current user is workspace Owner or current user role is shared workspace-admin or shared project-admin\n- upone http status code (200). A link will send to invitee on the given email\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_kuid` `(string) (mandatory)` | `kuid of the workspace in which you want to invite` |\n| `email (string) (mandatory)` | email of the Invitee |\n| `project_kuid(string) (mandatory)` | `kuid of the project in which you want to invite` |\n| `role_kuid (string) (mandatory)` | `kuid of Access Role` |\n\n> IMPORTANT: This API requires token in Authorization header. Token is received in client-handshake API.\n\nRequest HeadersAuthorization\n\nEndFragment"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"azhar@gmail.com\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n    \\\"role_kuid\\\": \\\"a20b0fabc39bed7c0fa9\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/project-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:11:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"6e-oRwFqXYbhOKPujuwcWTHhm29Ghc\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Success\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Successfully invited\",\n        \"description\": \"Successfully invited\"\n    }\n}"
								},
								{
									"name": "Already Member",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n    \\\"role_kuid\\\": \\\"a20b0fabc39bed7c0fa9\\\"\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/project-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 01 Feb 2023 09:23:46 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "97"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"61-WG5jK0RoW+yJdfevV7t1kh7wRA4\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Already a member\",\n        \"description\": \"Already a member\"\n    }\n}"
								}
							]
						},
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign up User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n    \\\"name\\\": \\\"Automation\\\",\\r\\n    \\\"email\\\": \\\"xarola6986@rc3s.com\\\",\\r\\n    \\\"password\\\": \\\"123456789\\\",\\r\\n    \\\"companyName\\\": \\\"O3 interfaces\\\",\\r\\n    \\\"companySize\\\": \\\"100\\\",\\r\\n    \\\"companyDomain\\\": \\\"o3interfaces.com\\\"\\r\\n}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-up",
								"description": "## Details:\n\n- Shall be called within 5 minutes after client-handshake API call.\n- Upon http status code 503, call client-handshake API again and use the token (received in response of client-handshake) in this API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `name (string) (mandatory)` | Full name of the User |\n| `email (string) (mandatory)` | email of the user |\n| `password (string) (mandatory)` | password of the user |\n| `companyName (string) (optional)` | company name (if any) |\n| `companyDomain (string) (optional)` | company domain (if any) |\n| `companySize (INT) (optional)` | company size (if any) |\n\n> IMPORTANT: This API requires token in Authorization header. Token is received in client-handshake API."
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n    \\\"name\\\": \\\"Sheheryar Afzal\\\",\\r\\n    \\\"email\\\": \\\"sheheryar003@gmail.com\\\",\\r\\n    \\\"password\\\": \\\"123456789\\\",\\r\\n    \\\"companyName\\\": \\\"O3 interfaces\\\",\\r\\n    \\\"companySize\\\": \\\"100\\\",\\r\\n    \\\"companyDomain\\\": \\\"o3interfaces.com\\\"\\r\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/fiv2/sign-up"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 10 Nov 2022 13:16:31 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "15"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"f-NQVRlQfKHCoInEbhALgECMonhCE\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJtdDJLWWNZSXlIcDgzS2Q3S1ZZdkxkTUNxSVpycHkweiIsImlhdCI6MTY2ODc1NDI3OCwiZXhwIjoxNjcxMzQ2Mjc4fQ.Q2LqWnERmkPecEE9Xy9vl3NwxQUrxCUmnUgxirU2tYs",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n    \\\"name\\\": \\\"Sheheryar Afzal\\\",\\r\\n    \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n    \\\"password\\\": \\\"123456789\\\",\\r\\n    \\\"companyName\\\": \\\"O3 interfaces\\\",\\r\\n    \\\"companySize\\\": \\\"100\\\",\\r\\n    \\\"companyDomain\\\": \\\"o3interfaces.com\\\"\\r\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-up"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:57:17 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Email Otp Verification",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"xarola6986@rc3s.com\\\",\\r\\n        \\\"otp\\\": \\\"936352\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/email-otp-verification",
								"description": "## Details:\n\n- This API is used to verify the email (entered in signup API) with a 6 digit OTP\n- After verifying the OTP, the user is signed in, hence you will call the list workspaces API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `email of the user that was entered in sign up API` |\n| `otp (string) (mandatory)` | OTP code that is received in the mail. |\n\n> IMPORTANT: This API does not require any token. But on a successful OTP verification, it issues a token which is used in further APIs (i.e. APIs called after sign in)"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"fewad83170@teknowa.com\\\",\\r\\n        \\\"otp\\\": \\\"907281\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/email-otp-verification"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 22 Nov 2022 13:21:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "360"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"168-y6Mvq+ZkoM2u2Y3qNe1YN9Ua3AY\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"cta_label\": \"\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ0QVI0amNKWDdmNUJLRjAxQjNXNGFHMENwQTRRVERXeCIsImlhdCI6MTY2OTEyMzI3MiwiZXhwIjoxNjcxNzE1MjcyfQ.aYPKf45OnkB0D64SnXcMjuA8ACUCF7ZOmppf0EGq4mA\",\n    \"user\": {\n        \"full name\": \"Fawad Nazir\",\n        \"email\": \"fewad83170@teknowa.com\",\n        \"kuid\": \"iljcryvjd4JnQYmgVdB0lcpLngno0PMF\"\n    }\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{invitedEmail}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Revoke Invitation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n      \\\"email\\\": \\\"{{invitedEmail}}\\\",\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n  }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/remove-invitee",
								"description": "## Details:\n\n- This API is used to Revoke Invitee.\n- Upon http status code 400, show a relevant message i.e. Records not foun.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the user is logged in` |\n| `project_kuid (string) (optional)` | `kuid of the project` |\n| `email (string) (mandatory)` | `email of the invitee` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n      \\\"email\\\": \\\"sheikxamna@gmail.com\\\",\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/remove-invitee"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 07 Feb 2023 07:26:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"5d-VhioH282Lbq+FVTdWwlY3iEQKmE\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"success\",\n        \"title\": \"successfully Removed\",\n        \"description\": \" \"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Bug",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Bug Listing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// pm.test(\"Check bug_kuid is available\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"//     pm.expect(responseData.bugs_list[0].kuid).to.exist;\r",
											"// });\r",
											"\r",
											"// pm.collectionVariables.set(\"bug_kuid\", responseData.bugs_list[0].kuid);\r",
											"\r",
											"pm.test(\"Check bug_kuid is available and status is 200\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.bugs_list[0].kuid).to.exist;\r",
											"    pm.collectionVariables.set(\"bug_kuid\", responseData.bugs_list[0].kuid);\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"workspace_kuid\\\": \\\"${pm.collectionVariables.get(\"workspace_kuid\")}\\\"\\r\\n    }`})\r",
											"    }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"workspace_kuid\\\": \\\"${pm.collectionVariables.get(\"workspace_kuid\")}\\\"\\r\\n    }`})\r",
											"    }\r",
											"    \r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"pg\\\": 0\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/bug-list"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJiYndKWnRMVlJ3Q2JaTGZMR2FWOEI4TVVpNFE1bGM3MyIsImlhdCI6MTY3MDIyNTE5MSwiZXhwIjoxNjcyODE3MTkxfQ.6hokZ8NDWZbsJ0C8mnb_tQUItdgeNLZ8IgJyqiah4O8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\r\\n        \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\r\\n        \\\"pg\\\": 0\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/bug-list"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Dec 2022 10:27:47 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "4749"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"128d-ut5cmYdgQHP8sj0X2SCOrpz0jjQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJkNVRIUzFRNDh2ZHFDMzFIdFVWR3Nnd2IwMHBhbkNIMSIsImlhdCI6MTY3MDMwNDM2NiwiZXhwIjoxNjcyODk2MzY2fQ.CDwLr3cUStjP9umZ0J9OGjGyuXE_-PKGm-Z6U5OEcEU\",\n    \"bugs_list\": [\n        {\n            \"sr\": 1,\n            \"kuid\": \"sNFJolRwNsrqmiJ4rdALYxePd5r3NOns\",\n            \"bugTitle\": \"Error\",\n            \"Description\": \"Error\",\n            \"hostAppVersion\": \"1.0.0\",\n            \"isSignedRelease\": null,\n            \"deviceOS\": \"iOS 16.0\",\n            \"deviceModel\": \"iPhone XS Max\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1669962412293.jpg\",\n            \"reporteeName\": \"Haris Nazir\",\n            \"reporteeEmail\": \"Harisnazir26@gmail.com\",\n            \"deviceId\": \"AA4FD9A5739B4EC4878C5BFFEDD3662F\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"isEmulator\": 0,\n            \"isRooted\": 0,\n            \"sdkVersionId\": \"1.0\",\n            \"userActivityLogs\": \"{\\\"events\\\":[{\\\"eventType\\\":\\\"SYSTEM\\\",\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"network_change\\\\\\\" : \\\\\\\"wifi\\\\\\\"\\\\n}\\\",\\\"eventId\\\":837102055,\\\"timeStamp\\\":1669962315838,\\\"sessionId\\\":324},{\\\"eventId\\\":837102055,\\\"sessionId\\\":324,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"controllerName\\\\\\\" : \\\\\\\"ViewController\\\\\\\",\\\\n  \\\\\\\"screenshotPath\\\\\\\" : \\\\\\\"1669962316048.jpg\\\\\\\"\\\\n}\\\",\\\"eventType\\\":\\\"APP_JOURNEY\\\",\\\"timeStamp\\\":1669962317379}]}\",\n            \"freeMemory\": \"3,941.2\",\n            \"freeDisk\": \"181,649.3\",\n            \"isOnBattery\": 1,\n            \"batteryLevel\": \"100%\",\n            \"appPermissions\": {\n                \"Camera\": false,\n                \"location\": false,\n                \"Gallery\": true,\n                \"Microphone\": true,\n                \"GPS\": false\n            },\n            \"assigneeName\": null,\n            \"email\": null,\n            \"assigneeKuid\": null\n        },\n        {\n            \"sr\": 2,\n            \"kuid\": \"B365ZAjwdkyNJA5ZKPea33UnSIQfIsxI\",\n            \"bugTitle\": \"Testing Bug features \",\n            \"Description\": \"Testing bug reporting feature\",\n            \"hostAppVersion\": \"1.0.0\",\n            \"isSignedRelease\": null,\n            \"deviceOS\": \"iOS 16.0\",\n            \"deviceModel\": \"iPhone XS Max\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1669964452363.jpg\",\n            \"reporteeName\": \"Haris Nazir\",\n            \"reporteeEmail\": \"Harisnazir26@gmail.com\",\n            \"deviceId\": \"AA4FD9A5739B4EC4878C5BFFEDD3662F\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"isEmulator\": 0,\n            \"isRooted\": 0,\n            \"sdkVersionId\": \"1.0\",\n            \"userActivityLogs\": \"{\\\"events\\\":[{\\\"sessionId\\\":331,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"network_change\\\\\\\" : \\\\\\\"wifi\\\\\\\"\\\\n}\\\",\\\"eventType\\\":\\\"SYSTEM\\\",\\\"eventId\\\":166100025,\\\"timeStamp\\\":1669964418166},{\\\"sessionId\\\":331,\\\"timeStamp\\\":1669964418795,\\\"eventId\\\":166100025,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"controllerName\\\\\\\" : \\\\\\\"ViewController\\\\\\\",\\\\n  \\\\\\\"screenshotPath\\\\\\\" : \\\\\\\"1669964418363.jpg\\\\\\\"\\\\n}\\\",\\\"eventType\\\":\\\"APP_JOURNEY\\\"}]}\",\n            \"freeMemory\": \"3,941.2\",\n            \"freeDisk\": \"181,646.2\",\n            \"isOnBattery\": 1,\n            \"batteryLevel\": \"100%\",\n            \"appPermissions\": {\n                \"location\": false,\n                \"Gallery\": true,\n                \"GPS\": false,\n                \"Microphone\": true,\n                \"Camera\": false\n            },\n            \"assigneeName\": null,\n            \"email\": null,\n            \"assigneeKuid\": null\n        },\n        {\n            \"sr\": 3,\n            \"kuid\": \"zyTjKCsLxnEnPd5iOXwioVdK1uCvF7Il\",\n            \"bugTitle\": \"Test\",\n            \"Description\": \"Vxhdbsvdhxh\",\n            \"hostAppVersion\": \"1.0\",\n            \"isSignedRelease\": null,\n            \"deviceOS\": \"iOS 16.0\",\n            \"deviceModel\": \"iPhone XS Max\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670217507996.jpg\",\n            \"reporteeName\": \"Haris Nazir\",\n            \"reporteeEmail\": \"harisnazir26@gmail.com\",\n            \"deviceId\": \"CB7FAC30C91546B4997BCEB25D0837E6\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"isEmulator\": 0,\n            \"isRooted\": 0,\n            \"sdkVersionId\": \"1.0\",\n            \"userActivityLogs\": \"{\\\"events\\\":[{\\\"timeStamp\\\":1670217454111,\\\"eventId\\\":110484004,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"network_change\\\\\\\" : \\\\\\\"wifi\\\\\\\"\\\\n}\\\",\\\"eventType\\\":\\\"SYSTEM\\\",\\\"sessionId\\\":4},{\\\"eventId\\\":110484004,\\\"eventType\\\":\\\"APP_JOURNEY\\\",\\\"sessionId\\\":4,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"controllerName\\\\\\\" : \\\\\\\"ViewController\\\\\\\",\\\\n  \\\\\\\"screenshotPath\\\\\\\" : \\\\\\\"1670217454314.jpg\\\\\\\"\\\\n}\\\",\\\"timeStamp\\\":1670217454687}]}\",\n            \"freeMemory\": \"3,941.2\",\n            \"freeDisk\": \"174,700.2\",\n            \"isOnBattery\": 1,\n            \"batteryLevel\": \"100%\",\n            \"appPermissions\": {\n                \"Camera\": false,\n                \"Microphone\": true,\n                \"location\": false,\n                \"GPS\": false,\n                \"Gallery\": true\n            },\n            \"assigneeName\": null,\n            \"email\": null,\n            \"assigneeKuid\": null\n        },\n        {\n            \"sr\": 4,\n            \"kuid\": \"RnclUPmCF35AWIjdsE3uXeK23ljb7nn5\",\n            \"bugTitle\": \"Hdhdh\",\n            \"Description\": \"Hdhdjf\",\n            \"hostAppVersion\": \"1.0\",\n            \"isSignedRelease\": null,\n            \"deviceOS\": \"iOS 16.0\",\n            \"deviceModel\": \"iPhone XS Max\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670219667451.jpg\",\n            \"reporteeName\": \"Haris Nazir\",\n            \"reporteeEmail\": \"harisnazir26@gmail.com\",\n            \"deviceId\": \"1997F3F98F66468B95EDB0C86ECABC9E\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"isEmulator\": 0,\n            \"isRooted\": 0,\n            \"sdkVersionId\": \"1.0\",\n            \"userActivityLogs\": \"{\\\"events\\\":[{\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"network_change\\\\\\\" : \\\\\\\"wifi\\\\\\\"\\\\n}\\\",\\\"eventId\\\":933099985,\\\"sessionId\\\":4,\\\"eventType\\\":\\\"SYSTEM\\\",\\\"timeStamp\\\":1670219646933},{\\\"eventType\\\":\\\"APP_JOURNEY\\\",\\\"eventId\\\":933099985,\\\"timeStamp\\\":1670219647549,\\\"sessionId\\\":4,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"screenshotPath\\\\\\\" : \\\\\\\"1670219647144.jpg\\\\\\\",\\\\n  \\\\\\\"controllerName\\\\\\\" : \\\\\\\"ViewController\\\\\\\"\\\\n}\\\"}]}\",\n            \"freeMemory\": \"3,941.2\",\n            \"freeDisk\": \"174,627.9\",\n            \"isOnBattery\": 1,\n            \"batteryLevel\": \"100%\",\n            \"appPermissions\": {\n                \"Camera\": false,\n                \"GPS\": false,\n                \"Gallery\": true,\n                \"location\": false,\n                \"Microphone\": true\n            },\n            \"assigneeName\": null,\n            \"email\": null,\n            \"assigneeKuid\": null\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Bug Details View",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"workspace_kuid\\\": \\\"${pm.collectionVariables.get(\"workspace_kuid\")}\\\"\\r\\n    }`})\r",
											"    }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"workspace_kuid\\\": \\\"${pm.collectionVariables.get(\"workspace_kuid\")}\\\"\\r\\n    }`})\r",
											"    }\r",
											"    \r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"bug_kuid\\\": \\\"{{bug_kuid}}\\\",\\r\\n     \\\"notification_kuid\\\": \\\"\\\"\\r\\n  }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/bug-details"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJkNVRIUzFRNDh2ZHFDMzFIdFVWR3Nnd2IwMHBhbkNIMSIsImlhdCI6MTY3MDMwNDM2NiwiZXhwIjoxNjcyODk2MzY2fQ.CDwLr3cUStjP9umZ0J9OGjGyuXE_-PKGm-Z6U5OEcEU",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\r\\n        \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\r\\n        \\\"bug_kuid\\\": \\\"sNFJolRwNsrqmiJ4rdALYxePd5r3NOns\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/bug-details"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 06 Dec 2022 05:53:58 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1416"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"588-Surk7fdashNBChJEjQqMt86+KRs\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJkNVRIUzFRNDh2ZHFDMzFIdFVWR3Nnd2IwMHBhbkNIMSIsImlhdCI6MTY3MDMwNDM2NiwiZXhwIjoxNjcyODk2MzY2fQ.CDwLr3cUStjP9umZ0J9OGjGyuXE_-PKGm-Z6U5OEcEU\",\n    \"bug_details\": [\n        {\n            \"sr\": 1,\n            \"kuid\": \"sNFJolRwNsrqmiJ4rdALYxePd5r3NOns\",\n            \"bugTitle\": \"Error\",\n            \"Description\": \"Error\",\n            \"hostAppVersion\": \"1.0.0\",\n            \"isSignedRelease\": null,\n            \"deviceOS\": \"iOS 16.0\",\n            \"deviceModel\": \"iPhone XS Max\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1669962412293.jpg\",\n            \"reporteeName\": \"Haris Nazir\",\n            \"reporteeEmail\": \"Harisnazir26@gmail.com\",\n            \"deviceId\": \"AA4FD9A5739B4EC4878C5BFFEDD3662F\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"isEmulator\": 0,\n            \"isRooted\": 0,\n            \"sdkVersionId\": \"1.0\",\n            \"userActivityLogs\": \"{\\\"events\\\":[{\\\"eventType\\\":\\\"SYSTEM\\\",\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"network_change\\\\\\\" : \\\\\\\"wifi\\\\\\\"\\\\n}\\\",\\\"eventId\\\":837102055,\\\"timeStamp\\\":1669962315838,\\\"sessionId\\\":324},{\\\"eventId\\\":837102055,\\\"sessionId\\\":324,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"controllerName\\\\\\\" : \\\\\\\"ViewController\\\\\\\",\\\\n  \\\\\\\"screenshotPath\\\\\\\" : \\\\\\\"1669962316048.jpg\\\\\\\"\\\\n}\\\",\\\"eventType\\\":\\\"APP_JOURNEY\\\",\\\"timeStamp\\\":1669962317379}]}\",\n            \"freeMemory\": \"3,941.2\",\n            \"freeDisk\": \"181,649.3\",\n            \"isOnBattery\": 1,\n            \"batteryLevel\": \"100%\",\n            \"appPermissions\": {\n                \"Camera\": false,\n                \"location\": false,\n                \"Gallery\": true,\n                \"Microphone\": true,\n                \"GPS\": false\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Project Members",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"memberKuid\", responseData.fetchMemberInfo[1].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-members",
								"description": "## Details:\n\n- This API is used to fetch shared members\n- It will show empty member array if members not found in the workspace/project\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which you are finding members` |\n| `project_kuid (string) (optional)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Workspace (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:50:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1347"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"543-7qbh7PUol/kOvPo998DgFZdHavM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"sheheryar003@gmail.com\",\n            \"memberKuid\": \"93f8baf2fcfb44bdbdd7eca05bacdad3\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"workspace-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Test\",\n            \"email\": \"TEst@gmail.com\",\n            \"memberKuid\": \"a96b6b2d3a2746409591513b99a5e85c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Azhar\",\n            \"email\": \"sheikxamna@gmail.com\",\n            \"memberKuid\": \"o3jg5JuOdvogMh67JnQdrAe2k9wDDgcU\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Sheheryar Afzal\",\n            \"email\": \"bradatservice@gmail.com\",\n            \"memberKuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"Apple@367labs.com\",\n            \"memberKuid\": \"9ec98f0e988748fba3798305e609177c\",\n            \"role\": \"workspace-admin\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        }\n    ]\n}"
								},
								{
									"name": "Project (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n       \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-members"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 10 Feb 2023 09:55:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "318"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"13e-J55BvE0OE2rUHAbRUYts6NSti/Q\""
										}
									],
									"cookie": [],
									"body": "{\n    \"fetchMemberInfo\": [\n        {\n            \"avatar\": null,\n            \"fullName\": \"Daniyal Shafiq\",\n            \"email\": \"daniyal.shafiq12.ds@gmail.com\",\n            \"memberKuid\": \"78bafc302d2f4bba8928486d5bea2b2a\",\n            \"role\": \"project-member\"\n        },\n        {\n            \"avatar\": null,\n            \"fullName\": \"Muhammad Usman\",\n            \"email\": \"usman@gmail.com\",\n            \"memberKuid\": \"8c574227e40d4e32bb586267cb28438c\",\n            \"role\": \"project-admin\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Assignees Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"assignee_kuid\", responseData.fetchMemberInfo[1].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/user-workspaces\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/owned/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/shared/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n  }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-assignees",
								"description": "## Details:\n\n- This API is used tosearch bugs.\n- Upon http status code 403, show a relevant message i.e. user does not have permission to create project in a specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n- NOTE: Make sure, among parameters: search_query, tags, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `title of the project` |\n| `search_query (string) (mandatory)` | `the text to be searched in bugs' title or description   (can be sent empty)` |\n| `tags (array) (mandatory)` | `array of tags ids   (can be sent empty array)` |\n| `assignees (array) (mandatory)` | `array of assignees' ids   (can be sent empty array)` |\n| `status (string) (mandatory)` | `resolution status of the bug i.e to_do, in-progress, done` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Assignees",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"fcvajsafwl4ifqisobn3wnqlciul3dnb\\\",\\n  \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-assignees"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Jan 2023 05:07:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "444"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1bc-82M9QYOoApZ565tdrxqM9VUU4Lw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"fcvajsafwl4ifqisobn3wnqlciul3dnb\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA\",\n    \"Assignees\": [\n        {\n            \"name\": \"Haris Nazir\",\n            \"kuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"avatar\": \"https://avatar.com\",\n            \"groupName\": \"iOS Engineering\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Bug Search",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n  \\\"search_query\\\": \\\"\\\",\\n  \\\"tags\\\": [],\\n  \\\"assignees\\\": [\\\"\\\"],\\n  \\\"status\\\": [\\\"xyz2\\\"],\\n        \\\"version\\\": [],\\n  \\\"pg\\\": 0\\n}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/search-bugs",
								"description": "## Details:\n\n- This API is used tosearch bugs.\n- Upon http status code 403, show a relevant message i.e. user does not have permission to create project in a specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n- NOTE: Make sure, among parameters: search_query, tags, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `title of the project` |\n| `search_query (string) (mandatory)` | `the text to be searched in bugs' title or description (can be sent empty)` |\n| `tags (array) (mandatory)` | `array of tags ids (can be sent empty array)` |\n| `assignees (array) (mandatory)` | `array of assignees' ids (can be sent empty array)` |\n| `status (string) (mandatory)` | `resolution status of the bug i.e to_do, in-progress, done` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200) only search_query provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ3Z3FhV1lTemdQS29GWkQyWGtONjNieVlrYlNiZ3VURiIsImlhdCI6MTY3MjI1MjI5NiwiZXhwIjoxNjc0ODQ0Mjk2fQ.M_cH9Xcx24tY_uYMRWDXejw5LBg-CdKKk0l45PRAKuo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n  \\\"search_query\\\": \\\"error\\\",\\n  \\\"tags\\\": [],\\n  \\\"assignees\\\": [],\\n  \\\"status\\\": \\\"\\\",\\n  \\\"pg\\\": 0\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/search-bugs"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 28 Dec 2022 18:41:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "8456"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2108-CFa1sOlKzJpfdRBy4xQBNiyIzMc\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ3Z3FhV1lTemdQS29GWkQyWGtONjNieVlrYlNiZ3VURiIsImlhdCI6MTY3MjI1MjI5NiwiZXhwIjoxNjc0ODQ0Mjk2fQ.M_cH9Xcx24tY_uYMRWDXejw5LBg-CdKKk0l45PRAKuo\",\n    \"bugs\": [\n        {\n            \"kuid\": \"B365ZAjwdkyNJA5ZKPea33UnSIQfIsxI\",\n            \"bugTitle\": \"Testing Bug features \",\n            \"Description\": \"Testing bug reporting feature\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1669964452363.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"Resolved\",\n            \"statusType\": \"done\"\n        },\n        {\n            \"kuid\": \"qy9RbG7Z4iYfWdK7KONoqqTdGqobZnMq\",\n            \"bugTitle\": \"Sherry issye\",\n            \"Description\": \"Testing bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670324129878.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"SVsXxUmDgpgxKBPpywxaLa63n0X7hUYe\",\n            \"bugTitle\": \"Bugs \",\n            \"Description\": \"Bugss \\nBugss\\nBugss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670825419669.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"Z1wIiIHXW8pnlDUZWONHbLxeQeh7weWX\",\n            \"bugTitle\": \"My Bugs\",\n            \"Description\": \"Testing my bugs featureâ\\u0080¦.\\n\\nTesting my bugs featureâ\\u0080¦.\\n\\nTesting my bugs featureâ\\u0080¦.\",\n            \"tags\": null,\n            \"videoAttachments\": \"1670827433357.mp4\",\n            \"audioAttachments\": null,\n            \"images\": \"1670827433017.jpg,1670827433056.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"In Progress\",\n            \"statusType\": \"in_progress\"\n        },\n        {\n            \"kuid\": \"f8uQ4Y7IigUV7oYMKrV1L3Ydg7QXumSr\",\n            \"bugTitle\": \"My bugs 2\",\n            \"Description\": \"My bugs 2\\n\\nMy bugs 2\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670828434945.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"In Progress\",\n            \"statusType\": \"in_progress\"\n        },\n        {\n            \"kuid\": \"cVJcUM02NpfwZLKfkPjyEUzs7aTINwxB\",\n            \"bugTitle\": \"bugg Test from app\",\n            \"Description\": \"Testing bug from fusion app\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1671013045528.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"7ZzFvRxlyWwV2xZHSBHVk9uIwxfS86X2\",\n            \"bugTitle\": \"Testing App bug\",\n            \"Description\": \"FusionUserDefaults.userEmail\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1671447255372.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"wsf4FXy1aHAnK0pQsNH5kb5TIxUumyO9\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228728884.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"n4EgHuMpftIuUU5o3vFg71OE34KmLpDD\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228732143.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"OEPFzUzy67N1f4UxQPx8o3oRUVFsSNXn\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228734752.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"Wqx8CcR6kky3T1QDehVvYUHtD8bHul5M\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228737469.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"2gpLedvJkoau9etRk9qzocs9pHb58Y1e\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228740713.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"X5BsBYNgyb0nftc60hw94VDE0lr9Ei4c\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228743862.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"5RwLY3uVAGYPTuZ33JX0ksQ0bcXqoy7i\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228804853.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"DXauLU6KIOhTWKhWrqedR4ssjoTCXgap\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228808855.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"9pLxt0nY0j09Xr7rFw5u2xAScrQW71Gw\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228812166.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"8yx8Bdjuo8BR5acjPpk9njpKGvPxqPdo\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228815242.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"AnbangMew6rCOU4AFmV57mB1uD4IrKnq\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228819091.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"UbqFxl09om0l4H75Jz4iSADUmjSOgWh4\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228822577.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"EA0zpB9BGEHHVR9nVGdZ66cf0t978kQV\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228828267.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"DNiyUa1ze8DWZT4h8fRKdG2tOayUsAQ1\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228831467.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"kNpM8c6JsEApEbnK9oQPNB2C7jb1aCgD\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228834786.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"rtphWzuZREU0yvKXxuosV2sdcpTElg4j\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228838889.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"W0hI92mvtaNFOJNPFuAdT1jtnIUwfnLW\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228842347.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Submit Comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"comment_kuid\", responseData.comment_kuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"issueType\\\": \\\"bug\\\",\\r\\n        \\\"issueKuid\\\": \\\"{{bug_kuid}}\\\",\\r\\n        \\\"userKuids\\\": [],\\r\\n        \\\"comment\\\": \\\"This issue is still not resolved\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/submit-comment",
								"description": "## Details:\n\n- This API is used to post comment on an issue (bug / crash)\n    \n\n| **Parameters** | **Data type** | **Notes** |\n| --- | --- | --- |\n| `workspace_kuid (required)` | `string` | `kuid of the current workspace` |\n| `project_kuid` | `string` | `kuid of the current project` |\n| `issueType` | `string (enum = \"bug\" / \"crash\")` | `it is either bug or crash` |\n| `issueKuid` | `string` | `kuid of the issue` |\n| `userKuids` | `array` | `if the author of comment mentions assignees, their kuids will be added to the array and sent it in this param. If no assignees are mentioned then this array would be sent empty.` |\n| `comment` | `string` | `text of the comment` |\n\nStartFragment\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API.\n\nEndFragment\n\n### Expected Response:\n\n``` json\n{\n    \"workspace_kuid\": \"---\",\n    \"project_kuid\": \"---\",\n    \"token\": \"---\",\n    \"message\": \"success\"\n}\n\n```\n\n##"
							},
							"response": [
								{
									"name": "Sucess (200) plain text",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJNZzVZWkpERU9IaUJCaFVTVU9pNXFFSEYxcDRyd1BYNSIsImlhdCI6MTY3MzQ0MDc4NiwiZXhwIjoxNjc2MDMyNzg2fQ.zyXlHd1X6h3ljIYI6Exl0FvAwDZacvc_DFqrEPe50w8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\r\\n        \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\r\\n        \\\"issueType\\\": \\\"bug\\\",\\r\\n        \\\"issueKuid\\\": \\\"cVJcUM02NpfwZLKfkPjyEUzs7aTINwxB\\\",\\r\\n        \\\"userKuids\\\": [],\\r\\n        \\\"comment\\\": \\\"This issue is still not resolved\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/submit-comment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 11 Jan 2023 15:29:51 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "325"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"145-U6c101nKXl/8pk0vfdBMX7bj+vM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJNZzVZWkpERU9IaUJCaFVTVU9pNXFFSEYxcDRyd1BYNSIsImlhdCI6MTY3MzQ0MDc4NiwiZXhwIjoxNjc2MDMyNzg2fQ.zyXlHd1X6h3ljIYI6Exl0FvAwDZacvc_DFqrEPe50w8\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Fetch Comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"issueType\\\": \\\"bug\\\",\\r\\n        \\\"issueKuid\\\": \\\"{{bug_kuid}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-comments",
								"description": "## Details:\n\n| **Parameters** | **Data type** | **Notes** |\n| --- | --- | --- |\n| `workspace_kuid (required)` | `string` | `kuid of the current workspace` |\n| project_kuid `(required)` | string | kuid of the current project |\n| issueType `(required)` | string (enum = bug / crash) | if the comments on a bug are being fetched then issueType = \"bug\". If comments on a crash are being fetched then issueType = \"crash\" |\n| issueKuid `(required)` | string | kuid of the issue |\n\nStartFragment\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API.\n\n### Expected Response:\n\n``` json\n{\n    \"workspace_kuid\": \"---\",\n    \"project_kuid\": \"---\",\n    \"token\": \"---\",\n    \"comments\": [\n        {\n            \"userKuid\": \"---\",\n            \"userName\": \"---\",\n            \"comment\": \"---\",\n            \"postedOn\": \"---\"\n        },\n        ...\n    ]\n}\n\n```"
							},
							"response": [
								{
									"name": "Success (200) plain text",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJNZzVZWkpERU9IaUJCaFVTVU9pNXFFSEYxcDRyd1BYNSIsImlhdCI6MTY3MzQ0MDc4NiwiZXhwIjoxNjc2MDMyNzg2fQ.zyXlHd1X6h3ljIYI6Exl0FvAwDZacvc_DFqrEPe50w8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\r\\n        \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\r\\n        \\\"issueType\\\": \\\"bug\\\",\\r\\n        \\\"issueKuid\\\": \\\"cVJcUM02NpfwZLKfkPjyEUzs7aTINwxB\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-comments"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 11 Jan 2023 15:41:31 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "630"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"276-wgK0ucRPhd4Ci7bDCYYOPstCe8Y\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJNZzVZWkpERU9IaUJCaFVTVU9pNXFFSEYxcDRyd1BYNSIsImlhdCI6MTY3MzQ0MDc4NiwiZXhwIjoxNjc2MDMyNzg2fQ.zyXlHd1X6h3ljIYI6Exl0FvAwDZacvc_DFqrEPe50w8\",\n    \"comments\": [\n        {\n            \"userKuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"userName\": \"Haris Nazir\",\n            \"comment\": \"This issue is still not resolved\",\n            \"postedOn\": \"2023-01-11T15:29:51.000Z\"\n        },\n        {\n            \"userKuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"userName\": \"Haris Nazir\",\n            \"comment\": \"This issue is still not resolved\",\n            \"postedOn\": \"2023-01-11T15:28:43.000Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Delete Comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n              \\\"comment_kuid\\\": [\\\"{{comment_kuid}}\\\"]\\n     }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-comments",
								"description": "# Details:\n\nStartFragment\n\n- This API is used to delete comments\n    \n\nEndFragment  \n  \n\n| **Parameters** | **Data Type** | **Notes** |\n| --- | --- | --- |\n| `workspace_kuid (required)` | `string` | `kuid of the workspace` |\n| `project_kuid (required)` | `string` | `kuid of the project` |\n| `comment_kuid(required)` | `array` | `kuids of the comments that to be deleted` |\n\nStartFragment\n\n> IMPORTANT: payload shall be encrypted with clientSecret (workspace kuid) and projectToken (project kuid) shall be sent in Authorization header \n  \n\nEndFragment\n\n``` json\n{\n    \"workspace_kuid\": \"---\",\n    \"project_kuid\": \"---\",\n    \"token\": \"---\",\n    \"comments\": [\n        {\n            \"userKuid\": \"---\",\n            \"userName\": \"---\",\n            \"comment\": \"---\",\n            \"postedOn\": \"---\"\n        },\n        ...\n    ]\n}\n\n```"
							},
							"response": []
						},
						{
							"name": "Update Bug Assignee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n       \\\"bug_kuid\\\": \\\"{{bug_kuid}}\\\",\\r\\n        \\\"assignee_kuid\\\": \\\"{{assignee_kuid}}\\\"\\r\\n    }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-bug-assignee",
								"description": "## Details:\n\n- This API is used to update bug assignee.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `title of the project` |\n| `bug_kuid (string) (mandatory)` | `kuid of the bug` |\n| `assignee_kuid (array) (mandatory)` | `kuid of the assignee` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Update Bug Assignee",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n       \\\"bug_kuid\\\": \\\"sNFJolRwNsrqmiJ4rdALYxePd5r3NOns\\\",\\r\\n        \\\"assignee_kuid\\\": \\\"2\\\"\\r\\n    }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/update-bug-assignee"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sat, 28 Jan 2023 06:08:32 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "127"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"7f-6OGotg6BUZvTe0VV5ym8ohsLIys\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Something went wrong\",\n        \"description\": \"update_bug_assignee_shema is not defined\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Bug Resolution Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n    \\\"bug_kuid\\\": \\\"{{bug_kuid}}\\\",\\r\\n       \\\"bugResolutionStatus_kuid\\\": \\\"{{inprogress}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-bug-status"
							},
							"response": []
						},
						{
							"name": "Fetch Bug Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n       }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-bug-filters",
								"description": "## Details:\n\n- This API is used to fetch Bug filters.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Bug Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n       }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-bug-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 24 Feb 2023 06:43:20 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6646"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"19f6-wjzzkJCfZZcHxvkr4K9I1Os7uTU\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"filter\": [\n        {\n            \"label\": \"status\",\n            \"values\": [\n                {\n                    \"status\": \"in_progress\",\n                    \"kuid\": \"xyz2\"\n                },\n                {\n                    \"status\": \"done\",\n                    \"kuid\": \"xyz3\"\n                },\n                {\n                    \"status\": \"todo\",\n                    \"kuid\": \"xyz1\"\n                }\n            ]\n        },\n        {\n            \"label\": \"assignee\",\n            \"values\": [\n                {\n                    \"fullName\": \"Test User\",\n                    \"avatar\": \"783001.webp\",\n                    \"email\": \"harisnazir26@gmail.com\",\n                    \"kuid\": \"dfa6e6f35402482785c992e85791bf86\"\n                }\n            ]\n        },\n        {\n            \"label\": \"version\",\n            \"values\": [\n                {\n                    \"env_hostAppVersion\": \"1.0.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"1.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"3.0.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"0.0.1\"\n                },\n                {\n                    \"env_hostAppVersion\": \"12\"\n                },\n                {\n                    \"env_hostAppVersion\": \"9\"\n                },\n                {\n                    \"env_hostAppVersion\": \"13\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Tags\",\n            \"values\": []\n        },\n        {\n            \"label\": \"operating Sytem\",\n            \"values\": [\n                {\n                    \"env_deviceOS\": \"iOS 16.0\"\n                },\n                {\n                    \"env_deviceOS\": \"Google Pixel 2\"\n                },\n                {\n                    \"env_deviceOS\": \"INFINIX MOBILITY LIMITED Infinix X688B\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Reportee\",\n            \"values\": [\n                {\n                    \"fullName\": \"Test User\",\n                    \"avatar\": \"783001.webp\",\n                    \"email\": \"harisnazir26@gmail.com\",\n                    \"kuid\": \"dfa6e6f35402482785c992e85791bf86\"\n                },\n                {\n                    \"fullName\": \"Testing\",\n                    \"avatar\": null,\n                    \"email\": \"testing@gmail.com\",\n                    \"kuid\": \"h4gU1VwILU5NwENYV9wur6JtvU2y2b4B\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Date\",\n            \"values\": [\n                {\n                    \"createdAt\": \"2022-12-02T06:26:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-02T07:00:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T05:18:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T05:54:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T10:55:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T05:46:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T06:10:21.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T06:43:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T07:00:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-13T08:07:04.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-14T09:14:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-14T10:15:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-14T10:17:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-15T06:48:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-15T14:35:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-19T10:54:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-19T12:27:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-23T12:45:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-26T11:48:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:58:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:58:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:58:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:59:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:59:04.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:19.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-29T10:24:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-29T10:33:13.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-29T10:35:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-04T11:43:40.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T06:59:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T09:24:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T10:11:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-18T08:11:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-18T12:29:25.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T05:22:33.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T10:10:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T16:10:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T20:41:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T09:56:34.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:38:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T11:01:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T11:16:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T13:01:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T06:48:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T07:04:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T07:41:38.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T10:03:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T10:04:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T12:58:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-24T09:47:31.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-24T09:55:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-24T09:56:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:51:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:55:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:56:02.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:56:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T11:03:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T11:03:31.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T11:04:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T07:58:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T09:50:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T10:46:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T10:48:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T05:50:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T06:09:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T06:24:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T10:15:03.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:19:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:20:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:35:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:35:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T10:31:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T05:03:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:30:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:46:13.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:53:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:54:04.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T11:19:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T11:21:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T04:21:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T06:43:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:17:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:50:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:51:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-09T10:08:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:41:08.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:00:14.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:09:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:31:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:39:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T08:03:19.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T13:33:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T05:29:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T09:45:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T07:15:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:34:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:36:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:36:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:39:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T10:21:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:34:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:12:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T10:11:14.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T12:42:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T13:02:03.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-19T16:31:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-19T16:40:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T05:28:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:19:02.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:22:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:36:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:45:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:46:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T12:47:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:29:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T07:02:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T10:03:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T11:26:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T12:21:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T12:22:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T12:33:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:08:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:15:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:56:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:57:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-24T04:35:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-24T04:44:41.000Z\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Apply Bug Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n     \\\"status\\\": [ \\\"{{status}}\\\"],\\n    \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/apply-bug-filters",
								"description": "## Details:\n\n- This API is used to apply bugs filters.\n- NOTE: Make sure, among parameters: label, operating_system, version, reporter, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is searching bug` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `label (string) (optional)` | `the text to be searched in bugs' title (can be sent empty)` |\n| `version (array) (optiona)` | `version of the bug (can be sent empty array)` |\n| `assignees (array) (optional)` | `array of assignees' ids (can be sent empty array)` |\n| `status (array) (optional)` | `resolution status of the bug i.e to_do, in-progress, done` |\n| `operating_system (string) (optional)` | `os of device (can be sent empty array)` |\n| `date (string) (optional)` | `date of the bug (can be sent empty array)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Apply Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"error\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/apply-bug-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 05:35:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "703"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2bf-1sjeHz0SqoVeujXtom6A2HAdTBo\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJNT09Gc3o0QUhXRkFDRk40SkZwNkxnYjQyc3FmaE01ayIsImlhdCI6MTY3NzA0NDEzMCwiZXhwIjoxNjc5NjM2MTMwfQ.HJL6ecNbUh7Cl_THIVMExMPOXHxiN78rljn_3JFZsJ0\",\n    \"bugs_list\": [\n        {\n            \"kuid\": \"sNFJolRwNsrqmiJ4rdALYxePd5r3NOns\",\n            \"bugTitle\": \"Error\",\n            \"Description\": \"Error\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1669962412293.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"fullName\": \"Test User\",\n            \"avatar\": \"afp_en_7a17bdb63d07277ed7a4e1e13c6190e56b715224.jpg\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Delete Bug",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\"\\n    \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n     \\\"bug_kuid\\\": \\\"{{bug_kuid}}\\\"\\n}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-bug",
								"description": "## Details:\n\n- This API is used delete the bug.\n- Upon http status code 400, show a relevant message i.e. bug not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is deleting bug` |\n| `bug_kuid (string) (mandatory)` | `kuid of the bug` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Submit Bug Details for web",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "105804735A424C6AA1565A192D831898"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "voiceNote",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "screenShots",
											"type": "file",
											"src": "/C:/Users/Muhammad Azhar/Downloads/20230705-101102(1).jpg",
											"disabled": true
										},
										{
											"key": "screenShots",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "screenShots",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "screenShots",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "screenShots",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "videoAttachment",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "payload",
											"value": "a3fac9469310cf141c833320b69a0eac:ede23d6be9ad0faf21ef466beb2c0678cae6bc234114e26252f038e5af98965e889a3edabf87040c213fdc2b9aeaaa011e58ce4b1eb0ecf61cbb55808c48491af5375bdcdb6ec9a496de40ac60a242923d415bdfc5b576e2e03938aac7119407571c3850aaccc67ef53a07d179314393d1d7440556fce7c85e40b0d0721cf63e74cfdfd255e4d20440aa49649a76baaef28b4282bda3688d2ba9b6fc5d68864d30af133b7253ef2ebe10fda6cd54fff321dedf4b7f90475128c0d3c9dd0aa719324eb4b3f52b70bff699c10e9e5e6866a77a2d9680156162f47920cf11dd75970f1d19fa1fbb0b7fe9591d61bcefd5a67dbfe6a81ecd8c0aef882e31ea0b0ec32ebaf8db9fc2454e4484207775275ae8f9fe34a0376efcf5ffa7866148b7a98e2c9ea24ce9cf2479c741dfea37e50deb65fd9e8cfbbe1671863a7adb58c3da66385689ad543a0ad2affb5ca93dd17d83301d53b92449d9180151cea12a9b5d067c79732a4bddd77bb21918e95928458aa505938bce1f865b9ebc12ca676104d65646b30da707f7e5c7ad575f7d556de988909f48a2ae21123f92c79148966671dfee0873c869d94731cb71e43a186ca9ad591f711fb942d095a9b80bd621907240018ab85df157381cd72c8edb4cad37ff44752bdbd9c425858db3fbf06784c40fce62d42119d8980ed5ad14bef519b6a1205aefd89c829d376adb4621b4c4aa2e5dfeafd6a4f1663c5e97858d19ff5a00499d733d46da22155f3be1b6722e76bb5502f99160e1f42792042c41793a7057fb4805676c06f11be18b62357a5381ecc3f195006a5861a2cf88d9759035d7b9ac93dbca50557488b2399c61d7788bbdd1cabd264ca133075cfd042a1a158c387447ce0131ae910e87a3970b2c62723bfef54853167575f4d4516df286ccaada86b5d72234036e85511ebae52f25e2637ae445bc11c482fdc061626301fe4683506057a2dcb0dd319bd3ae8e0c58c014a5885b6086d1b8dea903d8eedb0cbd909e3c8e6d657ffec9cf2e3c0497d9c322218e526693fe67f54607864af1d9b596734f288f0a680ac77845b44c9aecedc83f5edbaddd015ebf2aff1b999219ede2b06da277cf49ad1a233149b2b60c8e4b2a67e987b98d5fa7b0d5f42e268229148392ce240af08a33e5d0c9a7945566084a5a037aed9272bce5d67a8c715a5cee0eeddd2c6b46942beffecf537d9ce8509f28b61309b1b2e9f6f8a36cb5955a3d0b8856e1b4f0e45818040ab47b92ed9433bcf5cb0ef1aa0749c0684031a66ae22c340f73e752ced40f62bc830b9a208773aa91322980b006689bd27907d8105b7e5ff13c32fcaea8be3579548cecdeb32a5bdc2d8002fba64ebb5ab4a095a202a65a1e718690ce9de2c4613a59c64e6d8b07c842c689e78fb133bf06d5085ca9e24ca02075b3d7eb8ee799067c1cb970741a12c82544e2114b1ee90e50c99f057032bd07aa88e1b30a91b4d5b24cb660d2823f955d96daf0d1b38e77c6e04369974913e02b418f535447df24948c7c0a1f7ac8ec63909b34dc092fd067382d6f45492b76248cca5216fefff1f97260c870cdaf8d93740b92d1c64ca1c755105c2fa54cbcdf7930ad389c61a406b7372f0f1ee3779ae1aa57dbf18374d9f78ab82ab865dcf40f2821041b4a9fcd1def40dc04ff1db6d9f3512d2dda2b46977298d558823ce9835d0d7131ac0fe637103c8f9ddb8bb2cc3c8092decd009ec821",
											"type": "text"
										}
									]
								},
								"url": "{{sdk_submit_bug}}/api/v1/sdk/submit-bug",
								"description": "``` json\n{ \n    \"token\":\"xyz\",\n    \"reporteeName\": \"xyz\", \n    \"reporteeEmail\": \"abc@mail.com\",\n    \"assignedTo\": 12,\n    \"bugDescription\": \"some bug description\", \n    \"bugTitle\": \"Header is not responsive\", \n    \"screenDensity\": \"376.57 ppi\", \n    \"screenResolution\": \"5120×2880\", \n    \"userActivityLogs\": {\"events\": {\"click\": \"Main screen\"}},\n    \"isEmulator\": false,\n    \"isRooted\": false,\n    \"freeMemory\": \"1024 MBs\",\n    \"freeDiskMemory\": \"2048 MBs\",\n    \"batteryLevel\": \"70%\",\n    \"isOnBattery\": false,\n    \"appPermissions\": {\n        \"location\": true,\n        \"camera\": true,\n        \"microphone\": true,\n        \"GPS\": true,\n        \"Gallery\": false\n    }\n}\n\n```\n\n> TODO: Above payload will be sent as encrypted in beta/production environment. \n  \n\n### Details\n\n| **Parameter** | **Notes** |\n| --- | --- |\n| `assignee_kuid (array of strings)` | Assignee of the bug |\n| `tag_kuid (array of strings)` | List of tags associated with a bug being submitted |\n| `isEmulator (boolean)` | Reflects if the app is running on emulator |\n| `isRooted (boolean)` | Reflects if the device is rooted |\n| `freeMemory (string)` | available RAM of the device |\n| `freeDiskMemory (string)` | Free Disk storage of device |\n| `batteryLevel (string)` | Device's battery percentage |\n| `isOnBattery (boolean)` | Reflects if the device is on battery or not |\n| `appPermissions (JSON object)` | Permissions given to the app by the user |\n| `token` | Received in SDK Client Handshake API  <br>(Mandatory) |\n| `reporteeName` | Name of bug reportee  <br>**\\- Optional** if user is reporting anonymously  <br>\\- Mandatory if user is reporting after login |\n| `reporteeEmail` | Email of reportee  <br>(Mandatory) |\n| `assignedTo` | You'll get information/data for this parameter from another API.  <br>(optional) |\n| `suggestingAnImprovement` | suggestingAnImprovement is a string |\n| `userActivityLogs` | userActivityLogs is an array |\n| `bugDescription` | Description about bug being logged  <br>(Mandatory) |\n| `bugTitle` | Title of the bug  <br>(Mandatory) |\n| `screenDensity` | Screen density of device  <br>(Mandatory) |\n| `screenResolution` | Screen resolution of device  <br>(Mandatory) |\n| `userActivityLogs` | Will contain your captured activity logs data (extracted from SQLite) in a JSON format.  <br>(Mandatory) |\n| `test_case_ids` | test case Ids in which you want to report bug |"
							},
							"response": [
								{
									"name": "Success (200) encrypted payload",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "voiceNote",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP3_700KB.mp3"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-side.jpg"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-front.jpg"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/csvss.PNG"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/ui.PNG"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-back.jpg"
												},
												{
													"key": "videoAttachment",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP4_480_1_5MG.mp4"
												},
												{
													"key": "payload",
													"value": "9d6f4c95466272ef3fe670c939ddb839:3cc30462ab0cc6b2ab897babb9bf28eaf91ab952a134a016bfb8ebf1fac8cdedfbfd47d098e012473b95e0802c348606cccb7f538f33f9644f99b6f3c465d4a93a5233a6248aa809eae2daaa9cfbe9edfe432615089e85a63e733d9e593989fa60488220ed3b846c9511893756e3b8cc68b652140cd9ea2a3a709fa0a3be1609f0cd815bdc6dfc76063402dd517cf72789338b05d39b4cd5d9afc746c82767db5c4bf6a6114e4945f8d36a10a96bad583c671945c22661ebea8b5794f838188acea897014ef615f57c69378cb5242a445c7b33fec634fa466ae79d02ac82425537085cd6d90d03a348cfae5670008aabdd8c3a60c55b100a47d677afbecf9d42796f59b0161958447cc8253fd9479179f38f2b23f3403ff20d32ce21d4ce6ee251d67bbd055bc375a1f83a905b095c9977c789fb1f5ad46571a725b36a81755078291fb1606f46c56187349abb2a7c6de9b9d8a311ebca2b7a2c463d6593735a58bfdbe1a909896f052b8323243a607f45543374b1b60373a989292135ccdf5d0e4d22a89bda2510f206e984e6bb79f7a0122a2647949152c77cc3603908f0d672097a2868b95643ec09155ac9c4e6042f2898babbde26897ffc3c9b3cab1ec442298cd14a36fbb81bbd4a6918225a2c531c9388550120dc7ffc0d355ce280a96ec3d6d591d372283c98c99fab4757b5494ce873faebeed0d37354f7efc3f93c9dc9eaebd281baf80395df2f522862ca012ee74a303bcc6f2c0e1a83cd65d6ebd0f1b676f9c261f4a7945843359d8de5ac915dc7c434f71694332569b5b3c789ae0d9a18ac1683d71d6fdc5b3c62501c7dcfbe39a8726211ce8cc3f4092ab2da9ed74aca2b3e117b769d8f1f784bf58b831a01fe431753cf47a0c80653b0f3c062a5e20f449f7dfbe2dfc0f203c5289622e259aa15f4659a2b2093b18695313d41b44a8385f82884222b8916cc25ac915a01614a8e4a605888dee6110feaaacf36022771f867bed156ada2119a7e8604a4c5717fdca9eb9258d302cbc12e5bcd5d8f4906793ec6d5c0c0aee70dbfcdd1ac964e2cba842ef910f95fb697f9e502702b8cdd8809f00a5d7942074a260ba4390a7a3ab129eb657495b5c84cec96959b78b7ee0f0f26063f7231e39a22722ae1be2e704fb41f053f7c2a86b20559316f5dd66d784ba6bb0b332b212dda78b4055a6ab45ac169dd66f994f1fd9b246dcb9bc6db77d6f6c174926f556efca3ecc0ec169c92d248cc93d19bc4b61db512f4258d7a1f849e1908f4e15e8f46ad922c97a638f00d14b47b47435dac93d6be579db4b45e8a3ab6307a463cc88c634f9480712792d1dde47ba3709e96f27efc91ee8dd38933c7d2c051700ac26c908f80e71f3e6706773db3d8458f1a2a4ad51117b2edec48c928f6b922ef559a58c7adfa8e195cda84b1a6817d2128d18c00448c84116bcf71de5c01431c820e3d520df698f41ba153b317bcc4de9261ef405b23fb1e490b713b11fcfa043426bcf61dee2e0743973d1d0ba576548fa0f351b5173fd6a91188cc55dafd3522ba5fe760d3e0156dc7fa48b14c845c62aca0253f14b9a15dcb8a6ec303e7ca61a68118cb827611365844c70e5b29949f3c1bf9440d5f0173b4bd1b8b7dff50ad3dad5a3c7f629c425eacdfb56b5c70ae907b5f1d3a649afb81ea531e2da58fd2189adf9ee9cce0ac1b91490a8540995882d58f8d289b4153b107e3ec41cd3101683fd9a604880318350ad8cdde0dfedbbca5d4697cc748dbec9eb06f8f81889e3a27492b4ef0d86d2ba0cc848d79273f8a526779c421e0ab74f620bc32e8a0c06e21f2649a183f0b62b5ef6b5ad15f8df9a63dddf54429c44e207619d448fdb6704ece4e37d99d96fa4f47784007287222a3b325b0e943701930b7564e82c82197be8e892b1c8bdc4a198afdbb72324fef32c0bd207ecf7670b0c2df01bda45af14c4a1770dce7e340e95cf9d1d06f52b6b41ee7cf5906efdb6bab1c857a7f424b6b694d7518cf8597ba42294a5f292f0c0aba0f7a27dd9296b7706e728ed4ceb182a89ac4b592e20d5d3feb24462cf284e5f04dc64b4fe85d71529e67219f6f4bfcba7e3510183cd7d52fd73e69b3784f53f885e22f19b870febe4a8551c01bd64028082811644849faee7eda605f33333db8c0f0a21fb3b7d407235cdff21740c9a972008ef848497f8f77221b0bd5547467",
													"type": "text"
												}
											]
										},
										"url": "http://fiv2bug.transroadservices.com/api/v1/sdk/submit-bug"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 28 Sep 2022 05:28:19 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "21"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"15-ga8EF/lp+ThIsc8w/OHbk4hPrME\""
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"success\"\n}"
								},
								{
									"name": "Bad Request (400)  missing param in payload",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "voiceNote",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP3_700KB.mp3"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-side.jpg",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-front.jpg",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/csvss.PNG"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/ui.PNG"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-back.jpg"
												},
												{
													"key": "videoAttachment",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP4_480_1_5MG.mp4",
													"disabled": true
												},
												{
													"key": "payload",
													"value": "{  \"token\":\"6108e38c1cd1964ce5a4666a464bffd6:8216ea4db68825f01a90f860b6c72358af013431486caeb265399746dfd2df5be7b786b37c5df947d3ae8b971282c25b158af216c886662d8f7f8168f2cc54f7eb0875c4d8c8b1fb627c98ba5af7f6e5e10e87513f96d4e381f78784a7699840771177824f32feb237f78d9fc9653ae2f995a6001e78b1698212cf44957e0a620c4c791a061eb6138439b4698fa2d5ac7a1580cfa05c1d2b29f2f46923129212955719d1fa9edda1c9c88df630ddb89e9e38a961e5775e6a86f5eb385c9a39ea416fe66e49435e303b21d477e4abc42b27f6bd4ee08174a4c4f5f360d55069a7ec4820679510fe50d111d6f6644eab32ccacfb71c29884419fbc8193bda50368e55d60c9c8a054c078395f991da5b978c92526940b54af19a7e49395ff3881100cf7770e5303de84a8116e26516ce54fe4e125a3ff39d2b32095c79f366cbeccb1d0feae8c90a28072cea80d2b5b541eabdb3ce2d181d061a74976686b6cab2992952b266f8ae537eb56d1f7d0188ce2da0231c637cd73ab7beb3e92a9a0cdb21d0c13f7a6047c77d97222532f46ba351dbf9d55ba27712c3fb85ab95a4a2600b1991c94e0f321ddd28c23b215a132262a9b6889680e031b27a85acdbec91c664576d363ecb0b42e72b65a4eb46f7021b326ccf34572c277fef8a99ecd3ac95ec789ab31a4c99ee043014ab155c36b77c9ab507e951048b5267f539f9a066776ae0ad43496d4eb5cd3e31aa07626e316ebb962f79eb9531ccc35abe3b3614c787830c455f0ee7d10073ba46e911e81bb\",\n    \n    \"bugDescription\": \"some bug description\",\n    \"bugTitle\": \"Header is not responsive\",\n    \"familySignature\": \"dummy family signature\",\n    \"repotedBy\": 1,\n    \"reporteeRoleType\": 1,\n    \"screenDensity\": \"376.57 ppi\",\n    \"screenResolution\": \"5120×2880\",\n    \"userActivityLogs\": {\"events\": {\"click\": \"Main screen\"}}}",
													"type": "text"
												}
											]
										},
										"url": "http://fiv2bug.transroadservices.com/api/v1/sdk/submit-bug"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 28 Sep 2022 12:29:21 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "55"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"37-YBidCFd5VlhzlEfBUB9I6W7TR98\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"message\": \"\\\"assignedTo\\\" is required\"\n}"
								},
								{
									"name": "Bad Request (400) empty token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "voiceNote",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP3_700KB.mp3"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-side.jpg",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-front.jpg",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/csvss.PNG"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/ui.PNG"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-back.jpg"
												},
												{
													"key": "videoAttachment",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP4_480_1_5MG.mp4",
													"disabled": true
												},
												{
													"key": "payload",
													"value": "{  \"token\":\"\",\n    \n    \"bugDescription\": \"some bug description\",\n    \"bugTitle\": \"Header is not responsive\",\n    \"familySignature\": \"dummy family signature\",\n    \"repotedBy\": 1,\n    \"reporteeRoleType\": 1,\n    \"screenDensity\": \"376.57 ppi\",\n    \"screenResolution\": \"5120×2880\",\n    \"userActivityLogs\": {\"events\": {\"click\": \"Main screen\"}}}",
													"type": "text"
												}
											]
										},
										"url": "http://fiv2bug.transroadservices.com/api/v1/sdk/submit-bug"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 28 Sep 2022 12:45:28 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"41-ZxziaUhPPh/uMm5rlPvAv7bUDfA\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"message\": \"\\\"token\\\" is not allowed to be empty\"\n}"
								},
								{
									"name": "Bad Request (400) No screenShots sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "voiceNote",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP3_700KB.mp3"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-side.jpg",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-front.jpg",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/csvss.PNG",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/ui.PNG",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-back.jpg",
													"disabled": true
												},
												{
													"key": "videoAttachment",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP4_480_1_5MG.mp4",
													"disabled": true
												},
												{
													"key": "payload",
													"value": "{  \"token\":\"\",\n    \n    \"bugDescription\": \"some bug description\",\n    \"bugTitle\": \"Header is not responsive\",\n    \"familySignature\": \"dummy family signature\",\n    \"repotedBy\": 1,\n    \"reporteeRoleType\": 1,\n    \"screenDensity\": \"376.57 ppi\",\n    \"screenResolution\": \"5120×2880\",\n    \"userActivityLogs\": {\"events\": {\"click\": \"Main screen\"}}}",
													"type": "text"
												}
											]
										},
										"url": "http://fiv2bug.transroadservices.com/api/v1/sdk/submit-bug"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 28 Sep 2022 12:48:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"34-WyoyU//JRHPbhQz59cMor5YXzz8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"message\": \"missing required params\"\n}"
								},
								{
									"name": "Bad Reques (400) missing payload param",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "voiceNote",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP3_700KB.mp3"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-side.jpg"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-front.jpg"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/csvss.PNG",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/ui.PNG",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-back.jpg",
													"disabled": true
												},
												{
													"key": "videoAttachment",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP4_480_1_5MG.mp4",
													"disabled": true
												},
												{
													"key": "payload",
													"value": "{  \"token\":\"\",\n    \n    \"bugDescription\": \"some bug description\",\n    \"bugTitle\": \"Header is not responsive\",\n    \"familySignature\": \"dummy family signature\",\n    \"repotedBy\": 1,\n    \"reporteeRoleType\": 1,\n    \"screenDensity\": \"376.57 ppi\",\n    \"screenResolution\": \"5120×2880\",\n    \"userActivityLogs\": {\"events\": {\"click\": \"Main screen\"}}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": "http://fiv2bug.transroadservices.com/api/v1/sdk/submit-bug"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 28 Sep 2022 12:49:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"34-WyoyU//JRHPbhQz59cMor5YXzz8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"message\": \"missing required params\"\n}"
								},
								{
									"name": "Success (200) plain text payload",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "voiceNote",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP3_700KB.mp3"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-back.jpg"
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": [],
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/csvss.PNG",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/ui.PNG",
													"disabled": true
												},
												{
													"key": "screenShots",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Pictures/car-back.jpg",
													"disabled": true
												},
												{
													"key": "videoAttachment",
													"type": "file",
													"src": "/C:/Users/O3 Interfaces/Downloads/file_example_MP4_480_1_5MG.mp4",
													"disabled": true
												},
												{
													"key": "payload",
													"value": "{ \n\"token\":\n\"6108e38c1cd1964ce5a4666a464bffd6:8216ea4db68825f01a90f860b6c72358af013431486caeb265399746dfd2df5be7b786b37c5df947d3ae8b971282c25b158af216c886662d8f7f8168f2cc54f7eb0875c4d8c8b1fb627c98ba5af7f6e5e10e87513f96d4e381f78784a7699840771177824f32feb237f78d9fc9653ae2f995a6001e78b1698212cf44957e0a620c4c791a061eb6138439b4698fa2d5ac7a1580cfa05c1d2b29f2f46923129212955719d1fa9edda1c9c88df630ddb89e9e38a961e5775e6a86f5eb385c9a39ea416fe66e49435e303b21d477e4abc42b27f6bd4ee08174a4c4f5f360d55069a7ec4820679510fe50d111d6f6644eab32ccacfb71c29884419fbc8193bda50368e55d60c9c8a054c078395f991da5b978c92526940b54af19a7e49395ff3881100cf7770e5303de84a8116e26516ce54fe4e125a3ff39d2b32095c79f366cbeccb1d0feae8c90a28072cea80d2b5b541eabdb3ce2d181d061a74976686b6cab2992952b266f8ae537eb56d1f7d0188ce2da0231c637cd73ab7beb3e92a9a0cdb21d0c13f7a6047c77d97222532f46ba351dbf9d55ba27712c3fb85ab95a4a2600b1991c94e0f321ddd28c23b215a132262a9b6889680e031b27a85acdbec91c664576d363ecb0b42e72b65a4eb46f7021b326ccf34572c277fef8a99ecd3ac95ec789ab31a4c99ee043014ab155c36b77c9ab507e951048b5267f539f9a066776ae0ad43496d4eb5cd3e31aa07626e316ebb962f79eb9531ccc35abe3b3614c787830c455f0ee7d10073ba46e911e81bb\",\n    \"reporteeName\": \"John Doe\", \n    \"reporteeEmail\": \"abc@mail.com\",\n    \"assignedTo\": 12,\n    \"bugDescription\": \"some bug description\", \n    \"bugTitle\": \"Header is not responsive\", \n    \"screenDensity\": \"376.57 ppi\", \n    \"screenResolution\": \"5120×2880\", \n    \"userActivityLogs\": {\"events\": {\"click\": \"Main screen\"}\n    },\n    \"isEmulator\": false,\n    \"isRooted\": false,\n    \"freeMemory\": \"1024 MBs\",\n    \"freeDiskMemory\": \"2048 MBs\",\n    \n    \"batteryLevel\": \"70%\",\n\"isOnBattery\": false,\n    \"appPermissions\": {\n        \"location\": true,\n        \"camera\": true,\n        \"microphone\": true,\n        \"GPS\": true,\n        \"Gallery\": false\n    }\n    \n}",
													"type": "text"
												}
											]
										},
										"url": "http://fiv2bug.transroadservices.com/api/v1/sdk/submit-bug"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Tue, 25 Oct 2022 07:55:47 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "35"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"23-VpggjTd+1TjuNBcPpRAlWgtDbPk\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Fetch Bug Reporter List",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJvSkxmV2FNamFkMmpXZjJEWG9EU0NWcjNJUHVkYlV5ZiIsImlhdCI6MTY3MjgwODI3NSwiZXhwIjoxNjc1NDAwMjc1fQ.Jws8OtbWYR5eT7cthgKd-oJ_ZKADYzH-0C_2cyH5L7g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n  \\\"bug_kuid\\\": \\\"{{bug_kuid}}\\\"\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-bugreporterlist"
							},
							"response": []
						},
						{
							"name": "Bulk Operations for Bugs",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n      \\\"list_of_issue\\\": [\\\"sNFJolRwNsrqmiJ4rdALYxePd5r3NOns\\\", \\\"B365ZAjwdkyNJA5ZKPea33UnSIQfIsxI\\\"],\\n     \\\"operation\\\": \\\"export\\\",\\r\\n          \\\"assignee_kuid\\\": \\\"\\\",\\r\\n      \\\"status_kuid\\\": \\\"\\\"\\r\\n     }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/bulk-operation-for-bug"
							},
							"response": []
						}
					]
				},
				{
					"name": "Crashing",
					"item": [
						{
							"name": "Crash Listing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"crash_kuid\", responseData.crashes_list[0].kuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"pg\\\": 0\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/crash-list"
							},
							"response": [
								{
									"name": "Crash Listing",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJFTWRRdm5ZTkFxQXRxV0owOU5wS3pnRlUyN01KaUhBVSIsImlhdCI6MTY3MzI2NTY1NSwiZXhwIjoxNjc1ODU3NjU1fQ.2q2q5K20yP1xyZ-RaKBsZ-3rW_fq7GC4DzkDPshEjrE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\r\\n        \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\r\\n        \\\"pg\\\": 0\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/crash-list"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Jan 2023 12:03:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "714"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2ca-S90WMiCluCezc23GBw1mD5kc7Xo\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJFTWRRdm5ZTkFxQXRxV0owOU5wS3pnRlUyN01KaUhBVSIsImlhdCI6MTY3MzI2NTY1NSwiZXhwIjoxNjc1ODU3NjU1fQ.2q2q5K20yP1xyZ-RaKBsZ-3rW_fq7GC4DzkDPshEjrE\",\n    \"crashes_list\": [\n        {\n            \"kuid\": \"277d4fd79df3eec68b3df1c817a238e2\",\n            \"crashTitle\": \"NSGenericException\",\n            \"hostAppVersion\": \"1.0\",\n            \"occurances\": 1,\n            \"affectedUsers\": 1,\n            \"resolutionStatusKuid\": \"0R6mxDMbSWXMTzPpF5lhZWLCwsxPJtEP\"\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"hostAppVersion\": \"1.0\",\n            \"occurances\": 7,\n            \"affectedUsers\": 2,\n            \"resolutionStatusKuid\": \"HBIkK7vfXzFr83DaSAlwtwqas9GF9keJ\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Crash Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"status_kuid\", responseData.filter[0].values[0].kuid);  \r",
											"\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n       }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-crash-filters",
								"description": "## Details:\n\n- This API is used to fetch Crash filters.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Crash Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n       }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-crash-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 24 Feb 2023 06:44:23 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "5510"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1586-5rkWjJnvPg+WurGhJoFdHWVjLY8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"filter\": [\n        {\n            \"label\": \"status\",\n            \"values\": [\n                {\n                    \"status\": \"in_progress\",\n                    \"kuid\": \"xyz2\"\n                },\n                {\n                    \"status\": \"todo\",\n                    \"kuid\": \"xyz1\"\n                }\n            ]\n        },\n        {\n            \"label\": \"assignee\",\n            \"values\": []\n        },\n        {\n            \"label\": \"version\",\n            \"values\": [\n                {\n                    \"env_hostAppVersion\": \"1.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"12\"\n                },\n                {\n                    \"env_hostAppVersion\": \"13\"\n                }\n            ]\n        },\n        {\n            \"label\": \"operating Sytem\",\n            \"values\": [\n                {\n                    \"env_deviceOS\": \"iOS 16.0\"\n                },\n                {\n                    \"env_deviceOS\": \"iOS 15.7\"\n                },\n                {\n                    \"env_deviceOS\": \"Google Pixel 2\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Reportee\",\n            \"values\": []\n        },\n        {\n            \"label\": \"Date\",\n            \"values\": [\n                {\n                    \"createdAt\": \"2022-12-05T07:14:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:16:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:18:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:23:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:19:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:19:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:30:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-13T06:50:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T13:33:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T07:21:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T05:47:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T06:34:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T06:38:02.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:01:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:03:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T12:59:38.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T05:54:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T06:16:03.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T08:00:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-26T07:23:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T07:58:21.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T09:51:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T11:36:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T06:53:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T10:15:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:37:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:37:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:39:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:42:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:45:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T07:29:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T05:58:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:44:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T09:24:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T10:32:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T13:08:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:31:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:54:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:59:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T06:07:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T07:22:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T07:23:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T09:42:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T09:43:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T06:16:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:05:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:07:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:09:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T11:10:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T11:12:31.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T12:04:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:20:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:20:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:21:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:21:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T06:55:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T07:43:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:42:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:42:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:43:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T05:52:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:30:48.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T10:39:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T10:41:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-09T09:40:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T05:16:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T05:42:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T06:54:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T09:36:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T10:38:13.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T04:58:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:23:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:24:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:27:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:29:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:38:19.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:49:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:10:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:25:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:20:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:25:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:32:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:57:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T09:12:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T11:35:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T11:54:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T05:04:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:09:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:20:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:40:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:53:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T12:51:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-15T07:00:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-15T12:24:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T05:23:40.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T07:14:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:54:14.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:31:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:43:25.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T06:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T06:32:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:05:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:11:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:30:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:34:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:56:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:49:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T10:07:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T13:16:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T13:18:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:16:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:16:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T10:47:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T11:15:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:12:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:15:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T11:25:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T05:34:32.000Z\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Crash Occuranc Breakdown By device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n    \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n            \\\"crash_kuid\\\": \\\"{{crash_kuid}}\\\",\\n     \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/crash-occurance-breakdown-by-device",
								"description": "## Details:\n\n- This API is used to fetch Crash Listing with unique Devices\n- Upon http status code 403, show a relevant message\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is fetching crashes` |\n| `project_kuid (string) (mandatory)` | `kuid of the project in which the logged in user is fetching crashes` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Crash Details View",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"crash_kuid\\\": \\\"{{crash_kuid}}\\\",\\r\\n       \\\"notification_kuid\\\": \\\"\\\"\\r\\n   }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/crash-details"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiI3UnRYSFVta29CaVlhS1RtaGFHMXVQTlVxOGFnRXBwRCIsImlhdCI6MTY3MDM5MDc3OSwiZXhwIjoxNjcyOTgyNzc5fQ.uzah3qYwLtkKz1u8F9jGiAyDA0zZhS3g1UahMFODV6Y",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\r\\n        \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\r\\n        \\\"crash_kuid\\\": \\\"41EQ1XzmXyH1SSLidj5bp3gw3x3lviRG\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/crash-details"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Dec 2022 05:35:30 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "7756"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1e4c-8c//D1BmSZSU4sSftflCLpd+daU\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiI3UnRYSFVta29CaVlhS1RtaGFHMXVQTlVxOGFnRXBwRCIsImlhdCI6MTY3MDM5MDc3OSwiZXhwIjoxNjcyOTgyNzc5fQ.uzah3qYwLtkKz1u8F9jGiAyDA0zZhS3g1UahMFODV6Y\",\n    \"crash_details\": [\n        {\n            \"sr\": 1,\n            \"kuid\": \"41EQ1XzmXyH1SSLidj5bp3gw3x3lviRG\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"hostAppVersion\": \"1.0\",\n            \"isSignedRelease\": 0,\n            \"deviceOS\": \"iOS 16.0\",\n            \"deviceModel\": \"iPhone XS Max\",\n            \"images\": \"1670224010292.jpg\",\n            \"reporteeName\": null,\n            \"reporteeEmail\": null,\n            \"deviceId\": \"1997F3F98F66468B95EDB0C86ECABC9E\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"isEmulator\": 0,\n            \"isRooted\": 0,\n            \"sdkVersionId\": \"1.0\",\n            \"userActivityLogs\": \"{\\\"events\\\":[{\\\"sessionId\\\":1,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"network_change\\\\\\\" : \\\\\\\"wifi\\\\\\\"\\\\n}\\\",\\\"timeStamp\\\":1670224010020,\\\"eventId\\\":18910050,\\\"eventType\\\":\\\"SYSTEM\\\"},{\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"controllerName\\\\\\\" : \\\\\\\"ViewController\\\\\\\",\\\\n  \\\\\\\"screenshotPath\\\\\\\" : \\\\\\\"1670224010292.jpg\\\\\\\"\\\\n}\\\",\\\"eventId\\\":18910050,\\\"eventType\\\":\\\"APP_JOURNEY\\\",\\\"sessionId\\\":1,\\\"timeStamp\\\":1670224011576},{\\\"eventType\\\":\\\"CRASH-LOG\\\",\\\"sessionId\\\":1,\\\"eventId\\\":18910050,\\\"timeStamp\\\":1670224022638,\\\"payLoad\\\":\\\"{\\\\n  \\\\\\\"stackTrace\\\\\\\" : \\\\\\\"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\\\\\\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\\\\\\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\\\\\\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\\\\\\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\\\\\\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\\\\\\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\\\\\\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\\\\\\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\\\\\\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\\\\\\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\\\\\\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\\\\\\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\\\\\\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\\\\\\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\\\\\\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\\\\\\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\\\\\\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\\\\\\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\\\\\\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\\\\\\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\\\\\\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\\\\\\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\\\\\\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\\\\\\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\\\\\\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\\\\\\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\\\\\\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\\\\\\\n28  HostApp                             0x0000000100b305f8 main + 28\\\\\\\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\\\\\\\",\\\\n  \\\\\\\"cause\\\\\\\" : \\\\\\\"NSInvalidArgumentException\\\\\\\"\\\\n}\\\"}]}\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Assignees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"assignee_kuid\", responseData.fetchMemberInfo[1].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/user-workspaces\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/owned/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/shared/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n  }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-assignees",
								"description": "## Details:\n\n- This API is used tosearch bugs.\n- Upon http status code 403, show a relevant message i.e. user does not have permission to create project in a specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n- NOTE: Make sure, among parameters: search_query, tags, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `title of the project` |\n| `search_query (string) (mandatory)` | `the text to be searched in bugs' title or description   (can be sent empty)` |\n| `tags (array) (mandatory)` | `array of tags ids   (can be sent empty array)` |\n| `assignees (array) (mandatory)` | `array of assignees' ids   (can be sent empty array)` |\n| `status (string) (mandatory)` | `resolution status of the bug i.e to_do, in-progress, done` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Assignees",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"fcvajsafwl4ifqisobn3wnqlciul3dnb\\\",\\n  \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-assignees"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Jan 2023 05:07:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "444"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1bc-82M9QYOoApZ565tdrxqM9VUU4Lw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"fcvajsafwl4ifqisobn3wnqlciul3dnb\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA\",\n    \"Assignees\": [\n        {\n            \"name\": \"Haris Nazir\",\n            \"kuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"avatar\": \"https://avatar.com\",\n            \"groupName\": \"iOS Engineering\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Bulk Operations for Crashes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"list_of_issue\\\": [\\\"{{crash_kuid}}\\\"],\\n     \\\"operation\\\": \\\"status\\\",\\r\\n          \\\"assignee_kuid\\\": \\\"\\\",\\r\\n      \\\"status_kuid\\\": \\\"{{inprogress}}\\\"\\r\\n     }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/bulk-operation-for-crash"
							},
							"response": []
						},
						{
							"name": "Search Crash",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//     \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n  \\\"search_query\\\": \\\"\\\",\\n        \\\"status\\\": \\\"\\\",\\n         \\\"version\\\": [],\\n  \\\"assignees\\\": [\\\"\\\"], \\\"pg\\\": 0 \\n}\"\r\n// }\r\n\r\n{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n  \\\"search_query\\\": \\\"\\\",\\n    \\\"version\\\": [\\\"\\\"],\\n      \\\"assignees\\\": [],\\n     \\\"status\\\": [\\\"{{status_kuid}}\\\"],\\n   \\\"pg\\\": 0\\r\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/search-crash",
								"description": "## Details:\n\n- This API is used tosearch bugs.\n- Upon http status code 403, show a relevant message i.e. user does not have permission to create project in a specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n- NOTE: Make sure, among parameters: search_query, tags, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `title of the project` |\n| `search_query (string) (mandatory)` | `the text to be searched in bugs' title or description (can be sent empty)` |\n| `version (array) (mandatory)` | `array of hostApp version (can be sent empty array)` |\n| `assignees (array) (mandatory)` | `array of assignees' ids (can be sent empty array)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Success (200) only search_query provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ3Z3FhV1lTemdQS29GWkQyWGtONjNieVlrYlNiZ3VURiIsImlhdCI6MTY3MjI1MjI5NiwiZXhwIjoxNjc0ODQ0Mjk2fQ.M_cH9Xcx24tY_uYMRWDXejw5LBg-CdKKk0l45PRAKuo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n  \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n  \\\"search_query\\\": \\\"error\\\",\\n  \\\"tags\\\": [],\\n  \\\"assignees\\\": [],\\n  \\\"status\\\": \\\"\\\",\\n  \\\"pg\\\": 0\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/search-bugs"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 28 Dec 2022 18:41:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "8456"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2108-CFa1sOlKzJpfdRBy4xQBNiyIzMc\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ3Z3FhV1lTemdQS29GWkQyWGtONjNieVlrYlNiZ3VURiIsImlhdCI6MTY3MjI1MjI5NiwiZXhwIjoxNjc0ODQ0Mjk2fQ.M_cH9Xcx24tY_uYMRWDXejw5LBg-CdKKk0l45PRAKuo\",\n    \"bugs\": [\n        {\n            \"kuid\": \"B365ZAjwdkyNJA5ZKPea33UnSIQfIsxI\",\n            \"bugTitle\": \"Testing Bug features \",\n            \"Description\": \"Testing bug reporting feature\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1669964452363.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"Resolved\",\n            \"statusType\": \"done\"\n        },\n        {\n            \"kuid\": \"qy9RbG7Z4iYfWdK7KONoqqTdGqobZnMq\",\n            \"bugTitle\": \"Sherry issye\",\n            \"Description\": \"Testing bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670324129878.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"SVsXxUmDgpgxKBPpywxaLa63n0X7hUYe\",\n            \"bugTitle\": \"Bugs \",\n            \"Description\": \"Bugss \\nBugss\\nBugss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670825419669.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"Z1wIiIHXW8pnlDUZWONHbLxeQeh7weWX\",\n            \"bugTitle\": \"My Bugs\",\n            \"Description\": \"Testing my bugs featureâ\\u0080¦.\\n\\nTesting my bugs featureâ\\u0080¦.\\n\\nTesting my bugs featureâ\\u0080¦.\",\n            \"tags\": null,\n            \"videoAttachments\": \"1670827433357.mp4\",\n            \"audioAttachments\": null,\n            \"images\": \"1670827433017.jpg,1670827433056.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"In Progress\",\n            \"statusType\": \"in_progress\"\n        },\n        {\n            \"kuid\": \"f8uQ4Y7IigUV7oYMKrV1L3Ydg7QXumSr\",\n            \"bugTitle\": \"My bugs 2\",\n            \"Description\": \"My bugs 2\\n\\nMy bugs 2\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1670828434945.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"In Progress\",\n            \"statusType\": \"in_progress\"\n        },\n        {\n            \"kuid\": \"cVJcUM02NpfwZLKfkPjyEUzs7aTINwxB\",\n            \"bugTitle\": \"bugg Test from app\",\n            \"Description\": \"Testing bug from fusion app\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1671013045528.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"7ZzFvRxlyWwV2xZHSBHVk9uIwxfS86X2\",\n            \"bugTitle\": \"Testing App bug\",\n            \"Description\": \"FusionUserDefaults.userEmail\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1671447255372.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"wsf4FXy1aHAnK0pQsNH5kb5TIxUumyO9\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228728884.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"n4EgHuMpftIuUU5o3vFg71OE34KmLpDD\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228732143.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"OEPFzUzy67N1f4UxQPx8o3oRUVFsSNXn\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228734752.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"Wqx8CcR6kky3T1QDehVvYUHtD8bHul5M\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228737469.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"2gpLedvJkoau9etRk9qzocs9pHb58Y1e\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228740713.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"X5BsBYNgyb0nftc60hw94VDE0lr9Ei4c\",\n            \"bugTitle\": \"Bugs\",\n            \"Description\": \"Bugs bugs bugs\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228743862.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"5RwLY3uVAGYPTuZ33JX0ksQ0bcXqoy7i\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228804853.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"DXauLU6KIOhTWKhWrqedR4ssjoTCXgap\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228808855.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"9pLxt0nY0j09Xr7rFw5u2xAScrQW71Gw\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228812166.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"8yx8Bdjuo8BR5acjPpk9njpKGvPxqPdo\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228815242.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"AnbangMew6rCOU4AFmV57mB1uD4IrKnq\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228819091.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"UbqFxl09om0l4H75Jz4iSADUmjSOgWh4\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228822577.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"EA0zpB9BGEHHVR9nVGdZ66cf0t978kQV\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228828267.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"DNiyUa1ze8DWZT4h8fRKdG2tOayUsAQ1\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228831467.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"kNpM8c6JsEApEbnK9oQPNB2C7jb1aCgD\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228834786.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"rtphWzuZREU0yvKXxuosV2sdcpTElg4j\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228838889.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        },\n        {\n            \"kuid\": \"W0hI92mvtaNFOJNPFuAdT1jtnIUwfnLW\",\n            \"bugTitle\": \"By Bugs\",\n            \"Description\": \"Bugs busssss\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1672228842347.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"assigneeName\": null,\n            \"assigneeEmail\": null,\n            \"assigneeKuid\": null,\n            \"statusName\": \"To Do\",\n            \"statusType\": \"todo\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Crash Assignee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n       \\\"crash_kuid\\\": \\\"{{crash_kuid}}\\\",\\r\\n        \\\"assignee_kuid\\\": \\\"{{assignee_kuid}}\\\"\\r\\n    }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-crash-assignee",
								"description": "## Details:\n\n- API is used to update Crash Assignee\n- Upon http status code 400 Records not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `crash_kuid (string) (mandatory)` | `kuid of the crash` |\n| `assignee_kuid (string) (mandatory)` | `assignee_kuid of the crash` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Update Crash Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n  \\\"crash_kuid\\\": \\\"{{crash_kuid}}\\\",\\n  \\\"status_kuid\\\": \\\"{{status_kuid}}\\\"\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-crash-status",
								"description": "## Details:\n\n- API is used update Crash Status\n- Upon http status code 400 Records not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `crash_kuid (string) (mandatory)` | `Kuid of the crash` |\n| `status_kuid (array) (mandatory)` | `status_kuid of the crash` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Fetch Crash Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n       }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-crash-filters",
								"description": "## Details:\n\n- This API is used to fetch Crash filters.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Crash Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n       }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-crash-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 24 Feb 2023 06:44:23 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "5510"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1586-5rkWjJnvPg+WurGhJoFdHWVjLY8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"filter\": [\n        {\n            \"label\": \"status\",\n            \"values\": [\n                {\n                    \"status\": \"in_progress\",\n                    \"kuid\": \"xyz2\"\n                },\n                {\n                    \"status\": \"todo\",\n                    \"kuid\": \"xyz1\"\n                }\n            ]\n        },\n        {\n            \"label\": \"assignee\",\n            \"values\": []\n        },\n        {\n            \"label\": \"version\",\n            \"values\": [\n                {\n                    \"env_hostAppVersion\": \"1.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"12\"\n                },\n                {\n                    \"env_hostAppVersion\": \"13\"\n                }\n            ]\n        },\n        {\n            \"label\": \"operating Sytem\",\n            \"values\": [\n                {\n                    \"env_deviceOS\": \"iOS 16.0\"\n                },\n                {\n                    \"env_deviceOS\": \"iOS 15.7\"\n                },\n                {\n                    \"env_deviceOS\": \"Google Pixel 2\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Reportee\",\n            \"values\": []\n        },\n        {\n            \"label\": \"Date\",\n            \"values\": [\n                {\n                    \"createdAt\": \"2022-12-05T07:14:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:16:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:18:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:23:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:19:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:19:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:30:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-13T06:50:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T13:33:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T07:21:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T05:47:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T06:34:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T06:38:02.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:01:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:03:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T12:59:38.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T05:54:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T06:16:03.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T08:00:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-26T07:23:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T07:58:21.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T09:51:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T11:36:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T06:53:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T10:15:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:37:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:37:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:39:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:42:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:45:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T07:29:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T05:58:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:44:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T09:24:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T10:32:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T13:08:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:31:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:54:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:59:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T06:07:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T07:22:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T07:23:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T09:42:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T09:43:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T06:16:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:05:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:07:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:09:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T11:10:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T11:12:31.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T12:04:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:20:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:20:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:21:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:21:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T06:55:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T07:43:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:42:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:42:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:43:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T05:52:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:30:48.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T10:39:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T10:41:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-09T09:40:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T05:16:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T05:42:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T06:54:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T09:36:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T10:38:13.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T04:58:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:23:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:24:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:27:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:29:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:38:19.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:49:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:10:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:25:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:20:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:25:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:32:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:57:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T09:12:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T11:35:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T11:54:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T05:04:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:09:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:20:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:40:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:53:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T12:51:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-15T07:00:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-15T12:24:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T05:23:40.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T07:14:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:54:14.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:31:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:43:25.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T06:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T06:32:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:05:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:11:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:30:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:34:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:56:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:49:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T10:07:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T13:16:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T13:18:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:16:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:16:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T10:47:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T11:15:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:12:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:15:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T11:25:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T05:34:32.000Z\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Apply Crash Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [\\\"\\\"],\\n       \\\"device_ids\\\": [\\\"\\\"],\\n         \\\"version\\\": [],\\n       \\\"label\\\": \\\"\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/apply-crash-filters",
								"description": "## Details:\n\n- This API is used to apply crash filters.\n- NOTE: Make sure, among parameters: label, operating_system, version, reporter, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is searching crash` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `label (string) (optional)` | `the text to be searched in crash' title (can be sent empty)` |\n| `version (array) (optiona)` | `version of the crash (can be sent empty array)` |\n| `assignees (array) (optional)` | `array of assignees' ids (can be sent empty array)` |\n| `status (array) (optional)` | `resolution status of the crash i.e to_do, in-progress, done` |\n| `operating_system (string) (optional)` | `os of device (can be sent empty array)` |\n| `date (string) (optional)` | `date of the crash (can be sent empty array)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Apply Crash Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"NSInvalidArgumentException\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/apply-crash-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 10:09:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "37666"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"9322-CBrxYjegfKGDUgNR+9qyAUy0usI\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJyMldzYnJiNFhFT2R6akRMZFNZVEZ1SWxaYmowTWlpayIsImlhdCI6MTY3NzA1OTEyNiwiZXhwIjoxNjc5NjUxMTI2fQ.j6xfPEdwqApvkO95V9dH-oW335bNK2mCFmx803BVWdM\",\n    \"total\": \"11\",\n    \"bugs_list\": [\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x000000018e77e254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x0000000187b4ba68 objc_exception_throw + 60\\n2   CoreFoundation                      0x000000018e8f23f0 42C5C917-0447-3995-B50F-DE4D132C2435 + 1565680\\n3   UIKitCore                           0x0000000191647c50 7B942FA4-CB76-3375-9972-F58C14492FB4 + 13917264\\n4   CoreFoundation                      0x000000018e794360 42C5C917-0447-3995-B50F-DE4D132C2435 + 131936\\n5   CoreFoundation                      0x000000018e7fc660 _CF_forwarding_prep_0 + 96\\n6   FusionInspect                       0x00000001039bd9f4 $s13FusionInspect11OverlayViewC4copy4withyp10ObjectiveC6NSZoneVSg_tF + 260\\n7   FusionInspect                       0x00000001039bdc28 $s13FusionInspect11OverlayViewC4copy4withyp10ObjectiveC6NSZoneVSg_tFTo + 52\\n8   FusionInspect                       0x00000001039b7d8c $s13FusionInspect10CanvasViewC09duplicateD0yyF + 408\\n9   FusionInspect                       0x0000000103a51218 $s13FusionInspect19ImageEditControllerC9bindViewsyyFyycfU5_ + 212\\n10  FusionInspect                       0x00000001039501e0 $s13FusionInspect14DeleteItemViewC04bindE033_B442BC6ECF297C93E48D94B1A19F3A49LLyyFyycfU0_ + 140\\n11  FusionInspect                       0x000000010394a450 $s13FusionInspect25CustomButtonTextWithImageC13didTappedViewyyF + 124\\n12  FusionInspect                       0x000000010394a49c $s13FusionInspect25CustomButtonTextWithImageC13didTappedViewyyFTo + 36\\n13  UIKitCore                           0x00000001909c1164 7B942FA4-CB76-3375-9972-F58C14492FB4 + 782692\\n14  UIKitCore                           0x0000000190d2edfc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4378108\\n15  UIKitCore                           0x0000000190aa8b94 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1731476\\n16  UIKitCore                           0x00000001909891dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 553436\\n17  UIKitCore                           0x0000000190a35358 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1258328\\n18  UIKitCore                           0x00000001912b61d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 10174936\\n19  UIKitCore                           0x00000001909f9d18 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1015064\\n20  UIKitCore                           0x00000001909fe674 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033844\\n21  UIKitCore                           0x00000001909fd944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n22  UIKit                               0x00000002130e66bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n23  UIKitCore                           0x00000001909fd000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n24  UIKitCore                           0x0000000190a44d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n25  UIKitCore                           0x0000000190d4d4dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n26  CoreFoundation                      0x000000018e84a22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n27  CoreFoundation                      0x000000018e856614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n28  CoreFoundation                      0x000000018e7da51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n29  CoreFoundation                      0x000000018e7efeb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n30  CoreFoundation                      0x000000018e7f51e4 CFRunLoopRunSpecific + 612\\n31  GraphicsServices                    0x00000001c7615368 GSEventRunModal + 164\\n32  UIKitCore                           0x0000000190ca4d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n33  UIKitCore                           0x0000000190ca49ec UIApplicationMain + 340\\n34  libswiftUIKit.dylib                 0x00000001971542a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n35  HostApp                             0x0000000102d58194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n36  HostApp                             0x0000000102d5811c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n37  HostApp                             0x0000000102d58218 main + 28\\n38  dyld                                0x00000001acb19948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1675752493973.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x000000018e77e254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x0000000187b4ba68 objc_exception_throw + 60\\n2   CoreFoundation                      0x000000018e8ea338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001018c6928 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 576\\n4   FusionInspect                       0x00000001018c6af0 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x0000000190b516d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x0000000190b513d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x0000000190b50d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x0000000190b50c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x0000000190b50848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001909ff268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001909fe684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001909fd944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x00000002130e66bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001909fd000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x0000000190a44d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x0000000190d4d4dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x000000018e84a22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x000000018e856614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x000000018e7da51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x000000018e7efeb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x000000018e7f51e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001c7615368 GSEventRunModal + 164\\n23  UIKitCore                           0x0000000190ca4d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x0000000190ca49ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001971542a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100e58194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100e5811c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100e58218 main + 28\\n29  dyld                                0x00000001acb19948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1675761209983.jpg,1675761218427.jpg,1675761220068.jpg,1675761385608.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x000000018e77e254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x0000000187b4ba68 objc_exception_throw + 60\\n2   CoreFoundation                      0x000000018e8ea338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001018c6928 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 576\\n4   FusionInspect                       0x00000001018c6af0 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x0000000190b516d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x0000000190b513d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x0000000190b50d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x0000000190b50c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x0000000190b50848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001909ff268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001909fe684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001909fd944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x00000002130e66bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001909fd000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x0000000190a44d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x0000000190d4d4dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x000000018e84a22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x000000018e856614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x000000018e7da51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x000000018e7efeb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x000000018e7f51e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001c7615368 GSEventRunModal + 164\\n23  UIKitCore                           0x0000000190ca4d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x0000000190ca49ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001971542a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100e58194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100e5811c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100e58218 main + 28\\n29  dyld                                0x00000001acb19948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1675761385608.jpg,1675761220068.jpg,1675761218427.jpg,1675761209983.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001d231a254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x00000001cb6e7a68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001d2486338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x0000000100c2dbe0 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 576\\n4   FusionInspect                       0x0000000100c2dda8 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001d46ed6d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001d46ed3d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001d46ecd6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001d46ecc10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001d46ec848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001d459b268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001d459a684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001d4599944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000256c826bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001d4599000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001d45e0d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001d48e94dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001d23e622c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001d23f2614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001d237651c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001d238beb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001d23911e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x000000020b1b1368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001d4840d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001d48409ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001dacf02a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x00000001007e4194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x00000001007e411c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x00000001007e4218 main + 28\\n29  dyld                                0x00000001f06b5948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1676531215102.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001031f9b0c $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001031f9bb8 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x000000010278c574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x000000010278c4fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x000000010278c5f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224935168.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x00000001043a2534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x00000001043a2584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010416992c HostApp + 22828\\n26  dyld                                0x00000001042e44d0 start + 444\",\n            \"images\": \"1670310358214.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102c1a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102c1a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010293d92c HostApp + 22828\\n26  dyld                                0x0000000102b5c4d0 start + 444\",\n            \"images\": \"1670311173321.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102f6a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102f6a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x0000000102cf992c HostApp + 22828\\n26  dyld                                0x0000000102dac4d0 start + 444\",\n            \"images\": \"1670311186348.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Crash Search By Device Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n         \\\"device_id\\\": \\\"{{deviceId}}\\\",\\n        \\\"pg\\\": 0\\r\\n   }\" \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/crash/search-by-device-id"
							},
							"response": [
								{
									"name": "Apply Crash Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"NSInvalidArgumentException\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/apply-crash-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "23097"
										},
										{
											"key": "ETag",
											"value": "W/\"5a39-Ot6Hnj7GVXkPVBpWUTsvtpWNbSI\""
										},
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 05:58:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJMaGE1emN2UjNJc2NzUlFtZWl0TzYyTzdXTm5YZ1d1NyIsImlhdCI6MTY3Njg5ODQwMCwiZXhwIjoxNjc5NDkwNDAwfQ.4ez15TNoOV_dmFr4jQjAUa4lDk-plJxAR66vhA3H9aA\",\n    \"total\": \"7\",\n    \"bugs_list\": [\n        {\n            \"kuid\": \"41EQ1XzmXyH1SSLidj5bp3gw3x3lviRG\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"PJtl2raly6S8Fxc8sZuGVCI9RsRBYPfK\",\n            \"assigneeKuid\": \"9ad3603d26814360ab333b31646d1c69\",\n            \"fullName\": \"O3 Dev Lab\",\n            \"avatar\": \"url\"\n        },\n        {\n            \"kuid\": \"d1sq1NCXpSpma7lVYPQSoT09w56bF9JV\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"3j3w5WUeBSIpmAXjYe3DoRjyD8r5M2SZ\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"EE5MY6ituiLK21C74I7i1dXWjLq19fon\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"15Vn4ggDTXqWYspubnj7Y4du92pLMADk\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"4tJRk8Ob8JKuWaJoXF19KgLYzmzbfE7L\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001031f9b0c $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001031f9bb8 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x000000010278c574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x000000010278c4fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x000000010278c5f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224935168.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"F99n7W3iveHYnllDfz2xtfzmhw4YfAIu\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"bA971JRwBYhE31mvU8sbV04x6o6HeREJ\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x00000001043a2534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x00000001043a2584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010416992c HostApp + 22828\\n26  dyld                                0x00000001042e44d0 start + 444\",\n            \"images\": \"1670310358214.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"giAC52ru6xsz77oAGeOprZttyKadwQOu\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"Sj8QQTUGXV3nOc1SWhCCQ1c4TRqW4oLl\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102c1a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102c1a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010293d92c HostApp + 22828\\n26  dyld                                0x0000000102b5c4d0 start + 444\",\n            \"images\": \"1670311173321.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"Js2M21EHYBwhSXWwNYc1A7J6aeZ2Dpno\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"vNnTHeHAPKNjikIegJP8IeC66zPCRixE\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102f6a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102f6a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x0000000102cf992c HostApp + 22828\\n26  dyld                                0x0000000102dac4d0 start + 444\",\n            \"images\": \"1670311186348.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"hc96qUvUec4bkXu8iTevtJ70EwiXHHMZ\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Console Logs for Crashes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n       \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n    \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n       }\"\r\n}\r\n   ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-crahes-console-logs",
								"description": "## Details:\n\n| **Parameters** | **Data type** | **Notes** |\n| --- | --- | --- |\n| `workspace_kuid (required)` | `string` | `kuid of the current workspace` |\n| `project_kuid (required)` | `string` | `kuid of the current project` |\n\n### Expected Response:\n\n``` json\n{\n    \"status\": true  | false,\n    \"notifications\": [\n     { \n        \"triggeringSource\": \"---\",\n        \"sourceType\": \"---\",\n        \"sourceIssueKuid\": \"---\",\n        \"authorName\": \"---\",\n        \"isRead\": 0 | 1,\n        \"activityTime\": \"DateTime\"\n     }\n     ...\n    ]\n}\n\n```"
							},
							"response": []
						},
						{
							"name": "Delete Crash",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"crash_kuid\\\": \\\"{{crash_kuid}}\\\",\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-crash",
								"description": "## Details:\n\n- This API is used to delete a specific crash.\n- Upon http status code 400, show a relevant message i.e. Crash not found\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is deleting crash` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `crash_kuid (string) (mandatory)` | `kuid of the crash` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						}
					]
				},
				{
					"name": "Rating Engine",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Setup Feedback Engine",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n  \\\"unhappy_threshold\\\": 5,\\r\\n  \\\"known_issues_list\\\": [\\\"ABC\\\",\\\"def\\\"],\\n    \\\"allow_custom_input\\\": 0,\\r\\n     \\\"should_happy_rate\\\": 1,\\r\\n   \\\"rating_page_url\\\": \\\"XYZ\\\",\\n   \\\"display_on_regular_schedule_n\\\":  1,\\r\\n   \\\"n_regular_app_launches\\\":  0,\\r\\n    \\\"display_on_release_schedule_n\\\":  0,\\r\\n     \\\"n_new_release_launches\\\":  0,\\r\\n           \\\"frequencyForUnhappyCustomers_inMonths\\\": 0,\\n       \\\"frequencyForHappyCustomers_inMonths\\\": 0,\\n       \\\"template_kuid\\\": \\\"\\\",\\n    \\\"is_active\\\": 0\\r\\n}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/setup-feedback-engine",
								"description": "## Details:\n\n- This API is used to setup feecback Engine and also used to update feedback.\n- if feedback already exist in the database then this api will update the feedback with the given template_kuid\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `unhappy_threshold (number) (mandatory)` | `uphappy_threshold is a number from 1-5` |\n| `known_issues_list (array) (optional)` | `known_issues_list is an array of string (can be sent empty array)` |\n| `allow_custom_input (number) (mandatory)` | `allow_custom_input is a number (0,1)` |\n| `should_happy_rate (number) (mandatory)` | `should_happy_rate is a number (0,1)` |\n| `rating_page_url(string) (optional)` | `rating_page_url is a string and can be send epmty` |\n| `display_on_regular_schedule_n (number) (mandatory)` | `display_on_regular_schedule_n is a number (0,1)` |\n| `n_regular_app_launches(number) (mandatory)` | `n_regular_app_launchesis a number` |\n| `display_on_release_schedule_n (number) (mandatory)` | `display_on_release_schedule_n is a number (0,1)` |\n| `n_new_release_launches(number) (mandatory)` | `n_new_release_launchesa number` |\n| `is_active (number) (mandatory)` | `is_active is a number (0,1)` |\n| `template_kuid` `(string) (optional)` | `kuid of the customer feedback` |\n| `frequencyForHappyCustomers_inMonths (number) (mandatory)` | `frequency For Happy Customers in Months` |\n| `frequencyForUnhappyCustomers_inMonths (number) (mandatory)` | `frequency For Unhappy Customers in Months` |\n\n> `IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API.`"
							},
							"response": [
								{
									"name": "Setup Feedback Engine",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"project_kuid\\\": \\\"slTgaGL9PgynDzO9tlUdZ4fQX98uGW2B\\\",\\n  \\\"unhappy_threshold\\\": 5,\\r\\n  \\\"known_issues_list\\\": [\\\"ABC\\\",\\\"def\\\"],\\n    \\\"allow_custom_input\\\": 0,\\r\\n     \\\"should_happy_rate\\\": 1,\\r\\n   \\\"rating_page_url\\\": \\\"XYZ\\\",\\n   \\\"display_on_regular_schedule_n\\\":  1,\\r\\n   \\\"n_regular_app_launches\\\":  0,\\r\\n    \\\"display_on_release_schedule_n\\\":  0,\\r\\n     \\\"n_new_release_launches\\\":  0,\\r\\n   \\\"is_active\\\": 0\\r\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/setup-feedback-engine"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 05:48:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"5d-DPkKbBogHB65LJeT3nYvKktBPVs\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully Submited\"\n    }\n}"
								}
							]
						},
						{
							"name": "Feedback Engine Toggle",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n   \\\"de_activate\\\": 0\\r\\n}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/feedback-engine-toggle",
								"description": "## Details:\n\n- This API is used to enable or disable feedback.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `de_activate (number) (mandatory)` | `de_activate is a number (0,1)` |\n\n> IMPORTANT: This API does not require any token. But on a successful OTP verification, it issues a token which is used in further APIs (i.e. APIs called after sign in)"
							},
							"response": [
								{
									"name": "Disable Feedback Engine",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n   \\\"de_activate\\\": 0\\r\\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/disable-feedback-engine"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 05:51:41 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"5d-bUYZrzx7cu79ODTqZPb1lJ3+XmQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully disabled\"\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Users Feedback",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n          \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n             \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n   }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-users-feedback",
								"description": "## Details:\n\n- This API is used to fetch Users Feedback.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: This API does not require any token. But on a successful OTP verification, it issues a token which is used in further APIs (i.e. APIs called after sign in)"
							},
							"response": [
								{
									"name": "Fetch Users Feecback",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"04fa0956a9cd4e37b3fd99964dc4c3c6\\\",\\n           \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-users-feedback"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 10:33:35 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "612"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"264-U0bmidHXpuYneFVxJCKy6ejC4W8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"avgRating\": \"4.0000\",\n    \"usersFeedback\": [\n        {\n            \"comments\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque viverra viverra condimentum.\",\n            \"customerRating\": 4,\n            \"deviceModel\": \"iphone 12 pro\",\n            \"hostAppVersion\": \"1.0\"\n        },\n        {\n            \"comments\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque viverra viverra condimentum.\",\n            \"customerRating\": 5,\n            \"deviceModel\": \"iphone 12 pro\",\n            \"hostAppVersion\": \"1.0\"\n        },\n        {\n            \"comments\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque viverra viverra condimentum.\",\n            \"customerRating\": 3,\n            \"deviceModel\": \"iphone 12 pro\",\n            \"hostAppVersion\": \"1.0\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Feedback Grap",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n        \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n     \\\"interval\\\": \\\"7\\\"\\r\\n }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/feedback-graph"
							},
							"response": []
						},
						{
							"name": "Fetch Rating",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n             \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-rating"
							},
							"response": []
						}
					]
				},
				{
					"name": "ForceUpdate",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Set Release Force update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n    \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n   \\\"update_type\\\": \\\"optional\\\",\\n     \\\"template_kuid\\\": \\\"\\\",\\n       \\\"message_title\\\": \\\"test1\\\",\\n  \\\"message_body\\\": \\\"This message body is dummy\\\",\\n     \\\"positive_cta\\\": \\\"12\\\",\\n       \\\"negative_cta\\\": \\\"-5\\\",\\n          \\\"store_url\\\": \\\"abc\\\",\\n          \\\"release_kuid\\\": [\\\"{{sdk_KUID}}\\\"]\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/set-rlease-force-update",
								"description": "## Details:\n\n- This API is used to set up release force update;.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `update_type (string) (optional)` | `updateType (Optional or mandatory)` |\n| `message_title (string) (mandatory)` | `message title of the version` |\n| `message_body (string) (mandatory)` | `message body of the version` |\n| `positive_cta (string) (mandatory)` | `positiveCTA of the version` |\n| `negative_cta (string) (mandatory)` | `negativeCTA of the version` |\n| `release_kuid (string) (mandatory)` | `kuid of the version release` |\n| `template_kuid (string) (mandatory)` | `template_kuid of the release` |\n\n> IMPORTANT: This API does not require any token. But on a successful OTP verification, it issues a token which is used in further APIs (i.e. APIs called after sign in)"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n    \\\"project_kuid\\\": \\\"a1b2c3\\\",\\n   \\\"update_type\\\": \\\"optional\\\",\\n     \\\"template_kuid\\\": \\\"1\\\",\\n       \\\"message_title\\\": \\\"test1\\\",\\n  \\\"message_body\\\": \\\"This message body is dummy\\\",\\n   \\\"positive_cta\\\": \\\"12\\\",\\n       \\\"negative_cta\\\": \\\"-5\\\",\\n          \\\"release_kuid\\\": \\\"1\\\"\\n }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/set-rlease-force-update"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-yaSDGWeJgwdlnvOnad1o34MLRsQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 06 Mar 2023 06:00:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully Updated\"\n    }\n}"
								}
							]
						},
						{
							"name": "Force Update Message Listing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n  }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/force-update-message-listing",
								"description": "## Details:\n\n- This API is used to fetch release details.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: This API does not require any token. But on a successful OTP verification, it issues a token which is used in further APIs (i.e. APIs called after sign in)"
							},
							"response": [
								{
									"name": "Force Update Message Listing",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"project_kuid\\\": \\\"02a21b00fb5d49ff9b11c9f4a92f3017\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/force-update-message-listing"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 05:53:35 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "46"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2e-nbOEDIn0Fu5Px+hTvCYkYATC4/0\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"forceUpdateMessageListing\": []\n}"
								}
							]
						},
						{
							"name": "Fetch Versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if(pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sdk_KUID\", responseData.Versions[0].kuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n   }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-version"
							},
							"response": [
								{
									"name": "Fetch Versions",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-version"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 06:11:13 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "630"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"276-GBNmwG7BBtHcgZI6eIwymTPpgts\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"Versions\": [\n        {\n            \"kuid\": \"2yjZUs3zdApozCFWsAKdREc4VcbHNxEX\",\n            \"version\": \"1.0.0\"\n        },\n        {\n            \"kuid\": \"r0U9w1EPrTLb5pYELkTeTU4Hg2DlF9D9\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"kuid\": \"sSQpz4aF5xrWODFmIPF3dR5h92Bm4lML\",\n            \"version\": \"3.0.0\"\n        },\n        {\n            \"kuid\": \"tQ9O3uEzi07WRqebX4ZphxQm7wdgSZLu\",\n            \"version\": \"1.2.3\"\n        },\n        {\n            \"kuid\": \"O76WH8vbYsGjQfJDXcacEqTvbunaCE3Z\",\n            \"version\": \"0.0.1\"\n        },\n        {\n            \"kuid\": \"jwOAjjVKPJNYZahtq9bBzs318jcSM33P\",\n            \"version\": \"12\"\n        },\n        {\n            \"kuid\": \"4x9CKHLIXFRbpKl28De3I7xlDpvEsVUF\",\n            \"version\": \"9\"\n        },\n        {\n            \"kuid\": \"Az4PFRCgwHZSVqOIGyoWLHjBaOMfxurW\",\n            \"version\": \"13\"\n        },\n        {\n            \"kuid\": \"7PLJJhCJJmPggQg5yjhTVRCRsOIMjKXb\",\n            \"version\": \"14\"\n        },\n        {\n            \"kuid\": \"Y3YtPQBqGjlamBFB3srNESyba0DbfprB\",\n            \"version\": \"10\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add Release Note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"release_kuid\\\": \\\"{{sdk_KUID}}\\\",\\r\\n                \\\"releaseNote\\\": \\\"abc.\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/add-sdk-release-note"
							},
							"response": [
								{
									"name": "Fetch Versions",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-version"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 06:11:13 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "630"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"276-GBNmwG7BBtHcgZI6eIwymTPpgts\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"Versions\": [\n        {\n            \"kuid\": \"2yjZUs3zdApozCFWsAKdREc4VcbHNxEX\",\n            \"version\": \"1.0.0\"\n        },\n        {\n            \"kuid\": \"r0U9w1EPrTLb5pYELkTeTU4Hg2DlF9D9\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"kuid\": \"sSQpz4aF5xrWODFmIPF3dR5h92Bm4lML\",\n            \"version\": \"3.0.0\"\n        },\n        {\n            \"kuid\": \"tQ9O3uEzi07WRqebX4ZphxQm7wdgSZLu\",\n            \"version\": \"1.2.3\"\n        },\n        {\n            \"kuid\": \"O76WH8vbYsGjQfJDXcacEqTvbunaCE3Z\",\n            \"version\": \"0.0.1\"\n        },\n        {\n            \"kuid\": \"jwOAjjVKPJNYZahtq9bBzs318jcSM33P\",\n            \"version\": \"12\"\n        },\n        {\n            \"kuid\": \"4x9CKHLIXFRbpKl28De3I7xlDpvEsVUF\",\n            \"version\": \"9\"\n        },\n        {\n            \"kuid\": \"Az4PFRCgwHZSVqOIGyoWLHjBaOMfxurW\",\n            \"version\": \"13\"\n        },\n        {\n            \"kuid\": \"7PLJJhCJJmPggQg5yjhTVRCRsOIMjKXb\",\n            \"version\": \"14\"\n        },\n        {\n            \"kuid\": \"Y3YtPQBqGjlamBFB3srNESyba0DbfprB\",\n            \"version\": \"10\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Release Note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"release_kuid\\\": \\\"{{sdk_KUID}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-sdk-release-note",
								"description": "## Details:\n\n- This API is used to fetch releases note\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `release_kuid (string) (mandatory)` | `release_kuid in which you want to fetch release note` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to fetch releases note` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "SDK Monitoring Disable",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n    \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n        \\\"release_kuid\\\": \\\"{{sdk_KUID}}\\\",\\n        \\\"sdk_monitoring\\\": 0\\n    }\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/sdk-monitoring",
								"description": "## Details:\n\nThis API is used for enable/disable sdk\n\nIf release_kuid will be empty then sdk will enable/disable at project lavel\n\n| **Parameters** | **Data type** | **Notes** |\n| --- | --- | --- |\n| `release_kuid (required) (can be empty)` | `string` | `kuid of the release that you want to disable` |\n| `project_kuid (required)` | `string` | `kuid of the current project` |\n| `workspace_kuid (required)` | `(string)` | `kuid of the workspace` |\n| `sdk_monitoring (required)` | `number` | `0 for disable sdk and 1 for enable sdk` |\n\n### Expected Response:"
							},
							"response": []
						},
						{
							"name": "Update Releases",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/user-workspaces`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/owned/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: `${pm.collectionVariables.get(\"app_web_services_endpoint\")}/workspace/shared/project-list`,\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n       \\\"release_kuid\\\": \\\"{{sdk_KUID}}\\\",\\n    \\\"bug_reporting\\\": 1,\\n        \\\"crash_reporting\\\": 1\\n    }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-releases",
								"description": "## Details:\n\n| **Parameters** | **Data type** | **Notes** |\n| --- | --- | --- |\n| `workspace_kuid (required)` | `string` | `kuid of the current workspace` |\n| `project_kuid (required)` | `string` | `kuid of the current project` |\n\n### Expected Response:\n\n``` json\n{\n    \"status\": true  | false,\n    \"notifications\": [\n     { \n        \"triggeringSource\": \"---\",\n        \"sourceType\": \"---\",\n        \"sourceIssueKuid\": \"---\",\n        \"authorName\": \"---\",\n        \"isRead\": 0 | 1,\n        \"activityTime\": \"DateTime\"\n     }\n     ...\n    ]\n}\n\n```"
							},
							"response": []
						},
						{
							"name": "Force Update Disable",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n      \\\"release_kuid\\\": \\\"{{sdk_KUID}}\\\"\\n}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/force-update-disable",
								"description": "## Details:\n\n- This API is used to update the version details.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `update_type (string) (optional)` | `updateType (Optional or mandatory)` |\n| `message_title (string) (mandatory)` | `message title of the version` |\n| `message_body (string) (mandatory)` | `message body of the version` |\n| `positive_cta (string) (mandatory)` | `positiveCTA of the version` |\n| `negative_cta (string) (mandatory)` | `negativeCTA of the version` |\n| `message_kuid (string) (mandatory)` | `kuid of the message` |\n\n> IMPORTANT: This API does not require any token. But on a successful OTP verification, it issues a token which is used in further APIs (i.e. APIs called after sign in)"
							},
							"response": [
								{
									"name": "Force Update Message Template",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"message_kuid\\\": \\\"ht4xVM2kIj19F8Qcqo9pah7CaxU6snBI\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n   \\\"update_type\\\": \\\"mandatory\\\",\\n   \\\"message_title\\\": \\\"Test2\\\",\\n  \\\"message_body\\\": \\\"updated message body\\\",\\n   \\\"positiveCTA\\\": \\\"55\\\",\\n     \\\"negativeCTA\\\": \\\"-88\\\"\\n}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/force-update-message-template"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 06:10:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-gfnvhuRrqG3E167+l/nWwYA4vBE\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully updated\"\n    }\n}"
								}
							]
						},
						{
							"name": "Is SDK Integrated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/is-sdk-integrated/{{project_kuid}}"
							},
							"response": [
								{
									"name": "Fetch Versions",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n   \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-version"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 08 Mar 2023 06:11:13 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "630"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"276-GBNmwG7BBtHcgZI6eIwymTPpgts\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"Versions\": [\n        {\n            \"kuid\": \"2yjZUs3zdApozCFWsAKdREc4VcbHNxEX\",\n            \"version\": \"1.0.0\"\n        },\n        {\n            \"kuid\": \"r0U9w1EPrTLb5pYELkTeTU4Hg2DlF9D9\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"kuid\": \"sSQpz4aF5xrWODFmIPF3dR5h92Bm4lML\",\n            \"version\": \"3.0.0\"\n        },\n        {\n            \"kuid\": \"tQ9O3uEzi07WRqebX4ZphxQm7wdgSZLu\",\n            \"version\": \"1.2.3\"\n        },\n        {\n            \"kuid\": \"O76WH8vbYsGjQfJDXcacEqTvbunaCE3Z\",\n            \"version\": \"0.0.1\"\n        },\n        {\n            \"kuid\": \"jwOAjjVKPJNYZahtq9bBzs318jcSM33P\",\n            \"version\": \"12\"\n        },\n        {\n            \"kuid\": \"4x9CKHLIXFRbpKl28De3I7xlDpvEsVUF\",\n            \"version\": \"9\"\n        },\n        {\n            \"kuid\": \"Az4PFRCgwHZSVqOIGyoWLHjBaOMfxurW\",\n            \"version\": \"13\"\n        },\n        {\n            \"kuid\": \"7PLJJhCJJmPggQg5yjhTVRCRsOIMjKXb\",\n            \"version\": \"14\"\n        },\n        {\n            \"kuid\": \"Y3YtPQBqGjlamBFB3srNESyba0DbfprB\",\n            \"version\": \"10\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Search and Filters",
					"item": [
						{
							"name": "Client-Handshake",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", responseData.token);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"{{agent_iam}}\\\"\\r\\n    }\"\r\n}\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/client-handshake",
								"description": "## Details:\n\n1. Handshake must be called before sign-in and sign-up (Mobile/web App) APIs\n2. Handshake has expiry of 5 minutes i.e. if user does not sign-up/sign-up in 5 min, it will expire and sign-up/in will fail. Front-end shall call handshake again to sign-up/in.\n3. Upon handshake expiry, an http status code 503 is received. In such case, call client-handshake API.\n    \n\n| **Parameters** | **Notes** |\n| --- | --- |\n| `agent_iam (string) (mandatory)` | Enum:  <br>\\- if user is logging in from mobile app then  <br>`agent_iam = \"mobile-app\"`  <br>\\- if user is logging in from web then:  <br>`agent_iam = \"web-app\"` |"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"agent_iam\\\": \\\"mobile-app\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/client-handshake"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 18:33:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "203"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"cb-ixig9p2je2903Q6leG81gc9jzlw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJhQmRqV3RpaktUU2NNblNBY1J0c3pabVVQdHZ2N2JjVCIsImlhdCI6MTY2ODk2OTE4NiwiZXhwIjoxNjcxNTYxMTg2fQ.b9tzeee7X-Nai39WJ5KqUBGyQGU5HsS2rcSDdUwkFDA\"\n}"
								}
							]
						},
						{
							"name": "Sign-in",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// passportToken\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"Passport Token: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"passportToken\", responseData.passportToken);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"{{password}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/sign-in",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:59:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"150-//kexW/0VPeRnicC4jVN0WgG0Ss\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ1bEdlZkVxU2lOSlVEeHRabTVnYW9VNUdza0RTZnFTeiIsImlhdCI6MTY2ODk3NDMyOCwiZXhwIjoxNjcxNTY2MzI4fQ.v5DnBEkBiYM24qOzmM_A2KzHqqdXJSyXEnJyhjnsbg0\",\n    \"user\": {\n        \"fullName\": \"Sheheryar Afzal\",\n        \"email\": \"bradatservice@gmail.com\",\n        \"kuid\": \"0311fc91c8774a21a5cf52c4dbd057ee\"\n    }\n}"
								},
								{
									"name": "Handshake expired (503)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4TXQyNWpKaXhkMnhqSURXMjNkSVhSb202aVRFcmducSIsImlhdCI6MTY2ODg3OTA1OSwiZXhwIjoxNjcxNDcxMDU5fQ.V2PPkItrU27r5Y-7olSHWzMrNf34-LbktpH_SVLw64s",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"bradatservice@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/sign-in"
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Nov 2022 19:58:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "ETag",
											"value": "W/\"67-OF/CbM+NPR3iGJUXApuGpGiM2vQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid request\",\n        \"description\": \"try handshake again\"\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Bug Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n       }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-bug-filters",
								"description": "## Details:\n\n- This API is used to fetch Bug filters.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Bug Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n       }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-bug-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 24 Feb 2023 06:43:20 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6646"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"19f6-wjzzkJCfZZcHxvkr4K9I1Os7uTU\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"filter\": [\n        {\n            \"label\": \"status\",\n            \"values\": [\n                {\n                    \"status\": \"in_progress\",\n                    \"kuid\": \"xyz2\"\n                },\n                {\n                    \"status\": \"done\",\n                    \"kuid\": \"xyz3\"\n                },\n                {\n                    \"status\": \"todo\",\n                    \"kuid\": \"xyz1\"\n                }\n            ]\n        },\n        {\n            \"label\": \"assignee\",\n            \"values\": [\n                {\n                    \"fullName\": \"Test User\",\n                    \"avatar\": \"783001.webp\",\n                    \"email\": \"harisnazir26@gmail.com\",\n                    \"kuid\": \"dfa6e6f35402482785c992e85791bf86\"\n                }\n            ]\n        },\n        {\n            \"label\": \"version\",\n            \"values\": [\n                {\n                    \"env_hostAppVersion\": \"1.0.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"1.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"3.0.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"0.0.1\"\n                },\n                {\n                    \"env_hostAppVersion\": \"12\"\n                },\n                {\n                    \"env_hostAppVersion\": \"9\"\n                },\n                {\n                    \"env_hostAppVersion\": \"13\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Tags\",\n            \"values\": []\n        },\n        {\n            \"label\": \"operating Sytem\",\n            \"values\": [\n                {\n                    \"env_deviceOS\": \"iOS 16.0\"\n                },\n                {\n                    \"env_deviceOS\": \"Google Pixel 2\"\n                },\n                {\n                    \"env_deviceOS\": \"INFINIX MOBILITY LIMITED Infinix X688B\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Reportee\",\n            \"values\": [\n                {\n                    \"fullName\": \"Test User\",\n                    \"avatar\": \"783001.webp\",\n                    \"email\": \"harisnazir26@gmail.com\",\n                    \"kuid\": \"dfa6e6f35402482785c992e85791bf86\"\n                },\n                {\n                    \"fullName\": \"Testing\",\n                    \"avatar\": null,\n                    \"email\": \"testing@gmail.com\",\n                    \"kuid\": \"h4gU1VwILU5NwENYV9wur6JtvU2y2b4B\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Date\",\n            \"values\": [\n                {\n                    \"createdAt\": \"2022-12-02T06:26:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-02T07:00:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T05:18:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T05:54:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T10:55:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T05:46:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T06:10:21.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T06:43:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-12T07:00:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-13T08:07:04.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-14T09:14:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-14T10:15:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-14T10:17:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-15T06:48:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-15T14:35:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-19T10:54:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-19T12:27:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-23T12:45:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-26T11:48:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:58:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:58:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:58:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:59:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T11:59:04.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:19.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-28T12:00:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-29T10:24:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-29T10:33:13.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-29T10:35:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-04T11:43:40.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T06:59:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T09:24:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T10:11:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-18T08:11:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-18T12:29:25.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T05:22:33.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T10:10:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T16:10:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T20:41:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T09:56:34.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:38:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T11:01:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T11:16:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T13:01:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T06:48:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T07:04:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T07:41:38.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T10:03:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T10:04:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T12:58:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-24T09:47:31.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-24T09:55:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-24T09:56:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:51:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:55:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:56:02.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T10:56:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T11:03:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T11:03:31.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-25T11:04:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T07:58:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T09:50:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T10:46:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T10:48:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T05:50:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T06:09:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T06:24:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T10:15:03.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:19:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:20:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:35:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T09:35:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T10:31:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T05:03:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:30:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:46:13.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:53:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:54:04.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T11:19:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T11:21:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T04:21:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T06:43:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:17:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:50:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:51:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-09T10:08:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:41:08.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:00:14.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:09:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:31:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:39:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T08:03:19.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T13:33:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T05:29:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T09:45:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T07:15:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:34:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:36:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:36:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:39:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T10:21:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:34:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:12:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T10:11:14.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T12:42:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T13:02:03.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-19T16:31:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-19T16:40:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T05:28:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:19:02.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:22:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:36:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:45:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:46:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T12:47:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:29:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T07:02:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T10:03:07.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T11:26:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T12:21:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T12:22:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T12:33:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:08:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:15:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:56:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T10:57:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-24T04:35:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-24T04:44:41.000Z\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Apply Bug Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n     \\\"status\\\": [ \\\"{{status}}\\\"],\\n    \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/apply-bug-filters",
								"description": "## Details:\n\n- This API is used to apply bugs filters.\n- NOTE: Make sure, among parameters: label, operating_system, version, reporter, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is searching bug` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `label (string) (optional)` | `the text to be searched in bugs' title (can be sent empty)` |\n| `version (array) (optiona)` | `version of the bug (can be sent empty array)` |\n| `assignees (array) (optional)` | `array of assignees' ids (can be sent empty array)` |\n| `status (array) (optional)` | `resolution status of the bug i.e to_do, in-progress, done` |\n| `operating_system (string) (optional)` | `os of device (can be sent empty array)` |\n| `date (string) (optional)` | `date of the bug (can be sent empty array)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Apply Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"error\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/apply-bug-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 05:35:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "703"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"2bf-1sjeHz0SqoVeujXtom6A2HAdTBo\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJNT09Gc3o0QUhXRkFDRk40SkZwNkxnYjQyc3FmaE01ayIsImlhdCI6MTY3NzA0NDEzMCwiZXhwIjoxNjc5NjM2MTMwfQ.HJL6ecNbUh7Cl_THIVMExMPOXHxiN78rljn_3JFZsJ0\",\n    \"bugs_list\": [\n        {\n            \"kuid\": \"sNFJolRwNsrqmiJ4rdALYxePd5r3NOns\",\n            \"bugTitle\": \"Error\",\n            \"Description\": \"Error\",\n            \"tags\": null,\n            \"videoAttachments\": null,\n            \"audioAttachments\": null,\n            \"images\": \"1669962412293.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"fullName\": \"Test User\",\n            \"avatar\": \"afp_en_7a17bdb63d07277ed7a4e1e13c6190e56b715224.jpg\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Crash Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"if (pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json();\r",
											"    console.log(\"Response Body: \", responseData);   \r",
											"        console.log(\"deviceId: \", responseData.passportToken);\r",
											"        pm.collectionVariables.set(\"deviceId\", responseData.filter[6].values[0].env_deviceId);\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n       }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-crash-filters",
								"description": "## Details:\n\n- This API is used to fetch Crash filters.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Crash Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n       }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-crash-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Fri, 24 Feb 2023 06:44:23 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "5510"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1586-5rkWjJnvPg+WurGhJoFdHWVjLY8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"filter\": [\n        {\n            \"label\": \"status\",\n            \"values\": [\n                {\n                    \"status\": \"in_progress\",\n                    \"kuid\": \"xyz2\"\n                },\n                {\n                    \"status\": \"todo\",\n                    \"kuid\": \"xyz1\"\n                }\n            ]\n        },\n        {\n            \"label\": \"assignee\",\n            \"values\": []\n        },\n        {\n            \"label\": \"version\",\n            \"values\": [\n                {\n                    \"env_hostAppVersion\": \"1.0\"\n                },\n                {\n                    \"env_hostAppVersion\": \"12\"\n                },\n                {\n                    \"env_hostAppVersion\": \"13\"\n                }\n            ]\n        },\n        {\n            \"label\": \"operating Sytem\",\n            \"values\": [\n                {\n                    \"env_deviceOS\": \"iOS 16.0\"\n                },\n                {\n                    \"env_deviceOS\": \"iOS 15.7\"\n                },\n                {\n                    \"env_deviceOS\": \"Google Pixel 2\"\n                }\n            ]\n        },\n        {\n            \"label\": \"Reportee\",\n            \"values\": []\n        },\n        {\n            \"label\": \"Date\",\n            \"values\": [\n                {\n                    \"createdAt\": \"2022-12-05T07:14:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:16:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:18:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-05T07:23:16.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:19:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:19:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2022-12-06T07:30:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-13T06:50:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-17T13:33:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-19T07:21:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T05:47:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T06:34:05.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T06:38:02.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:01:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:03:47.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T10:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-20T12:59:38.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T05:54:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T06:16:03.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-23T08:00:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-26T07:23:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T07:58:21.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T09:51:22.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-27T11:36:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T06:53:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-30T10:15:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:37:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:37:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:39:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:42:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T05:45:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-01-31T07:29:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T05:58:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T07:44:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T09:24:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T10:32:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-01T13:08:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:31:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:54:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T05:59:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T06:07:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T07:22:00.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T07:23:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T09:42:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-02T09:43:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T06:16:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:05:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:07:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T07:09:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T11:10:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-03T11:12:31.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T12:04:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:20:55.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:20:56.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:21:41.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-06T18:21:59.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T06:55:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T07:43:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:16:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:42:11.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:42:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-07T09:43:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T05:52:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T09:30:48.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T10:39:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-08T10:41:06.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-09T09:40:29.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T05:16:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T05:42:44.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T06:54:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T09:36:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-10T10:38:13.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T04:58:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:23:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:24:30.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:27:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:29:37.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:38:19.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T05:49:50.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:10:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T06:25:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:20:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:25:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:32:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T07:57:01.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T09:12:23.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T11:35:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-13T11:54:49.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T05:04:15.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:09:32.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:20:09.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:40:28.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T06:53:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-14T12:51:27.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-15T07:00:18.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-15T12:24:35.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T05:23:40.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T07:14:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T09:54:14.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:31:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-16T12:43:25.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T06:20:24.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T06:32:43.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:05:36.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-17T07:11:10.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:30:26.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:34:20.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T07:56:39.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T09:49:45.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T10:07:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T13:16:46.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-20T13:18:17.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:16:54.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T07:16:57.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T10:47:58.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-21T11:15:51.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:12:12.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T05:15:52.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-22T11:25:42.000Z\"\n                },\n                {\n                    \"createdAt\": \"2023-02-23T05:34:32.000Z\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Apply Crash Filters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [\\\"\\\"],\\n       \\\"device_ids\\\": [\\\"\\\"],\\n         \\\"version\\\": [],\\n       \\\"label\\\": \\\"\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/apply-crash-filters",
								"description": "## Details:\n\n- This API is used to apply crash filters.\n- NOTE: Make sure, among parameters: label, operating_system, version, reporter, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is searching crash` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n| `label (string) (optional)` | `the text to be searched in crash' title (can be sent empty)` |\n| `version (array) (optiona)` | `version of the crash (can be sent empty array)` |\n| `assignees (array) (optional)` | `array of assignees' ids (can be sent empty array)` |\n| `status (array) (optional)` | `resolution status of the crash i.e to_do, in-progress, done` |\n| `operating_system (string) (optional)` | `os of device (can be sent empty array)` |\n| `date (string) (optional)` | `date of the crash (can be sent empty array)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Apply Crash Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"NSInvalidArgumentException\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/apply-crash-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 10:09:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "37666"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"9322-CBrxYjegfKGDUgNR+9qyAUy0usI\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJyMldzYnJiNFhFT2R6akRMZFNZVEZ1SWxaYmowTWlpayIsImlhdCI6MTY3NzA1OTEyNiwiZXhwIjoxNjc5NjUxMTI2fQ.j6xfPEdwqApvkO95V9dH-oW335bNK2mCFmx803BVWdM\",\n    \"total\": \"11\",\n    \"bugs_list\": [\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x000000018e77e254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x0000000187b4ba68 objc_exception_throw + 60\\n2   CoreFoundation                      0x000000018e8f23f0 42C5C917-0447-3995-B50F-DE4D132C2435 + 1565680\\n3   UIKitCore                           0x0000000191647c50 7B942FA4-CB76-3375-9972-F58C14492FB4 + 13917264\\n4   CoreFoundation                      0x000000018e794360 42C5C917-0447-3995-B50F-DE4D132C2435 + 131936\\n5   CoreFoundation                      0x000000018e7fc660 _CF_forwarding_prep_0 + 96\\n6   FusionInspect                       0x00000001039bd9f4 $s13FusionInspect11OverlayViewC4copy4withyp10ObjectiveC6NSZoneVSg_tF + 260\\n7   FusionInspect                       0x00000001039bdc28 $s13FusionInspect11OverlayViewC4copy4withyp10ObjectiveC6NSZoneVSg_tFTo + 52\\n8   FusionInspect                       0x00000001039b7d8c $s13FusionInspect10CanvasViewC09duplicateD0yyF + 408\\n9   FusionInspect                       0x0000000103a51218 $s13FusionInspect19ImageEditControllerC9bindViewsyyFyycfU5_ + 212\\n10  FusionInspect                       0x00000001039501e0 $s13FusionInspect14DeleteItemViewC04bindE033_B442BC6ECF297C93E48D94B1A19F3A49LLyyFyycfU0_ + 140\\n11  FusionInspect                       0x000000010394a450 $s13FusionInspect25CustomButtonTextWithImageC13didTappedViewyyF + 124\\n12  FusionInspect                       0x000000010394a49c $s13FusionInspect25CustomButtonTextWithImageC13didTappedViewyyFTo + 36\\n13  UIKitCore                           0x00000001909c1164 7B942FA4-CB76-3375-9972-F58C14492FB4 + 782692\\n14  UIKitCore                           0x0000000190d2edfc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4378108\\n15  UIKitCore                           0x0000000190aa8b94 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1731476\\n16  UIKitCore                           0x00000001909891dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 553436\\n17  UIKitCore                           0x0000000190a35358 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1258328\\n18  UIKitCore                           0x00000001912b61d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 10174936\\n19  UIKitCore                           0x00000001909f9d18 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1015064\\n20  UIKitCore                           0x00000001909fe674 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033844\\n21  UIKitCore                           0x00000001909fd944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n22  UIKit                               0x00000002130e66bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n23  UIKitCore                           0x00000001909fd000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n24  UIKitCore                           0x0000000190a44d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n25  UIKitCore                           0x0000000190d4d4dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n26  CoreFoundation                      0x000000018e84a22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n27  CoreFoundation                      0x000000018e856614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n28  CoreFoundation                      0x000000018e7da51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n29  CoreFoundation                      0x000000018e7efeb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n30  CoreFoundation                      0x000000018e7f51e4 CFRunLoopRunSpecific + 612\\n31  GraphicsServices                    0x00000001c7615368 GSEventRunModal + 164\\n32  UIKitCore                           0x0000000190ca4d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n33  UIKitCore                           0x0000000190ca49ec UIApplicationMain + 340\\n34  libswiftUIKit.dylib                 0x00000001971542a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n35  HostApp                             0x0000000102d58194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n36  HostApp                             0x0000000102d5811c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n37  HostApp                             0x0000000102d58218 main + 28\\n38  dyld                                0x00000001acb19948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1675752493973.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x000000018e77e254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x0000000187b4ba68 objc_exception_throw + 60\\n2   CoreFoundation                      0x000000018e8ea338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001018c6928 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 576\\n4   FusionInspect                       0x00000001018c6af0 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x0000000190b516d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x0000000190b513d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x0000000190b50d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x0000000190b50c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x0000000190b50848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001909ff268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001909fe684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001909fd944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x00000002130e66bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001909fd000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x0000000190a44d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x0000000190d4d4dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x000000018e84a22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x000000018e856614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x000000018e7da51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x000000018e7efeb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x000000018e7f51e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001c7615368 GSEventRunModal + 164\\n23  UIKitCore                           0x0000000190ca4d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x0000000190ca49ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001971542a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100e58194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100e5811c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100e58218 main + 28\\n29  dyld                                0x00000001acb19948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1675761209983.jpg,1675761218427.jpg,1675761220068.jpg,1675761385608.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x000000018e77e254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x0000000187b4ba68 objc_exception_throw + 60\\n2   CoreFoundation                      0x000000018e8ea338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001018c6928 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 576\\n4   FusionInspect                       0x00000001018c6af0 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x0000000190b516d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x0000000190b513d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x0000000190b50d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x0000000190b50c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x0000000190b50848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001909ff268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001909fe684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001909fd944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x00000002130e66bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001909fd000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x0000000190a44d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x0000000190d4d4dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x000000018e84a22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x000000018e856614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x000000018e7da51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x000000018e7efeb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x000000018e7f51e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001c7615368 GSEventRunModal + 164\\n23  UIKitCore                           0x0000000190ca4d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x0000000190ca49ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001971542a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100e58194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100e5811c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100e58218 main + 28\\n29  dyld                                0x00000001acb19948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1675761385608.jpg,1675761220068.jpg,1675761218427.jpg,1675761209983.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001d231a254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x00000001cb6e7a68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001d2486338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x0000000100c2dbe0 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 576\\n4   FusionInspect                       0x0000000100c2dda8 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001d46ed6d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001d46ed3d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001d46ecd6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001d46ecc10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001d46ec848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001d459b268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001d459a684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001d4599944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000256c826bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001d4599000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001d45e0d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001d48e94dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001d23e622c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001d23f2614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001d237651c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001d238beb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001d23911e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x000000020b1b1368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001d4840d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001d48409ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001dacf02a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x00000001007e4194 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x00000001007e411c $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x00000001007e4218 main + 28\\n29  dyld                                0x00000001f06b5948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1676531215102.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz1\",\n            \"assigneeKuid\": \"16\",\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001031f9b0c $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001031f9bb8 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x000000010278c574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x000000010278c4fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x000000010278c5f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224935168.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x00000001043a2534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x00000001043a2584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010416992c HostApp + 22828\\n26  dyld                                0x00000001042e44d0 start + 444\",\n            \"images\": \"1670310358214.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102c1a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102c1a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010293d92c HostApp + 22828\\n26  dyld                                0x0000000102b5c4d0 start + 444\",\n            \"images\": \"1670311173321.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"76aa3985d542507977d61677c8835e48\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102f6a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102f6a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x0000000102cf992c HostApp + 22828\\n26  dyld                                0x0000000102dac4d0 start + 444\",\n            \"images\": \"1670311186348.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"xyz2\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Crash Search By Device Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n     \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\n         \\\"device_id\\\": \\\"{{deviceId}}\\\",\\n        \\\"pg\\\": 0\\r\\n   }\" \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/crash/search-by-device-id"
							},
							"response": [
								{
									"name": "Apply Crash Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\\\",\\n     \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\",\\n      \\\"status\\\": [],\\n     \\\"assignees\\\": [],\\n     \\\"version\\\": [],\\n       \\\"label\\\": \\\"NSInvalidArgumentException\\\",\\n     \\\"operating_system\\\": \\\"\\\",\\n       \\\"reporter\\\": \\\"\\\",\\n      \\\"date\\\": \\\"\\\",\\n    \\\"pg\\\": 0\\r\\n   }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/apply-crash-filters"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "23097"
										},
										{
											"key": "ETag",
											"value": "W/\"5a39-Ot6Hnj7GVXkPVBpWUTsvtpWNbSI\""
										},
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 05:58:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"FcvaJsafWl4IFqISOBn3wNqlcIuL3DnB\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJMaGE1emN2UjNJc2NzUlFtZWl0TzYyTzdXTm5YZ1d1NyIsImlhdCI6MTY3Njg5ODQwMCwiZXhwIjoxNjc5NDkwNDAwfQ.4ez15TNoOV_dmFr4jQjAUa4lDk-plJxAR66vhA3H9aA\",\n    \"total\": \"7\",\n    \"bugs_list\": [\n        {\n            \"kuid\": \"41EQ1XzmXyH1SSLidj5bp3gw3x3lviRG\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"PJtl2raly6S8Fxc8sZuGVCI9RsRBYPfK\",\n            \"assigneeKuid\": \"9ad3603d26814360ab333b31646d1c69\",\n            \"fullName\": \"O3 Dev Lab\",\n            \"avatar\": \"url\"\n        },\n        {\n            \"kuid\": \"d1sq1NCXpSpma7lVYPQSoT09w56bF9JV\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"3j3w5WUeBSIpmAXjYe3DoRjyD8r5M2SZ\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"EE5MY6ituiLK21C74I7i1dXWjLq19fon\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001015a17b4 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001015a1860 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x0000000100b30574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x0000000100b304fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x0000000100b305f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224010292.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"15Vn4ggDTXqWYspubnj7Y4du92pLMADk\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"4tJRk8Ob8JKuWaJoXF19KgLYzmzbfE7L\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x00000001a3522254 42C5C917-0447-3995-B50F-DE4D132C2435 + 41556\\n1   libobjc.A.dylib                     0x000000019c8efa68 objc_exception_throw + 60\\n2   CoreFoundation                      0x00000001a368e338 42C5C917-0447-3995-B50F-DE4D132C2435 + 1532728\\n3   FusionInspect                       0x00000001031f9b0c $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCF + 560\\n4   FusionInspect                       0x00000001031f9bb8 $s13FusionInspect0A14HomeControllerC17didSelectAnOptionyySo8UIButtonCFTo + 52\\n5   UIKitCore                           0x00000001a58f56d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2422488\\n6   UIKitCore                           0x00000001a58f53d8 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2421720\\n7   UIKitCore                           0x00000001a58f4d6c 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2420076\\n8   UIKitCore                           0x00000001a58f4c10 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2419728\\n9   UIKitCore                           0x00000001a58f4848 7B942FA4-CB76-3375-9972-F58C14492FB4 + 2418760\\n10  UIKitCore                           0x00000001a57a3268 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1036904\\n11  UIKitCore                           0x00000001a57a2684 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1033860\\n12  UIKitCore                           0x00000001a57a1944 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1030468\\n13  UIKit                               0x0000000227e8a6bc 3CB83860-AA42-3F9A-9B6E-2954BACE3DAC + 186044\\n14  UIKitCore                           0x00000001a57a1000 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1028096\\n15  UIKitCore                           0x00000001a57e8d64 7B942FA4-CB76-3375-9972-F58C14492FB4 + 1322340\\n16  UIKitCore                           0x00000001a5af14dc 7B942FA4-CB76-3375-9972-F58C14492FB4 + 4502748\\n17  CoreFoundation                      0x00000001a35ee22c 42C5C917-0447-3995-B50F-DE4D132C2435 + 877100\\n18  CoreFoundation                      0x00000001a35fa614 42C5C917-0447-3995-B50F-DE4D132C2435 + 927252\\n19  CoreFoundation                      0x00000001a357e51c 42C5C917-0447-3995-B50F-DE4D132C2435 + 419100\\n20  CoreFoundation                      0x00000001a3593eb8 42C5C917-0447-3995-B50F-DE4D132C2435 + 507576\\n21  CoreFoundation                      0x00000001a35991e4 CFRunLoopRunSpecific + 612\\n22  GraphicsServices                    0x00000001dc3b9368 GSEventRunModal + 164\\n23  UIKitCore                           0x00000001a5a48d88 7B942FA4-CB76-3375-9972-F58C14492FB4 + 3812744\\n24  UIKitCore                           0x00000001a5a489ec UIApplicationMain + 340\\n25  libswiftUIKit.dylib                 0x00000001abef82a0 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 104\\n26  HostApp                             0x000000010278c574 $sSo21UIApplicationDelegateP5UIKitE4mainyyFZ + 104\\n27  HostApp                             0x000000010278c4fc $s7HostApp0B8DelegateC5$mainyyFZ + 44\\n28  HostApp                             0x000000010278c5f8 main + 28\\n29  dyld                                0x00000001c18bd948 341BBF64-6034-357E-8AA6-E1E4B988E03C + 88392\",\n            \"images\": \"1670224935168.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"F99n7W3iveHYnllDfz2xtfzmhw4YfAIu\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"bA971JRwBYhE31mvU8sbV04x6o6HeREJ\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x00000001043a2534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x00000001043a2584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010416992c HostApp + 22828\\n26  dyld                                0x00000001042e44d0 start + 444\",\n            \"images\": \"1670310358214.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"giAC52ru6xsz77oAGeOprZttyKadwQOu\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"Sj8QQTUGXV3nOc1SWhCCQ1c4TRqW4oLl\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102c1a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102c1a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x000000010293d92c HostApp + 22828\\n26  dyld                                0x0000000102b5c4d0 start + 444\",\n            \"images\": \"1670311173321.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"Js2M21EHYBwhSXWwNYc1A7J6aeZ2Dpno\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        },\n        {\n            \"kuid\": \"vNnTHeHAPKNjikIegJP8IeC66zPCRixE\",\n            \"crashTitle\": \"NSInvalidArgumentException\",\n            \"Description\": \"0   CoreFoundation                      0x0000000180b77d30 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 601392\\n1   libobjc.A.dylib                     0x000000019839cee4 objc_exception_throw + 56\\n2   CoreFoundation                      0x0000000180c42504 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 1430788\\n3   FusionInspect                       0x0000000102f6a534 __swift_memcpy64_8 + 20368\\n4   FusionInspect                       0x0000000102f6a584 __swift_memcpy64_8 + 20448\\n5   UIKitCore                           0x00000001832b8748 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4818760\\n6   UIKitCore                           0x00000001833d7870 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5994608\\n7   UIKitCore                           0x000000018316d9ec 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3463660\\n8   UIKitCore                           0x000000018320498c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 4082060\\n9   UIKitCore                           0x000000018347c4c0 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 6669504\\n10  UIKitCore                           0x0000000182f8217c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1450364\\n11  UIKitCore                           0x0000000182fb1c9c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1645724\\n12  UIKitCore                           0x0000000183152ab4 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 3353268\\n13  UIKitCore                           0x0000000182f86c7c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1469564\\n14  UIKitCore                           0x0000000182f7bb40 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1424192\\n15  UIKitCore                           0x0000000182f80f5c 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 1445724\\n16  CoreFoundation                      0x0000000180b984fc A0035CDB-5410-3AC8-9289-B0B77AFF556E + 734460\\n17  CoreFoundation                      0x0000000180ba862c A0035CDB-5410-3AC8-9289-B0B77AFF556E + 800300\\n18  CoreFoundation                      0x0000000180aea834 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 22580\\n19  CoreFoundation                      0x0000000180aeff08 A0035CDB-5410-3AC8-9289-B0B77AFF556E + 44808\\n20  CoreFoundation                      0x0000000180b03250 CFRunLoopRunSpecific + 572\\n21  GraphicsServices                    0x00000001a163e988 GSEventRunModal + 160\\n22  UIKitCore                           0x0000000183305a88 697C7D5C-9761-36E9-8E0F-200035BF3F39 + 5134984\\n23  UIKitCore                           0x000000018309efc8 UIApplicationMain + 336\\n24  libswiftUIKit.dylib                 0x0000000197484ee4 $s5UIKit17UIApplicationMainys5Int32VAD_SpySpys4Int8VGGSgSSSgAJtF + 100\\n25  HostApp                             0x0000000102cf992c HostApp + 22828\\n26  dyld                                0x0000000102dac4d0 start + 444\",\n            \"images\": \"1670311186348.jpg\",\n            \"appPackageId\": \"com.o3Interfaces.HostFIApp\",\n            \"resolutionStatusKuid\": \"hc96qUvUec4bkXu8iTevtJ70EwiXHHMZ\",\n            \"assigneeKuid\": null,\n            \"fullName\": null,\n            \"avatar\": null\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Reset Password",
					"item": [
						{
							"name": "Reset Password mob/web",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"request_kuid\", responseData.requestKuid);\r",
											"    pm.collectionVariables.set(\"Reset_email\", responseData.email);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"sshahroz.ahmadd@gmail.com\\\",\\r\\n     \\\"redirect_url\\\": \\\"http://localhost:4200/account/createpassword?email=usman.sultan@o3interfaces.com\\\"\\r\\n  }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/request-reset-password/",
								"description": "## Details:\n\n- This API is used to generate and send OTP or send Link for reset password\n- After this API if user is from mobile-app 'Otp verification Reset Password mob' will be call else if user is from web-app then 'Link Verification Reset Password web' will be called\n- Upon successful reset password, a **1 day expiry** is maintained for that OTP or Link.\n- Upon http status code 400, 'bad request'\n- Upon http status code 401, 'user not exist'\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n|  |  |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "success for web (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"vayaf58328@nevyxus.com\\\"\\r\\n   }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/request-reset-password/"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 07:00:22 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "226"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"e2-HjDQCDCWa03/rRiHAB/HVW04p98\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": {\n        \"title\": \"Reset Password Link Sent\",\n        \"description\": \"A link has been sent to your email, please check your email.\"\n    },\n    \"requestKuid\": \"d1UgulR4375CHMSxT88AwRxzBG0GBVgO\",\n    \"email\": \"sheheryar003@gmail.com\"\n}"
								},
								{
									"name": "success for OTP (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"vayaf58328@nevyxus.com\\\"\\r\\n   }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/request-reset-password/"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 07:26:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "229"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"e5-f9OAhbtkyLGhdZ7MYVzKCD0dncc\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": {\n        \"title\": \"OTP Sent for Password Reset\",\n        \"description\": \"An OTP has been sent to your email, please check your email.\"\n    },\n    \"requestKuid\": \"mheV7fzqxQzp37LT5jt34c6iDr6eOhot\",\n    \"email\": \"sheheryar003@gmail.com\"\n}"
								},
								{
									"name": "User does not exist (401)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"email\\\": \\\"sheheryar003@gmail.com\\\"\\r\\n   }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/request-reset-password/"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 09:12:38 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "132"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"84-v9m87XrLjIjkRrhF6vEt1FnnJ6E\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"User does not exist\",\n        \"description\": \"The entered email doesn't match any record.\"\n    }\n}"
								}
							]
						},
						{
							"name": "Otp verification Reset Password mob",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"{{request_kuid}}\\\",\\r\\n     \\\"email\\\": \\\"{{Reset_email}}\\\",\\r\\n        \\\"otp\\\": \\\"126831\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/otp-verification-reset-password",
								"description": "## Details:\n\n- This APi is used to verify the OTP that are sent on the email\n- This API will call After 'Reset Password mob/web' API and Before 'Create New Password mob/web' API\n- After 24 hours, OTP will get expired and a response with http status code 400.\n- Upon http status code 400, call reset-password API again\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `request_kuid (string) (mandatory)` | `request_kuid that received in reset-password response` |\n| `otp (string) (mandatory)` | `valid otp that are sent on the email` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"smFq1PPLBCtqoE23obsBCHagq8I3hTLD\\\",\\r\\n     \\\"email\\\": \\\"vayaf58328@nevyxus.com\\\",\\r\\n        \\\"otp\\\": \\\"46129\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/otp-verification-reset-password"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 10:07:22 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "84"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"54-R6FGWt224JSO/imj9ZxK+TtQ1bo\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": {\n        \"title\": \"OTP verified\",\n        \"description\": \"OTP verified\"\n    }\n}"
								},
								{
									"name": "Invalid OTp (400)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"smFq1PPLBCtqoE23obsBCHagq8I3hTLD\\\",\\r\\n     \\\"email\\\": \\\"vayaf58328@nevyxus.com\\\",\\r\\n        \\\"otp\\\": \\\"46129\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/otp-verification-reset-password"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 10:08:51 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"68-kOU7f/Z0RbDaXJerlqMRGyXJ2Sg\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid OTP\",\n        \"description\": \"Please enter a valid OTP\"\n    }\n}"
								}
							]
						},
						{
							"name": "Link verification Reset Password web",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n     \\\"token\\\": \\\"lWzZTqGBzPewqa0GCzLa4y-_cTJ6ouIl1_AORdd6-9s\\\"\\r\\n         }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{identityManagementUrl}}/reset-verification",
								"description": "## Details:\n\n- This APi is used to verify the Link that are sent on the email\n- This API will call After 'Reset Password mob/web' API and Before 'Create New Password mob/web' API\n- Token will be sent on the email. Put that token after the endpoint\n- Once link verified it's records will get removed from DB\n- After 24 hours, Link will get expired and a response with http status code 400\n- Upon http status code 400, call reset-password API again\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n|  |  |\n|  |  |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/reset-verification/{{clientHandshakeToken}}"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 10:26:20 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-Wu+DohbzZLRm8cIBIdUwWwc8HYA\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": {\n        \"title\": \"Request verified\",\n        \"description\": \"Request verified\"\n    }\n}"
								},
								{
									"name": "User does not exist (401)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/reset-verification/{{clientHandshakeToken}}"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 10:27:18 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "132"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"84-v9m87XrLjIjkRrhF6vEt1FnnJ6E\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"User does not exist\",\n        \"description\": \"The entered email doesn't match any record.\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create New Password mob/web",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"{{request_kuid}}\\\",\\r\\n     \\\"email\\\": \\\"{{email}}\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/create-new-password",
								"description": "## Details:\n\n- This API is used to update the user's password\n- This APi will call after 'Otp verification Reset Password mob' API OR 'Link Verification Reset Password web' API\n- Upon http status code 400, call reset-password API again and repeat process\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `new password` |\n| `request_kuid (string) (mandatory)` | `request_kuid that received in reset-password response` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"bH4L6epSx1HNTzpsYPQsg0HtGxyXZrfe\\\",\\r\\n     \\\"email\\\": \\\"sheheryar003@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"1234567890\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/create-new-password"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 07:33:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "116"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"74-J6Q40ZX2HE7Dd+ij6wrfwbKWTFk\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": {\n        \"title\": \"Password Successfuly updated\",\n        \"description\": \"Password Successfuly updated\"\n    }\n}"
								},
								{
									"name": "Invalid email or request_kuid (400)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"MVnUoZ1vsVTSNwYrDHGKpT5IgpD3R9RC\\\",\\r\\n     \\\"email\\\": \\\"vayaf58328@nevyxu.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/create-new-password"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 10:16:39 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"6e-vLNCJjRygMvmIIUfI73y9sbls/A\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid or Bad Request\",\n        \"description\": \"Invalid or Bad Request\"\n    }\n}"
								}
							]
						},
						{
							"name": "Resend OTP/Link",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"{{request_kuid}}\\\",\\r\\n     \\\"email\\\": \\\"{{email}}\\\"\\r\\n        }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/resend-otp-link",
								"description": "## Details:\n\n- This APi is used to resend OTP or Link\n- request_kuid is optional for web-app and mandatory for mobile-app\n- Upon http status code 400, call reset-password API again and repeat process\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `request_kuid (string) (optional for web-app, mandatory for mobile-app)` | `request_kuid that received in reset-password response` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": [
								{
									"name": "Success OTP (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"{{request_kuid}}\\\",\\r\\n     \\\"email\\\": \\\"{{email}}\\\"\\r\\n        }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/resend-otp-link"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Jan 2023 11:23:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "229"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"e5-Mz6Tj0feQQwj9IZp+oi7IFcw7Io\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": {\n        \"title\": \"OTP Sent for Password Reset\",\n        \"description\": \"An OTP has been sent to your email, please check your email.\"\n    },\n    \"requestKuid\": \"X9Je1cmpN9AIjLhb4R23SAmXS7bA7u1K\",\n    \"email\": \"vayaf58328@nevyxus.com\"\n}"
								},
								{
									"name": "Success Link (200)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"{{request_kuid}}\\\",\\r\\n     \\\"email\\\": \\\"{{email}}\\\"\\r\\n        }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/resend-otp-link"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Jan 2023 11:24:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "226"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"e2-mkYIaumOX2Vxj8B5+qcK/F+rpWE\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": {\n        \"title\": \"Reset Password Link Sent\",\n        \"description\": \"A link has been sent to your email, please check your email.\"\n    },\n    \"requestKuid\": \"uDLiZMnmVPneabEXkCbBObTISZ5yEgvI\",\n    \"email\": \"vayaf58328@nevyxus.com\"\n}"
								},
								{
									"name": "Failed (400)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"request_kuid\\\": \\\"\\\",\\r\\n     \\\"email\\\": \\\"{{email}}\\\"\\r\\n        }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://identity-mgt.transroadservices.com/api/v1/resend-otp-link"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Jan 2023 11:27:26 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "106"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"6a-II4JDMa6Mqn2nJRJ2rq7hpvCois\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"failed\",\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"Invalid Request\",\n        \"description\": \"Invalid or Bad Request\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create New Password For Web",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\r\\n   \\\"token\\\": \\\"9V6GjQcLQQR-9Bpr-ZshN5TozqOFRGGY5Qa-tut0nfA\\\",\\r\\n     \\\"email\\\": \\\"gataco2026@edulena.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n     }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_identity_management}}/create-new-password-for-web",
								"description": "## Details:\n\n- Upon successful sign in, a **1 day session** is maintained for the user.\n- After 24 hours, session will get expired and a response with http status code 503 will be received on the APIs that are called after sign-in.\n- Upon http status code 503, call client-handshake API again, then sign-in API for a new user session.\n    \n\n| **Paramters** | **Notes** |\n| --- | --- |\n| `email (string) (mandatory)` | `valid email of the user` |\n| `password (string) (mandatory)` | `password for user account` |\n\n> IMPORTANT: This API requires token (in Authorization header) that is received in client-handshake API"
							},
							"response": []
						}
					]
				},
				{
					"name": "Subscription/Payments",
					"item": [
						{
							"name": "List Subscription Plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"url": "{{base_url_appli_web}}/subscription-plans"
							},
							"response": [
								{
									"name": "Success (200)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "http://application-webservices.transroadservices.com/api/v1/subscription-plans"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Mar 2023 09:49:54 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1979"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"7bb-coFp/0obfWMNzLB7hfp7ku8O4lE\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"subscription_plans\": {\n        \"monthly\": [\n            {\n                \"plan\": \"free\",\n                \"fee\": \"$0\",\n                \"limits\": {\n                    \"workspace_limit\": 1,\n                    \"project_limit\": 10,\n                    \"session_limit\": 20000,\n                    \"user_limit\": 10,\n                    \"integrations\": \"0\",\n                    \"data_retention_bugs\": \"30 Days\",\n                    \"data_retention_crashes\": \"15 Days\",\n                    \"data_size\": \"100 MB\"\n                }\n            },\n            {\n                \"plan\": \"basic\",\n                \"fee\": \"$49\",\n                \"limits\": {\n                    \"workspace_limit\": 1,\n                    \"project_limit\": 20,\n                    \"session_limit\": 60000,\n                    \"user_limit\": 20,\n                    \"integrations\": \"all\",\n                    \"data_retention_bugs\": \"3 Months\",\n                    \"data_retention_crashes\": \"45 Days\",\n                    \"data_size\": \"200 MB\"\n                }\n            },\n            {\n                \"plan\": \"professional\",\n                \"fee\": \"$249\",\n                \"limits\": {\n                    \"workspace_limit\": 2,\n                    \"project_limit\": 25,\n                    \"session_limit\": 350000,\n                    \"user_limit\": 25,\n                    \"integrations\": \"all\",\n                    \"data_retention_bugs\": \"6 Months\",\n                    \"data_retention_crashes\": \"3 Months\",\n                    \"data_size\": \"200 MB\"\n                }\n            },\n            {\n                \"plan\": \"enterprise\",\n                \"fee\": \"\",\n                \"limits\": {\n                    \"workspace_limit\": \"Unlimited\",\n                    \"project_limit\": \"Unlimited\",\n                    \"session_limit\": \"Let's Talk\",\n                    \"user_limit\": \"Unlimited\",\n                    \"integrations\": \"all\",\n                    \"data_retention_bugs\": \"Contact Us\",\n                    \"data_retention_crashes\": \"Contact Us\",\n                    \"data_size\": \"Contact Us\"\n                }\n            }\n        ],\n        \"yearly\": [\n            {\n                \"plan\": \"free\",\n                \"fee\": \"$0\",\n                \"limits\": {\n                    \"workspace_limit\": 1,\n                    \"project_limit\": 10,\n                    \"session_limit\": 20000,\n                    \"user_limit\": 10,\n                    \"integrations\": \"0\",\n                    \"data_retention_bugs\": \"30 Days\",\n                    \"data_retention_crashes\": \"15 Days\",\n                    \"data_size\": \"100 MB\"\n                }\n            },\n            {\n                \"plan\": \"basic\",\n                \"fee\": \"$35\",\n                \"limits\": {\n                    \"workspace_limit\": 1,\n                    \"project_limit\": 20,\n                    \"session_limit\": 60000,\n                    \"user_limit\": 20,\n                    \"integrations\": \"all\",\n                    \"data_retention_bugs\": \"3 Months\",\n                    \"data_retention_crashes\": \"45 Days\",\n                    \"data_size\": \"200 MB\"\n                }\n            },\n            {\n                \"plan\": \"professional\",\n                \"fee\": \"$175\",\n                \"limits\": {\n                    \"workspace_limit\": 2,\n                    \"project_limit\": 25,\n                    \"session_limit\": 350000,\n                    \"user_limit\": 25,\n                    \"integrations\": \"all\",\n                    \"data_retention_bugs\": \"6 Months\",\n                    \"data_retention_crashes\": \"3 Months\",\n                    \"data_size\": \"200 MB\"\n                }\n            },\n            {\n                \"plan\": \"enterprise\",\n                \"fee\": \"\",\n                \"limits\": {\n                    \"workspace_limit\": \"Unlimited\",\n                    \"project_limit\": \"Unlimited\",\n                    \"session_limit\": \"Let's Talk\",\n                    \"user_limit\": \"Unlimited\",\n                    \"integrations\": \"all\",\n                    \"data_retention_bugs\": \"Contact Us\",\n                    \"data_retention_crashes\": \"Contact Us\",\n                    \"data_size\": \"Contact Us\"\n                }\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Stripe subscribe",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"token\":{\"id\":\"src_1MraUlBUJKiCM3GCX30wgBUp\",\"object\":\"source\",\"amount\":100,\"card\":{\"address_line1_check\":\"unchecked\",\"address_zip_check\":\"unchecked\",\"brand\":\"Visa\",\"country\":\"US\",\"cvc_check\":\"unchecked\",\"dynamic_last4\":null,\"exp_month\":4,\"exp_year\":2024,\"funding\":\"credit\",\"last4\":\"4242\",\"name\":null,\"three_d_secure\":\"optional\",\"tokenization_method\":null},\"client_secret\":\"src_client_secret_FAAiLsYqHHhwpa9ggy9BxrnS\",\"created\":1680240447,\"currency\":\"usd\",\"flow\":\"none\",\"livemode\":false,\"owner\":{\"address\":{\"city\":\"Islamabad\",\"country\":\"Pakistan\",\"line1\":\"1234\",\"line2\":null,\"postal_code\":\"42424\",\"state\":\"Pubjab\"},\"email\":\"hammadali.dev@gmail.com\",\"name\":\"Hammad Ali Shah\",\"phone\":null,\"verified_address\":null,\"verified_email\":null,\"verified_name\":null,\"verified_phone\":null},\"statement_descriptor\":null,\"status\":\"chargeable\",\"type\":\"card\",\"usage\":\"reusable\"}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/subscription/checkout"
							},
							"response": []
						},
						{
							"name": "User Billings List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/subscription/user-billings",
								"description": "This API returns list of user billings.\n\nParams returned are listed below:\n\n- billingKuid\n- payment\n- currency\n- status\n- transactionData (can be null)\n- invoice_url (can be null)\n- createOn (Date)\n    \n\n> IMPORTANT: It requires token in authorization header that is received in /client-handshake API"
							},
							"response": []
						}
					]
				},
				{
					"name": "Integration",
					"item": [
						{
							"name": "Jira",
							"item": [
								{
									"name": "Get Jira projects",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"if( pm.response.to.have.status(200)) {",
													"    const responseData = pm.response.json()",
													"    pm.collectionVariables.set(\"project_Name\", responseData.projects[0].name);",
													"    pm.collectionVariables.set(\"project_key\", responseData.projects[0].key);",
													"",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n    \\\"email\\\": \\\"sheheryar.afzal@o3interfaces.com\\\",\\r\\n    \\\"site_url\\\": \\\"https://fusioninspect.atlassian.net/\\\",\\r\\n    \\\"token\\\": \\\"ATATT3xFfGF0Ny6-iu6pRLVj6muV9Fo14vkaDYtHoM6KedzAswqOsEeT35jninWSGTiIEba-njKWT62at0uutdLHNuMB_ttYAq68rIgDFuq_Ec1_16QGQIbCjCTyPUDytHuzBlbbjr7cj_tAAORDctrJzBgk58xOlr-vieppaSaZtjSRckq6NFk=7746ECDB\\\"\\r\\n    }\"\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_appli_web}}/project/jira-projects",
										"description": "## Details:\n\n- This API is used to fetch all projects in Jira\n- This API shall be called first in order to integrate with Jira\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid(string) (mandatory)` | `kuid of the project being integrated with jira` |\n| `email(string) (mandatory)` | `project_kuid in which you want to fetch releases` |\n| `site_url (string) (mandatory)` | `hostname of your jira application` |\n| `token (string) (mandatory)` | `api token fetched from jira` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\n## Sample success response:\n\n``` json\n{\n    status: true,\n    projects: [  \n    {    \n        \"self\": \"https://yourjirainstance.com/rest/api/3/project/PROJ1\",    \n        \"id\": \"10001\",    \n        \"key\": \"PROJ1\",    \n        \"name\": \"Project 1\",    \n        \"avatarUrls\": {      \n            \"48x48\": \"https://yourjirainstance.com/secure/projectavatar?pid=10001&avatarId=10122\",      \n            \"24x24\": \"https://yourjirainstance.com/secure/projectavatar?size=small&pid=10001&avatarId=10122\",      \n            \"16x16\": \"https://yourjirainstance.com/secure/projectavatar?size=xsmall&pid=10001&avatarId=10122\",      \n            \"32x32\": \"https://yourjirainstance.com/secure/projectavatar?size=medium&pid=10001&avatarId=10122\"    \n        },    \n        \"projectCategory\": {      \n            \"self\": \"https://yourjirainstance.com/rest/api/3/projectCategory/10001\",      \n            \"id\": \"10001\",      \n            \"description\": \"Category 1\",      \n            \"name\": \"Category 1\"    \n        }  \n    },  \n    {    \n        \"self\": \"https://yourjirainstance.com/rest/api/3/project/PROJ2\",    \n        \"id\": \"10002\",    \n        \"key\": \"PROJ2\",    \n        \"name\": \"Project 2\",    \n        \"avatarUrls\": {      \n            \"48x48\": \"https://yourjirainstance.com/secure/projectavatar?pid=10002&avatarId=10122\",      \n            \"24x24\": \"https://yourjirainstance.com/secure/projectavatar?size=small&pid=10002&avatarId=10122\",      \n            \"16x16\": \"https://yourjirainstance.com/secure/projectavatar?size=xsmall&pid=10002&avatarId=10122\",      \n            \"32x32\": \"https://yourjirainstance.com/secure/projectavatar?size=medium&pid=10002&avatarId=10122\"    \n        },    \n        \"projectCategory\": {      \n            \"self\": \"https://yourjirainstance.com/rest/api/3/projectCategory/10002\",      \n            \"id\": \"10002\",      \n            \"description\": \"Category 2\",      \n            \"name\": \"Category 2\"    \n        } \n    }\n]\n}\n\n```"
									},
									"response": [
										{
											"name": "Get Jira projects",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{clientHandshakeToken}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"project_kuid\\\": \\\"9PoCm3bX8zuImAZ4Kwx55PXBzW7eDzz7\\\",\\r\\n    \\\"email\\\": \\\"sheheryar.afzal@o3interfaces.com\\\",\\r\\n    \\\"site_url\\\": \\\"https://fusioninspect.atlassian.net/\\\",\\r\\n    \\\"token\\\": \\\"ATATT3xFfGF0Ny6-iu6pRLVj6muV9Fo14vkaDYtHoM6KedzAswqOsEeT35jninWSGTiIEba-njKWT62at0uutdLHNuMB_ttYAq68rIgDFuq_Ec1_16QGQIbCjCTyPUDytHuzBlbbjr7cj_tAAORDctrJzBgk58xOlr-vieppaSaZtjSRckq6NFk=7746ECDB\\\"\\r\\n    }\"\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{app_web_services_endpoint}}/project/jira-projects"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "nginx/1.14.0 (Ubuntu)"
												},
												{
													"key": "Date",
													"value": "Sun, 30 Apr 2023 11:18:45 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "7286"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "ETag",
													"value": "W/\"1c76-V5XX7FCJIJT9SIFBF5QCBVAffvs\""
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": true,\n    \"projects\": [\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10016\",\n            \"id\": \"10016\",\n            \"key\": \"FUS\",\n            \"name\": \"Fusion\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10424\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10424?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10424?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10424?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": false,\n            \"style\": \"classic\",\n            \"isPrivate\": false,\n            \"properties\": {}\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10000\",\n            \"id\": \"10000\",\n            \"key\": \"FI\",\n            \"name\": \"Fusion Inspect\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": false,\n            \"style\": \"classic\",\n            \"isPrivate\": false,\n            \"properties\": {}\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10001\",\n            \"id\": \"10001\",\n            \"key\": \"IOS\",\n            \"name\": \"IOS_Fusion Inspect\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10406\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10406?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10406?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10406?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": true,\n            \"style\": \"next-gen\",\n            \"isPrivate\": false,\n            \"properties\": {},\n            \"entityId\": \"a14dbf1b-7632-44bd-b4a1-4f1ef29824f9\",\n            \"uuid\": \"a14dbf1b-7632-44bd-b4a1-4f1ef29824f9\"\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10003\",\n            \"id\": \"10003\",\n            \"key\": \"WFI\",\n            \"name\": \"Web_Fusion Inspect\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10412\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10412?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10412?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10412?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": true,\n            \"style\": \"next-gen\",\n            \"isPrivate\": false,\n            \"properties\": {},\n            \"entityId\": \"3d0acaa0-8abf-47e1-bd88-83830644d2a6\",\n            \"uuid\": \"3d0acaa0-8abf-47e1-bd88-83830644d2a6\"\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10004\",\n            \"id\": \"10004\",\n            \"key\": \"AFI\",\n            \"name\": \"Android SDK\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10405\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10405?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10405?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10405?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": false,\n            \"style\": \"classic\",\n            \"isPrivate\": false,\n            \"properties\": {}\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10005\",\n            \"id\": \"10005\",\n            \"key\": \"NG\",\n            \"name\": \"Angular Application\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10404?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": true,\n            \"style\": \"next-gen\",\n            \"isPrivate\": false,\n            \"properties\": {},\n            \"entityId\": \"00536df4-be9a-4519-ae56-1b7c7ac8ccd8\",\n            \"uuid\": \"00536df4-be9a-4519-ae56-1b7c7ac8ccd8\"\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10007\",\n            \"id\": \"10007\",\n            \"key\": \"FWS\",\n            \"name\": \"FI Web Services\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10417\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10417?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10417?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10417?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": true,\n            \"style\": \"next-gen\",\n            \"isPrivate\": false,\n            \"properties\": {},\n            \"entityId\": \"d988341c-0ed4-4c2b-8cc3-e17d7c4b0d7c\",\n            \"uuid\": \"d988341c-0ed4-4c2b-8cc3-e17d7c4b0d7c\"\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10009\",\n            \"id\": \"10009\",\n            \"key\": \"TRAN\",\n            \"name\": \"transroads\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10409\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10409?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10409?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10409?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": false,\n            \"style\": \"classic\",\n            \"isPrivate\": false,\n            \"properties\": {}\n        },\n        {\n            \"expand\": \"description,lead,issueTypes,url,projectKeys,permissions,insight\",\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/project/10015\",\n            \"id\": \"10015\",\n            \"key\": \"ABHI\",\n            \"name\": \"Abhi\",\n            \"avatarUrls\": {\n                \"48x48\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10401\",\n                \"24x24\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10401?size=small\",\n                \"16x16\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10401?size=xsmall\",\n                \"32x32\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10401?size=medium\"\n            },\n            \"projectTypeKey\": \"software\",\n            \"simplified\": false,\n            \"style\": \"classic\",\n            \"isPrivate\": false,\n            \"properties\": {}\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Get Jira Project Issue Types",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"if( pm.response.to.have.status(200)) {",
													"    const responseData = pm.response.json()",
													"    pm.collectionVariables.set(\"issue_Type\", responseData.issueTypes[0].name);",
													"",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "// {\r\n//     \"payload\":\"{\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"project_key\\\": \\\"FWS\\\"\\r\\n    }\"\r\n// }\r\n\r\n{\r\n    \"payload\":\"{\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n      \\\"project_name\\\": \\\"{{project_Name}}\\\",\\r\\n           \\\"project_key\\\": \\\"{{project_key}}\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_appli_web}}/project/jira-issue-types",
										"description": "## Details:\n\n- This API is used to fetch issue types in a jira project\n- This API shall be called after /jira-projects and before /jira-create-issue API\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid(string) (mandatory)` | `kuid of the project being integrated with jira` |\n| `project_key(string) (mandatory)` | `This is get in the response /jira-projects API against \"key\" parameter` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\n## Sample success response:\n\n``` json\n{\n    status: true,\n    issueTypes: {\n  \"expand\": \"schema,names\",\n  \"issueTypes\": [\n    {\n      \"self\": \"https://yourjirainstance.com/rest/api/2/issuetype/1\",\n      \"id\": \"1\",\n      \"description\": \"A problem which impairs or prevents the functions of the product.\",\n      \"iconUrl\": \"https://yourjirainstance.com/images/icons/issuetypes/bug.png\",\n      \"name\": \"Bug\",\n      \"subtask\": false\n    },\n    {\n      \"self\": \"https://yourjirainstance.com/rest/api/2/issuetype/3\",\n      \"id\": \"3\",\n      \"description\": \"A task that needs to be done.\",\n      \"iconUrl\": \"https://yourjirainstance.com/images/icons/issuetypes/task.png\",\n      \"name\": \"Task\",\n      \"subtask\": false\n    }\n  ]\n}\n}\n\n```"
									},
									"response": [
										{
											"name": "Get Jira Project Issue Types",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{clientHandshakeToken}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"payload\":\"{\\r\\n        \\\"project_kuid\\\": \\\"9PoCm3bX8zuImAZ4Kwx55PXBzW7eDzz7\\\",\\r\\n        \\\"project_key\\\": \\\"10016\\\"\\r\\n    }\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{app_web_services_endpoint}}/project/jira-issue-types"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "nginx/1.14.0 (Ubuntu)"
												},
												{
													"key": "Date",
													"value": "Sun, 30 Apr 2023 11:44:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "9831"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "ETag",
													"value": "W/\"2667-UFihu+W96EX9AT09orr/Va/7RBI\""
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": true,\n    \"issueTypes\": [\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10012\",\n            \"id\": \"10012\",\n            \"description\": \"Epics track collections of related bugs, stories, and tasks.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10307?size=medium\",\n            \"name\": \"Epic\",\n            \"untranslatedName\": \"Epic\",\n            \"subtask\": false,\n            \"avatarId\": 10307,\n            \"hierarchyLevel\": 1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10003\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10027\",\n            \"id\": \"10027\",\n            \"description\": \"Stories track functionality or features expressed as user goals.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10315?size=medium\",\n            \"name\": \"Story\",\n            \"untranslatedName\": \"Story\",\n            \"subtask\": false,\n            \"avatarId\": 10315,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10007\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10001\",\n            \"id\": \"10001\",\n            \"description\": \"Functionality or a feature expressed as a user goal.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10315?size=medium\",\n            \"name\": \"Story\",\n            \"untranslatedName\": \"Story\",\n            \"subtask\": false,\n            \"avatarId\": 10315,\n            \"hierarchyLevel\": 0\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10016\",\n            \"id\": \"10016\",\n            \"description\": \"Stories track functionality or features expressed as user goals.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10315?size=medium\",\n            \"name\": \"Story\",\n            \"untranslatedName\": \"Story\",\n            \"subtask\": false,\n            \"avatarId\": 10315,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10005\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10017\",\n            \"id\": \"10017\",\n            \"description\": \"Tasks track small, distinct pieces of work.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10318?size=medium\",\n            \"name\": \"Task\",\n            \"untranslatedName\": \"Task\",\n            \"subtask\": false,\n            \"avatarId\": 10318,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10005\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10026\",\n            \"id\": \"10026\",\n            \"description\": \"Subtasks track small pieces of work that are part of a larger task.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10316?size=medium\",\n            \"name\": \"Subtask\",\n            \"untranslatedName\": \"Subtask\",\n            \"subtask\": true,\n            \"avatarId\": 10316,\n            \"hierarchyLevel\": -1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10007\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10019\",\n            \"id\": \"10019\",\n            \"description\": \"Epics track collections of related bugs, stories, and tasks.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10307?size=medium\",\n            \"name\": \"Epic\",\n            \"untranslatedName\": \"Epic\",\n            \"subtask\": false,\n            \"avatarId\": 10307,\n            \"hierarchyLevel\": 1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10005\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10004\",\n            \"id\": \"10004\",\n            \"description\": \"A problem or error.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10303?size=medium\",\n            \"name\": \"Bug\",\n            \"untranslatedName\": \"Bug\",\n            \"subtask\": false,\n            \"avatarId\": 10303,\n            \"hierarchyLevel\": 0\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10000\",\n            \"id\": \"10000\",\n            \"description\": \"A big user story that needs to be broken down. Created by Jira Software - do not edit or delete.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/images/icons/issuetypes/epic.svg\",\n            \"name\": \"Epic\",\n            \"untranslatedName\": \"Epic\",\n            \"subtask\": false,\n            \"hierarchyLevel\": 1\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10011\",\n            \"id\": \"10011\",\n            \"description\": \"Tasks track small, distinct pieces of work.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10318?size=medium\",\n            \"name\": \"Task\",\n            \"untranslatedName\": \"Task\",\n            \"subtask\": false,\n            \"avatarId\": 10318,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10003\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10014\",\n            \"id\": \"10014\",\n            \"description\": \"Stories track functionality or features expressed as user goals.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10315?size=medium\",\n            \"name\": \"Story\",\n            \"untranslatedName\": \"Story\",\n            \"subtask\": false,\n            \"avatarId\": 10315,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10001\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10024\",\n            \"id\": \"10024\",\n            \"description\": \"Tasks track small, distinct pieces of work.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10318?size=medium\",\n            \"name\": \"Task\",\n            \"untranslatedName\": \"Task\",\n            \"subtask\": false,\n            \"avatarId\": 10318,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10007\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10006\",\n            \"id\": \"10006\",\n            \"description\": \"Epics track collections of related bugs, stories, and tasks.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10307?size=medium\",\n            \"name\": \"Epic\",\n            \"untranslatedName\": \"Epic\",\n            \"subtask\": false,\n            \"avatarId\": 10307,\n            \"hierarchyLevel\": 1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10001\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10020\",\n            \"id\": \"10020\",\n            \"description\": \"Subtasks track small pieces of work that are part of a larger task.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10316?size=medium\",\n            \"name\": \"Subtask\",\n            \"untranslatedName\": \"Subtask\",\n            \"subtask\": true,\n            \"avatarId\": 10316,\n            \"hierarchyLevel\": -1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10005\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10013\",\n            \"id\": \"10013\",\n            \"description\": \"Subtasks track small pieces of work that are part of a larger task.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10316?size=medium\",\n            \"name\": \"Subtask\",\n            \"untranslatedName\": \"Subtask\",\n            \"subtask\": true,\n            \"avatarId\": 10316,\n            \"hierarchyLevel\": -1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10003\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10028\",\n            \"id\": \"10028\",\n            \"description\": \"Bugs track problems or errors.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10303?size=medium\",\n            \"name\": \"Bug\",\n            \"untranslatedName\": \"Bug\",\n            \"subtask\": false,\n            \"avatarId\": 10303,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10007\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10002\",\n            \"id\": \"10002\",\n            \"description\": \"A small, distinct piece of work.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10318?size=medium\",\n            \"name\": \"Task\",\n            \"untranslatedName\": \"Task\",\n            \"subtask\": false,\n            \"avatarId\": 10318,\n            \"hierarchyLevel\": 0\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10052\",\n            \"id\": \"10052\",\n            \"description\": \"This JIRA Issue Type is used to create QAlity test case.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10551?size=medium\",\n            \"name\": \"QAlity Test\",\n            \"untranslatedName\": \"QAlity Test\",\n            \"subtask\": false,\n            \"avatarId\": 10551,\n            \"hierarchyLevel\": 0\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10025\",\n            \"id\": \"10025\",\n            \"description\": \"Epics track collections of related bugs, stories, and tasks.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10307?size=medium\",\n            \"name\": \"Epic\",\n            \"untranslatedName\": \"Epic\",\n            \"subtask\": false,\n            \"avatarId\": 10307,\n            \"hierarchyLevel\": 1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10007\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10005\",\n            \"id\": \"10005\",\n            \"description\": \"Tasks track small, distinct pieces of work.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10318?size=medium\",\n            \"name\": \"Task\",\n            \"untranslatedName\": \"Task\",\n            \"subtask\": false,\n            \"avatarId\": 10318,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10001\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10007\",\n            \"id\": \"10007\",\n            \"description\": \"Subtasks track small pieces of work that are part of a larger task.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10316?size=medium\",\n            \"name\": \"Subtask\",\n            \"untranslatedName\": \"Subtask\",\n            \"subtask\": true,\n            \"avatarId\": 10316,\n            \"hierarchyLevel\": -1,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10001\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10015\",\n            \"id\": \"10015\",\n            \"description\": \"Bugs track problems or errors.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10303?size=medium\",\n            \"name\": \"Bug\",\n            \"untranslatedName\": \"Bug\",\n            \"subtask\": false,\n            \"avatarId\": 10303,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10001\"\n                }\n            }\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10003\",\n            \"id\": \"10003\",\n            \"description\": \"A small piece of work that's part of a larger task.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10316?size=medium\",\n            \"name\": \"Sub-task\",\n            \"untranslatedName\": \"Sub-task\",\n            \"subtask\": true,\n            \"avatarId\": 10316,\n            \"hierarchyLevel\": -1\n        },\n        {\n            \"self\": \"https://fusioninspect.atlassian.net/rest/api/2/issuetype/10018\",\n            \"id\": \"10018\",\n            \"description\": \"Bugs track problems or errors.\",\n            \"iconUrl\": \"https://fusioninspect.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10303?size=medium\",\n            \"name\": \"Bug\",\n            \"untranslatedName\": \"Bug\",\n            \"subtask\": false,\n            \"avatarId\": 10303,\n            \"hierarchyLevel\": 0,\n            \"scope\": {\n                \"type\": \"PROJECT\",\n                \"project\": {\n                    \"id\": \"10005\"\n                }\n            }\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Create Jira Issue",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"payload\": \"{\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"issue_type\\\": \\\"{{issue_Type}}\\\"\\r\\n   }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_appli_web}}/project/jira-create-issue",
										"description": "## Details:\n\n- This API is used to create an issue in the Jira project\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid(string) (mandatory)` | `kuid of the project being integrated with jira` |\n| `issue_type(string) (mandatory)` | `name of the issue type which is get in the response /jira-issue-types API against \"name\" param` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\n## Sample success response:\n\n``` json\n{\n    status: true,\n    messsage: \"issue has been created\"\n}\n\n```"
									},
									"response": []
								},
								{
									"name": "Update jira integration details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": {\r\n    \"project_kuid\": \"{{project_kuid}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"site_url\": \"{{url}}\",\r\n    \"token\": \"\",\r\n    \"project_key\": \"\",\r\n    \"issue_type\": \"\"\r\n}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_appli_web}}/project/update-jira-integration"
									},
									"response": []
								},
								{
									"name": "Integration Details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n        \\\"integration_type\\\": \\\"xyz\\\"\\r\\n    }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_appli_web}}/project/integration-details"
									},
									"response": []
								},
								{
									"name": "Test Integration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{ \\n  \\\"token\\\": \\\"abc\\\", \\n\\\"workspace_url\\\": \\\"abc\\\", \\n\\\"issue_type\\\": \\\"abc\\\", \\n\\\"email\\\": \\\"abc\\\", \\n\\\"project_key\\\": \\\"abc\\\" \\n  \\n}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_appli_web}}/project/test-jira-integration"
									},
									"response": []
								}
							],
							"description": "Contains steps for integration of backend with jira"
						},
						{
							"name": "Zapier",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"project_kuid\": \"xyz\",\r\n    \"token\": \"https://webhookurl.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/integrate-zapier",
								"description": "## Details:\n\n- This API is used to integrate a project with Zapier for a user.\n    \n\n| **Parametes** | **Data Type** | **Notes** |\n| --- | --- | --- |\n| `project_kuid` | `string` | `kuid of the project to be integrated with Zapier` |\n| `token` | `string` | `Url provided by Zapier after successfull authentication` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "MS Teams",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"project_kuid\": \"{{project_kuid}}\",\r\n    \"token\": \"https://netorgft12338476.webhook.office.com/webhookb2/66703e20-09a9-42a1-b873-ccfab1119642@b9a5d5b0-d8a7-4ab4-8dbd-56701ce36097/IncomingWebhook/83c12e26b84646a7bcd7306a2ba65081/de4e1079-712d-4065-9eaf-e4bdb54adbc9\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/integrate-msteams",
								"description": "## Details:\n\n- This API is used to integrate a project with MS Teams for a user.\n    \n\n| **Parametes** | **Data Type** | **Notes** |\n| --- | --- | --- |\n| `project_kuid` | `string` | `kuid of the project to be integrated with MS Teams` |\n| `token` | `string` | `Url provided by MS Teams after successfull authentication` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Slack",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"payload\":\"{\\\"project_kuid\\\":\\\"{{project_kuid}}\\\",\\\"token\\\":\\\"https://hooks.slack.com/services/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\\\"}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/integrate-slack",
								"description": "## Details:\n\n- This API is used to integrate a project with Slack for a user.\n    \n\n| **Parametes** | **Data Type** | **Notes** |\n| --- | --- | --- |\n| `project_kuid` | `string` | `kuid of the project to be integrated with Slack` |\n| `token` | `string` | `Url provided by Slack after successfull authentication` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Project Integrations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"if( pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json()",
											"    pm.collectionVariables.set(\"integrationKuid\", responseData.integrations[0].integrationKuid);",
											"    pm.collectionVariables.set(\"integrationType\", responseData.integrations[0].integrationType);",
											"",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// const jsonData = pm.request.body.toJSON();",
											"// console.log(jsonData.raw.payload);",
											"// jsonData.payload.project_kuid.replace('projectKuid',pm.collectionVariables.projectKuid);",
											"// jsonData.payload = JSON.stringify(jsonData.payload);",
											"// pm.request.body.update(jsonData);",
											"// console.log(jsonData);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//     \"payload\": {\r\n//         \"project_kuid\": \"{{project_kuid}}\"\r\n//     }\r\n// }\r\n{\r\n    \"payload\": \"{\\r\\n        \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n    }\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/integrations",
								"description": "## Details:\n\n- This API is used to get list of integrations (active and inactive) for a project.\n    \n\n| **Parametes** | **Data Type** | **Notes** |\n| --- | --- | --- |\n| `project_kuid` | `string` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Toggle Integration state",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//     \"payload\": {\r\n//         \"integration_kuid\": \"{{integrationKuid}}\",\r\n//         \"state\": \"0/1\"\r\n//     }\r\n// }\r\n{\r\n    \"payload\": \"{\\r\\n        \\\"integration_kuid\\\": \\\"{{integrationKuid}}\\\",\\r\\n        \\\"state\\\": \\\"1\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/toggle-integration",
								"description": "## Details:\n\n- This API is used to toggle integration state (ON/OFF) in a project.\n    \n\n| **Parametes** | **Data Type** | **Notes** |\n| --- | --- | --- |\n| `integration_kuid` | `string` | `kuid of the integration (received in integrations API)` |\n| `state` | `enum = \"0\", \"1\"` | `0 means off, 1 means on` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Third party signin",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "ATATT3xFfGF0Ux-YwHBdYw_OzZgsZfNmCiNxrUJ-27eEdEHxDR_gpiTMrA7h1mHSOuRp8OB_tinc4qqINsaWdgBivessU0rdJ1gGdozIPsx-UqWzH29jFn7o6baBKaCd8zPzHGMo8vsSdMbsRJSM6_SIFXnxSqFS96PDOiGpZ-oQZNHG2Q9Fbpg=447B61D0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://hammadalii.atlassian.net/",
								"description": "## Details:\n\n- This API is used to toggle integration state (ON/OFF) in a project.\n    \n\n| **Parametes** | **Data Type** | **Notes** |\n| --- | --- | --- |\n| `integration_kuid` | `string` | `kuid of the integration (received in integrations API)` |\n| `state` | `enum = \"0\", \"1\"` | `0 means off, 1 means on` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Test Integration (Zapier, Slack, MS Teams)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{ \\n  \\\"token\\\": \\\"abc\\\", \\n  \\\"integration_type\\\": \\\"{{integrationType}}\\\"\\n  \\n}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/test-integration"
							},
							"response": []
						}
					]
				},
				{
					"name": "QA Test Cases",
					"item": [
						{
							"name": "Create Test Suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"OpenHiemer\\\",\\r\\n         \\\"description\\\": \\\"Something\\\"\\r\\n  }\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/create-test-suite",
								"description": "## Details:\n\n- This API is used to create test suite\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `title (string) (mandatory)` | `title of the suite` |\n| `description (string) (mandatory)` | `description of the suite` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Create Test Suite",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"my first suite\\\",\\r\\n         \\\"description\\\": \\\"Something\\\"\\r\\n  }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/create-test-suite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-QGoL5xwmZoDo+sBMecmOAvYC+8k\""
										},
										{
											"key": "Date",
											"value": "Sat, 01 Apr 2023 16:08:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully Created\"\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Test Suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// if( pm.response.to.have.status(200)) {",
											"//     const responseData = pm.response.json()",
											"//     pm.collectionVariables.set(\"suiteKuid\", responseData.fetchTestSuite[0].suiteKuid);",
											"// }",
											"",
											"if (pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json();",
											"    const lastSuite = responseData.fetchTestSuite[responseData.fetchTestSuite.length - 1];",
											"    pm.collectionVariables.set(\"suiteKuid\", lastSuite.suiteKuid);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-test-suite",
								"description": "## Details:\n\n- This API is used to fetch test suite\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Test Suite",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/fetch-test-suite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "197"
										},
										{
											"key": "ETag",
											"value": "W/\"c5-k+hJxZyAzfp4GBgDQtx9HOLwlmg\""
										},
										{
											"key": "Date",
											"value": "Sat, 01 Apr 2023 16:10:18 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"fetchTestSuite\": [\n        {\n            \"testCases\": 0,\n            \"suiteKuid\": \"3XVU6rlhYPvVyAyKR14wkDTqM01rb7bS\",\n            \"suiteTitle\": \"my first suite\",\n            \"suitedescription\": \"Something\",\n            \"createdAt\": \"2023-04-01T16:07:22.000Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Search Test Suite",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"OpenHiemer\\\"\\r\\n         }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/search-test-suite",
								"description": "## Details:\n\n- This API is used to search test suite\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `title (sting) (mandatory)` | `title of a suite` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Search Test Suite",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"f\\\"\\r\\n         }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/search-test-suite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "ETag",
											"value": "W/\"77-0G1L0ay1kLCGPWku15vXEtKoe4I\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Apr 2023 11:00:28 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"fetchTestSuite\": [\n        {\n            \"testCases\": 4,\n            \"suiteTitle\": \"my first suite\",\n            \"createdAt\": \"2023-04-01T16:07:22.000Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Test Suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"suite_kuid\\\": \\\"{{suiteKuid}}\\\",\\r\\n         \\\"suite_title\\\": \\\"OpenHiemer Suite Title\\\",\\r\\n         \\\"suite_description\\\": \\\"Nothing \\\"\\r\\n  }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-test-suite",
								"description": "## Details:\n\n- This API is used to update test suite\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `suite_kuid (sting) (mandatory)` | `kuid of the suite in which you want to update details` |\n| `title (string) (mandatory)` | `title of the suite` |\n| `description (string) (mandatory)` | `description of the suite` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Update Test Suite",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"suite_kuid\\\": \\\"wsExeFV5B0Lch5l4QTk7GKxdrmnWwJLr\\\",\\r\\n         \\\"suite_title\\\": \\\"Updated Suite Title\\\",\\r\\n         \\\"suite_description\\\": \\\"Nothing \\\"\\r\\n  }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/update-test-suite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-gfnvhuRrqG3E167+l/nWwYA4vBE\""
										},
										{
											"key": "Date",
											"value": "Mon, 03 Apr 2023 07:41:57 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully updated\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create Test Case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"Barbie\\\",\\r\\n    \\\"suite_kuid\\\": \\\"{{suiteKuid}}\\\",\\r\\n      \\\"description\\\": \\\"\\\",\\r\\n    \\\"type\\\": \\\"non_functional\\\",\\r\\n         \\\"subSteps\\\": [{ \\\"steps\\\": \\\"go to signin screen\\\", \\\"expectedResult\\\": \\\"mdmfwekkl fwqd\\\"}, { \\\"steps\\\": \\\" signin screen\\\", \\\"expectedResult\\\": \\\"success\\\"}],\\r\\n      \\\"subStepCount\\\": 2 \\r\\n      }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/create-test-case",
								"description": "## Details:\n\n- This API is used to create test case\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `type (sting) (mandatory)` | `type of the test case (functional or non_function)` |\n| `title (string) (mandatory)` | `title of the suite` |\n| `description (string) (mandatory)` | `description of the suite` |\n| `subStepCount (Number) (mandatory)` | `Count of Steps in a test case` |\n| `subSteps (string) (mandatory)` | `subSteps is a array of object in each object there are 2 keys and 2 values (step, expedtecResult)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Create Test Case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"Fifth Test Case\\\",\\r\\n         \\\"description\\\": \\\"Something dummy\\\",\\r\\n    \\\"type\\\": \\\"non_functional\\\",\\r\\n         \\\"subSteps\\\": [{ \\\"steps\\\": \\\"go to signin screen\\\", \\\"expectedResult\\\": \\\"mdmfwekkl fwqd\\\"}, { \\\"steps\\\": \\\" signin screen\\\", \\\"expectedResult\\\": \\\"success\\\"}],\\r\\n      \\\"subStepCount\\\": 2 \\r\\n      }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/create-test-case"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-QGoL5xwmZoDo+sBMecmOAvYC+8k\""
										},
										{
											"key": "Date",
											"value": "Sat, 01 Apr 2023 20:42:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully Created\"\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Test Cases",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"if( pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json()",
											"    pm.collectionVariables.set(\"testCaseId\", responseData.fetchTestCase[0].testCaseId);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n      \\\"suite_kuid\\\": \\\"{{suiteKuid}}\\\"\\r\\n  }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-test-case",
								"description": "## Details:\n\n- This API is used to Fetch test case\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Test Cases",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/fetch-test-case"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "467"
										},
										{
											"key": "ETag",
											"value": "W/\"1d3-JKk9f4sIhx80Y/G/Uk8ZTPlDaUk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Apr 2023 10:03:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"fetchTestCase\": [\n        {\n            \"testCaseId\": 9,\n            \"testCaseTitle\": \"\",\n            \"type\": \"non_functional\",\n            \"subStepsCount\": 2,\n            \"subSteps\": {\n                \"step1\": \"go to signin screen\",\n                \"expectedResult1\": \"mdmfwekkl fwqd\",\n                \"step2\": \" signin screen\",\n                \"expectedResult2\": \"success\"\n            }\n        },\n        {\n            \"testCaseId\": 10,\n            \"testCaseTitle\": \"Fifth Test Case\",\n            \"type\": \"non_functional\",\n            \"subStepsCount\": 2,\n            \"subSteps\": {\n                \"step1\": \"go to signin screen\",\n                \"expectedResult1\": \"mdmfwekkl fwqd\",\n                \"step2\": \" signin screen\",\n                \"expectedResult2\": \"success\"\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Test Case",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n    \\\"test_case_id\\\": \\\"{{testCaseId}}\\\",\\r\\n    \\\"title\\\": \\\"Barbie2\\\",\\r\\n         \\\"description\\\": \\\"Something dummy\\\",\\r\\n    \\\"type\\\": \\\"non_functional\\\",\\r\\n         \\\"subSteps\\\": [{ \\\"steps\\\": \\\"go to signin screen\\\", \\\"expectedResult\\\": \\\"mdmfwekkl fwqd\\\"}, { \\\"steps\\\": \\\" signin screen\\\", \\\"expectedResult\\\": \\\"success\\\"}],\\r\\n      \\\"subStepCount\\\": 2 \\r\\n      }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-test-case",
								"description": "## Details:\n\n- This API is used to update test case\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `testCaseId (int) (mandatory)` | `Test Case Id in which you want to update` |\n| `type (sting) (mandatory)` | `type of the test case (functional or non_function)` |\n| `title (string) (mandatory)` | `title of the suite` |\n| `description (string) (mandatory)` | `description of the suite` |\n| `subStepCount (Number) (mandatory)` | `Count of Steps in a test case` |\n| `subSteps (string) (mandatory)` | `subSteps is a array of object in each object there are 2 keys and 2 values (step, expedtecResult)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Update Test Case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n    \\\"test_case_id\\\": \\\"8\\\",\\r\\n    \\\"title\\\": \\\"Fifth Test Case\\\",\\r\\n         \\\"description\\\": \\\"Something dummy\\\",\\r\\n    \\\"type\\\": \\\"non_functional\\\",\\r\\n         \\\"subSteps\\\": [{ \\\"steps\\\": \\\"go to signin screen\\\", \\\"expectedResult\\\": \\\"mdmfwekkl fwqd\\\"}, { \\\"steps\\\": \\\" signin screen\\\", \\\"expectedResult\\\": \\\"success\\\"}],\\r\\n      \\\"subStepCount\\\": 2 \\r\\n      }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/update-test-case"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-gfnvhuRrqG3E167+l/nWwYA4vBE\""
										},
										{
											"key": "Date",
											"value": "Sat, 01 Apr 2023 20:53:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully updated\"\n    }\n}"
								}
							]
						},
						{
							"name": "Search Test Case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"barbie\\\"\\r\\n         }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/search-test-case",
								"description": "## Details:\n\n- This API is used to search test case\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `title (string) (mandatory)` | `title of the suite` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Search Test Case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"fifth\\\"\\r\\n         }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/search-test-case"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "254"
										},
										{
											"key": "ETag",
											"value": "W/\"fe-Kh4IYWKN9OaSFqPKUEX8IpFZgbg\""
										},
										{
											"key": "Date",
											"value": "Mon, 03 Apr 2023 07:17:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"TestCases\": [\n        {\n            \"testCaseId\": 10,\n            \"testCaseTitle\": \"Fifth Test Case\",\n            \"type\": \"non_functional\",\n            \"subStepsCount\": 2,\n            \"subSteps\": {\n                \"step1\": \"go to signin screen\",\n                \"expectedResult1\": \"mdmfwekkl fwqd\",\n                \"step2\": \" signin screen\",\n                \"expectedResult2\": \"success\"\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Assignees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"if( pm.response.to.have.status(200)) {\r",
											"    const responseData = pm.response.json()\r",
											"    pm.collectionVariables.set(\"assignee_kuid\", responseData.fetchMemberInfo[1].memberKuid);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"Handshake variable:  \", pm.collectionVariables.get(\"clientHandshakeToken\"));\r",
											"if( pm.collectionVariables.get(\"clientHandshakeToken\") == null || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"clientHandshakeToken\") == \"\") {\r",
											"        const agent_iam = pm.collectionVariables.get(\"agent_iam\");\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/client-handshake\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json' },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": `{\\r\\n        \\\"agent_iam\\\": \\\"${agent_iam}\\\"\\r\\n    }`})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"jsonData: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"clientHandshakeToken\", jsonData.token);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"passportToken\") == null || \r",
											"    pm.collectionVariables.get(\"passportToken\") == undefined || \r",
											"    pm.collectionVariables.get(\"passportToken\") == \"\") {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/sign-in\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    body: {      \r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\"payload\": \"{\\r\\n        \\\"email\\\": \\\"harisnazir26@gmail.com\\\",\\r\\n        \\\"password\\\": \\\"123456789\\\"\\r\\n    }\"})\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/sign-in response: \", jsonData);\r",
											"    console.log(\"token: \"+ jsonData.token );\r",
											"    pm.collectionVariables.set(\"passportToken\", jsonData.passportToken);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_listWorkspaces_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/user-workspaces\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/user-workspaces response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_listWorkspaces_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_ownedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/owned/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/owned/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_ownedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											"\r",
											"if( pm.collectionVariables.get(\"is_sharedProjectListing_called\") == 0) {\r",
											"    const req_options = {\r",
											"    url: \"http://identity-mgt.transroadservices.com/api/v1/shared/project-list\",\r",
											"    method: 'POST',\r",
											"    header: { 'content-type': 'application/json', 'Authorization': pm.collectionVariables.get(\"clientHandshakeToken\") },\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(req_options, function (err, response) {\r",
											"    var jsonData = response.json();\r",
											"    console.log(\"/shared/project-list response: \", jsonData);\r",
											"    pm.collectionVariables.set(\"is_sharedProjectListing_called\", 1);\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\n  \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\n  }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-assignees",
								"description": "## Details:\n\n- This API is used tosearch bugs.\n- Upon http status code 403, show a relevant message i.e. user does not have permission to create project in a specific workspace.\n- Upon http status code 503, call mobile/web app handshake again and then sign in user.\n- NOTE: Make sure, among parameters: search_query, tags, assignees, status, at least 1 parameter must not be empty.\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace kuid in which the logged in user is creating project` |\n| `project_kuid (string) (mandatory)` | `title of the project` |\n| `search_query (string) (mandatory)` | `the text to be searched in bugs' title or description   (can be sent empty)` |\n| `tags (array) (mandatory)` | `array of tags ids   (can be sent empty array)` |\n| `assignees (array) (mandatory)` | `array of assignees' ids   (can be sent empty array)` |\n| `status (string) (mandatory)` | `resolution status of the bug i.e to_do, in-progress, done` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Assignees",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \"{\\n  \\\"workspace_kuid\\\": \\\"fcvajsafwl4ifqisobn3wnqlciul3dnb\\\",\\n  \\\"project_kuid\\\": \\\"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\\\"\\n  }\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://application-webservices.transroadservices.com/api/v1/project/fetch-assignees"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.14.0 (Ubuntu)"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Jan 2023 05:07:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "444"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "ETag",
											"value": "W/\"1bc-82M9QYOoApZ565tdrxqM9VUU4Lw\""
										}
									],
									"cookie": [],
									"body": "{\n    \"workspace_kuid\": \"fcvajsafwl4ifqisobn3wnqlciul3dnb\",\n    \"project_kuid\": \"X6sCzgB46Zkj4pjoklAMuDQFbO0jjXZO\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJ4VU1ObmtKUTFnQ29SemJPUHVUUEFOb3gxVUsyREZGRyIsImlhdCI6MTY3MzI0MDcyOSwiZXhwIjoxNjc1ODMyNzI5fQ.gXOb5r-42wmBflso2Kzi31PyVNuwkhl9T7qKIk_ZTDA\",\n    \"Assignees\": [\n        {\n            \"name\": \"Haris Nazir\",\n            \"kuid\": \"dfa6e6f35402482785c992e85791bf86\",\n            \"avatar\": \"https://avatar.com\",\n            \"groupName\": \"iOS Engineering\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Create Test Run",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"title\\\": \\\"AntMan\\\",\\r\\n         \\\"description\\\": \\\"something\\\",\\r\\n    \\\"assignee_kuid\\\": \\\"{{assignee_kuid}}\\\",\\r\\n         \\\"test_suites\\\": [\\\"{{suiteKuid}}\\\"]\\r\\n            }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/create-test-run",
								"description": "## Details:\n\n- This API is used to create test run\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test run` |\n| `title (sting) (mandatory)` | `title of a Test Run` |\n| `description (string) (mandatory)` | `description of the test run` |\n| `assignee_kuid (string) (mandatory)` | kuid of the user |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Fetch Test Run",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"if( pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json()",
											"    pm.collectionVariables.set(\"runable_Kuid\", responseData.fetchTestRun[0].runnableKuid);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-test-run",
								"description": "## Details:\n\n- This API is used to fetch test run\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to fetch test run` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Fetch Test Run",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/fetch-test-run"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "4146"
										},
										{
											"key": "ETag",
											"value": "W/\"1032-W5MeiQPFiFI2PQrgKn3Lg0AlnpQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 03 Apr 2023 06:01:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"fetchTestRun\": [\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n            \"status\": \"unexecuted\"\n        },\n        {\n            \"runnableKuid\": \"ajfdfnm2311\",\n            \"runnableTitle\": \"signup\",\n            \"runnableDesc\": \"some thing\",\n            \"fullName\": \"Muhammad Azhar\",\n            \"avatar\": null,\n            \"createdOn\": \"2023-04-03T06:00:47.000Z\",\n            \"status\": \"unexecuted\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Test Case status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"status\\\": \\\"passed\\\",\\r\\n     \\\"suite_kuid\\\": \\\"{{suiteKuid}}\\\",\\r\\n        \\\"runable_kuid\\\": \\\"{{runable_Kuid}}\\\",\\r\\n   \\\"test_case_id\\\": \\\"{{testCaseId}}\\\"\\r\\n           }\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-test-case-status",
								"description": "## Details:\n\n- This API is used to update test case\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `testCaseId (int) (mandatory)` | `Test Case Id in which you want to update` |\n| `type (sting) (mandatory)` | `type of the test case (functional or non_function)` |\n| `title (string) (mandatory)` | `title of the suite` |\n| `description (string) (mandatory)` | `description of the suite` |\n| `subStepCount (Number) (mandatory)` | `Count of Steps in a test case` |\n| `subSteps (string) (mandatory)` | `subSteps is a array of object in each object there are 2 keys and 2 values (step, expedtecResult)` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Update Test Case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n    \\\"test_case_id\\\": \\\"8\\\",\\r\\n    \\\"title\\\": \\\"Fifth Test Case\\\",\\r\\n         \\\"description\\\": \\\"Something dummy\\\",\\r\\n    \\\"type\\\": \\\"non_functional\\\",\\r\\n         \\\"subSteps\\\": [{ \\\"steps\\\": \\\"go to signin screen\\\", \\\"expectedResult\\\": \\\"mdmfwekkl fwqd\\\"}, { \\\"steps\\\": \\\" signin screen\\\", \\\"expectedResult\\\": \\\"success\\\"}],\\r\\n      \\\"subStepCount\\\": 2 \\r\\n      }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/update-test-case"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-gfnvhuRrqG3E167+l/nWwYA4vBE\""
										},
										{
											"key": "Date",
											"value": "Sat, 01 Apr 2023 20:53:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully updated\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Test Run Status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"status\\\": \\\"passed\\\",\\r\\n   \\\"runable_kuid\\\": \\\"{{runable_Kuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-test-run-status"
							},
							"response": [
								{
									"name": "Update Test Run Status",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"status\\\": \\\"passed\\\",\\r\\n   \\\"runable_kuid\\\": \\\"ajfdfnm2311\\\"\\r\\n           }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/update-test-run-status"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-gfnvhuRrqG3E167+l/nWwYA4vBE\""
										},
										{
											"key": "Date",
											"value": "Mon, 03 Apr 2023 06:02:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully updated\"\n    }\n}"
								}
							]
						},
						{
							"name": "Test Run Dashboard",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"runable_kuid\\\": \\\"{{runable_Kuid}}\\\"\\r\\n           }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/test-run-dashboard"
							},
							"response": [
								{
									"name": "Test Run Dashboard",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"runable_kuid\\\": \\\"ajfdfnm2311\\\"\\r\\n           }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/test-run-dashboard"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "271"
										},
										{
											"key": "ETag",
											"value": "W/\"10f-CBdnnQRvxNnsqu0L1v7ohl3zzQ8\""
										},
										{
											"key": "Date",
											"value": "Mon, 03 Apr 2023 07:04:42 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"statsSum\": {\n        \"passed\": 100,\n        \"total\": 11,\n        \"failed\": 0,\n        \"invalid\": 0,\n        \"blocked\": 0,\n        \"skipped\": 0,\n        \"problem\": 0,\n        \"unexecuted\": 0\n    },\n    \"details\": {\n        \"totalsuite\": 4,\n        \"createdOn\": \"2023-04-03T06:00:10.000Z\",\n        \"fullName\": \"Muhammad Azhar\",\n        \"avatar\": null,\n        \"progress\": 100\n    },\n    \"testRunDashboard\": []\n}"
								}
							]
						},
						{
							"name": "Fetch Test Cycle Cases",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n       \\\"runable_kuid\\\": \\\"{{runable_Kuid}}\\\"\\r\\n     }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-test-cycle-cases"
							},
							"response": []
						},
						{
							"name": "Delete Test Suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n       \\\"suite_kuid\\\": \\\"{{suiteKuid}}\\\"\\r\\n       }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-test-suite",
								"description": "## Details:\n\n- This API is used to delete test suite\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `suite_kuid (sting) (mandatory)` | `kuid of the suite in which you want to update details` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Delete Test Suite",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n       \\\"suite_kuid\\\": \\\"wsExeFV5B0Lch5l4QTk7GKxdrmnWwJLr\\\"\\r\\n       }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/delete-test-suite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-NKPABXjWnLIDHNIfhF2NL3lKwHw\""
										},
										{
											"key": "Date",
											"value": "Mon, 03 Apr 2023 07:42:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully deleted\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Test Cases",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n    \\\"test_case_id\\\": \\\"{{testCaseId}}\\\"\\r\\n   }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-test-case",
								"description": "## Details:\n\n- This API is used to delete test case\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `project_kuid (string) (mandatory)` | `project kuid in which the user want to create test suite` |\n| `testCaseId (int) (mandatory)` | `test Czse Id` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": [
								{
									"name": "Delete Test Cases",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n    \\\"test_case_id\\\": \\\"8\\\"\\r\\n   }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/delete-test-case"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-NKPABXjWnLIDHNIfhF2NL3lKwHw\""
										},
										{
											"key": "Date",
											"value": "Sat, 01 Apr 2023 20:57:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully deleted\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Test Run",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"runable_kuid\\\": \\\"{{runable_Kuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-test-run"
							},
							"response": [
								{
									"name": "Delete Test Run",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{clientHandshakeToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n   \\\"runable_kuid\\\": \\\"ajfdfnssssssnm\\\"\\r\\n           }\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:8006/api/v1/project/delete-test-run"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "ETag",
											"value": "W/\"5c-NKPABXjWnLIDHNIfhF2NL3lKwHw\""
										},
										{
											"key": "Date",
											"value": "Mon, 03 Apr 2023 06:31:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"message\": {\n        \"code\": \"\",\n        \"title\": \"success\",\n        \"description\": \"successfully deleted\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Distribution",
					"item": [
						{
							"name": "Fetch Releases",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json();",
											"    pm.collectionVariables.set(\"releaseKuid\", responseData.fetchReleases[0].releaseKuid);",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-releases",
								"description": "## Details:\n\n- This API is used to fetch releases\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to fetch release` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to fetch releases` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Upload APK Release",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "application",
											"type": "file",
											"src": "/Users/home/Downloads/Fusion_App-release-1.0.911-16-03-23_04-04.apk"
										},
										{
											"key": "payload",
											"value": "{\"workspace_kuid\": \"{{ownworkspace_kuid}}\", \"project_kuid\": \"{{project_kuid}}\",  \"note\": \"pehli pehli release\"}",
											"type": "text"
										}
									]
								},
								"url": "{{base_url_appli_web}}/project/upload-apk-release",
								"description": "## Details:\n\n- This API is used to upload apk file\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to upload release` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to upload release` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Fetch Releases",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json();",
											"    pm.collectionVariables.set(\"releaseKuid\", responseData.fetchReleases[0].releaseKuid);",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-releases",
								"description": "## Details:\n\n- This API is used to fetch releases\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to fetch release` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to fetch releases` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "create Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n       \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n     \\\"name\\\": \\\"It Group\\\",\\r\\n   \\\"description\\\": \\\"\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/create-group",
								"description": "## Details:\n\n- This API is used to create group\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `name (string) (mandatory)` | `name of a group` |\n| `description (sting) (optional)` | `description of a group` |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to create group` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to create group` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Fetch Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json();",
											"    pm.collectionVariables.set(\"groupKuid\", responseData.fetchGroups[0].groupKuid);",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n         \\\"release_kuid\\\": \\\"\\\"\\r\\n        }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-groups",
								"description": "## Details:\n\n- This API is used to create groups\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `release_kuid (string) (optional)` | `release in which you want to fetch groups` |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to fetch group` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to fetch group` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Update Group Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n              \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n      \\\"name\\\": \\\"O3 updated Group\\\",\\r\\n   \\\"description\\\": \\\"This group dflkqjeflwkrejfjrewfoqjvpo\\\",\\r\\n       \\\"group_kuid\\\": \\\"{{groupKuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-group-details"
							},
							"response": []
						},
						{
							"name": "Create Tester",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"name\\\": \\\"Usman test\\\",\\r\\n   \\\"email\\\": \\\"multi@gmail.com\\\",\\r\\n         \\\"group_kuids\\\": [\\\"{{groupKuid}}\\\"],\\r\\n      \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/create-tester",
								"description": "## Details:\n\n- This API is used to create tester\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `name (string) (mandatory)` | `name of a tester` |\n| `email(sting) (mandatory)` | `email of a tester` |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to create tester` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to create tester` |\n| `group_kuid (string) (optional)` | `group in which you want to add` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Fetch Tester",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.to.have.status(200)) {",
											"    const responseData = pm.response.json();",
											"    pm.collectionVariables.set(\"testerKuid\", responseData.testers[0].testerKuid);",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"release_kuid\\\": \\\"\\\",\\r\\n         \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n         }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-tester",
								"description": "## Details:\n\n- This API is used to fetch tester\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `release_kuid (string) (optional)` | `release in which you want to fetch tester` |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to fetch tester` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to fetch tester` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Update Tester Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"name\\\": \\\"Thorr\\\",\\r\\n   \\\"tester_kuid\\\": \\\"{{testerKuid}}\\\",\\r\\n              \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n            }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/update-tester-name",
								"description": "## Details:\n\n- This API is used to update tester name\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `name (string) (mandatory)` | `name of a tester` |\n| `tester_kuid (sting) (mandatory)` | `kuid of a tester` |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of teh project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Add Groups to Release",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"group_kuids\\\": [\\\"{{groupKuid}}\\\"],\\r\\n   \\\"release_kuid\\\": \\\"{{releaseKuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/add-group-to-release"
							},
							"response": []
						},
						{
							"name": "Add Testers To Release",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"tester_kuids\\\": [\\\"{{testerKuid}}\\\"],\\r\\n   \\\"release_kuid\\\": \\\"{{releaseKuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/add-tester-to-release",
								"description": "StartFragment\n\n## Details:\n\n- This API is used to add testers in a release\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `tester_kuid (array) (mandatory)` | `kuids of the tesers` |\n| `release_kuid (string) (mandatory)` | `kuid of the release` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment\n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Fetch Releases Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n          \\\"release_kuid\\\": \\\"{{releaseKuid}}\\\"\\r\\n  }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/fetch-release-details",
								"description": "## Details:\n\n- This API is used to fetch releases\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to fetch release` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to fetch releases` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Fetch Tester Without Release",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n          \\\"release_kuid\\\": \\\"{{releaseKuid}}\\\",\\r\\n         \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n         }\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/testers-without-release"
							},
							"response": []
						},
						{
							"name": "Fetch Plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/fetch-plans",
								"description": "## Details:\n\n- This API is used to fetch releases\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to fetch release` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to fetch releases` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						},
						{
							"name": "Remove Tester",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"tester_kuid\\\": \\\"{{testerKuid}}\\\",\\r\\n         \\\"release_kuid\\\": \\\"{{releaseKuid}}\\\"\\r\\n    }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/remove-tester-in-release",
								"description": "## Details:\n\n- This API is used to remove tester\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `tester_kuid (sting) (mandatory)` | `kuid of a tester` |\n| `release_kuid (string) (manadatory)` | `release in which you want to remove` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Delete Tester",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n      \\\"tester_kuid\\\": \\\"{{testerKuid}}\\\",\\r\\n        \\\"workspace_kuid\\\": \\\"{{workspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\"\\r\\n     }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-tester",
								"description": "## Details:\n\n- This API is used to delete tester\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `tester_kuid (sting) (mandatory)` | `kuid of a tester` |\n| `workspace_kuid (string) (mandatory)` | `kuid of the workspace` |\n| `project_kuid (string) (mandatory)` | `kuid of the project` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API."
							},
							"response": []
						},
						{
							"name": "Delete Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{clientHandshakeToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"payload\": \" {\\r\\n              \\\"workspace_kuid\\\": \\\"{{ownworkspace_kuid}}\\\",\\r\\n          \\\"project_kuid\\\": \\\"{{project_kuid}}\\\",\\r\\n       \\\"group_kuid\\\": \\\"{{groupKuid}}\\\"\\r\\n           }\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_appli_web}}/project/delete-group",
								"description": "## Details:\n\n- This API is used to delete Group\n    \n\n| **Parametes** | **Notes** |\n| --- | --- |\n| `workspace_kuid (string) (mandatory)` | `workspace_kuid in which you want to delete group` |\n| `project_kuid (string) (mandatory)` | `project_kuid in which you want to delete group` |\n| `group_kuid (string) (mandatory)` | `kuid of the group that you want to delete` |\n\n> IMPORTANT: Requires token (in Authorization header) which is received in the response of sign-in API or Email OTP verification API. \n  \n\nEndFragment"
							},
							"response": []
						}
					]
				}
			]
		}
	]
}